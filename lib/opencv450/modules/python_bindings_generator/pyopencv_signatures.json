{"cv::SORT_EVERY_ROW": [{"name": "cv.SORT_EVERY_ROW", "value": "0"}], "cv::SORT_EVERY_COLUMN": [{"name": "cv.SORT_EVERY_COLUMN", "value": "1"}], "cv::SORT_ASCENDING": [{"name": "cv.SORT_ASCENDING", "value": "0"}], "cv::SORT_DESCENDING": [{"name": "cv.SORT_DESCENDING", "value": "16"}], "cv::COVAR_SCRAMBLED": [{"name": "cv.COVAR_SCRAMBLED", "value": "0"}], "cv::COVAR_NORMAL": [{"name": "cv.COVAR_NORMAL", "value": "1"}], "cv::COVAR_USE_AVG": [{"name": "cv.COVAR_USE_AVG", "value": "2"}], "cv::COVAR_SCALE": [{"name": "cv.COVAR_SCALE", "value": "4"}], "cv::COVAR_ROWS": [{"name": "cv.COVAR_ROWS", "value": "8"}], "cv::COVAR_COLS": [{"name": "cv.COVAR_COLS", "value": "16"}], "cv::KMEANS_RANDOM_CENTERS": [{"name": "cv.KMEANS_RANDOM_CENTERS", "value": "0"}], "cv::KMEANS_PP_CENTERS": [{"name": "cv.KMEANS_PP_CENTERS", "value": "2"}], "cv::KMEANS_USE_INITIAL_LABELS": [{"name": "cv.KMEANS_USE_INITIAL_LABELS", "value": "1"}], "cv::REDUCE_SUM": [{"name": "cv.REDUCE_SUM", "value": "0"}], "cv::REDUCE_AVG": [{"name": "cv.REDUCE_AVG", "value": "1"}], "cv::REDUCE_MAX": [{"name": "cv.REDUCE_MAX", "value": "2"}], "cv::REDUCE_MIN": [{"name": "cv.REDUCE_MIN", "value": "3"}], "cv::ROTATE_90_CLOCKWISE": [{"name": "cv.ROTATE_90_CLOCKWISE", "value": "0"}], "cv::ROTATE_180": [{"name": "cv.ROTATE_180", "value": "1"}], "cv::ROTATE_90_COUNTERCLOCKWISE": [{"name": "cv.ROTATE_90_COUNTERCLOCKWISE", "value": "2"}], "cv::PCA::DATA_AS_ROW": [{"name": "cv.PCA_DATA_AS_ROW", "value": "0"}], "cv::PCA::DATA_AS_COL": [{"name": "cv.PCA_DATA_AS_COL", "value": "1"}], "cv::PCA::USE_AVG": [{"name": "cv.PCA_USE_AVG", "value": "2"}], "cv::SVD::MODIFY_A": [{"name": "cv.SVD_MODIFY_A", "value": "1"}], "cv::SVD::NO_UV": [{"name": "cv.SVD_NO_UV", "value": "2"}], "cv::SVD::FULL_UV": [{"name": "cv.SVD_FULL_UV", "value": "4"}], "cv::RNG::UNIFORM": [{"name": "cv.RNG_UNIFORM", "value": "0"}], "cv::RNG::NORMAL": [{"name": "cv.RNG_NORMAL", "value": "1"}], "cv::Formatter::FMT_DEFAULT": [{"name": "cv.Formatter_FMT_DEFAULT", "value": "0"}], "cv::Formatter::FMT_MATLAB": [{"name": "cv.Formatter_FMT_MATLAB", "value": "1"}], "cv::Formatter::FMT_CSV": [{"name": "cv.Formatter_FMT_CSV", "value": "2"}], "cv::Formatter::FMT_PYTHON": [{"name": "cv.Formatter_FMT_PYTHON", "value": "3"}], "cv::Formatter::FMT_NUMPY": [{"name": "cv.Formatter_FMT_NUMPY", "value": "4"}], "cv::Formatter::FMT_C": [{"name": "cv.Formatter_FMT_C", "value": "5"}], "cv::Algorithm": [{"name": "cv.Algorithm"}], "cv::Param::INT": [{"name": "cv.Param_INT", "value": "0"}], "cv::Param::BOOLEAN": [{"name": "cv.Param_BOOLEAN", "value": "1"}], "cv::Param::REAL": [{"name": "cv.Param_REAL", "value": "2"}], "cv::Param::STRING": [{"name": "cv.Param_STRING", "value": "3"}], "cv::Param::MAT": [{"name": "cv.Param_MAT", "value": "4"}], "cv::Param::MAT_VECTOR": [{"name": "cv.Param_MAT_VECTOR", "value": "5"}], "cv::Param::ALGORITHM": [{"name": "cv.Param_ALGORITHM", "value": "6"}], "cv::Param::FLOAT": [{"name": "cv.Param_FLOAT", "value": "7"}], "cv::Param::UNSIGNED_INT": [{"name": "cv.Param_UNSIGNED_INT", "value": "8"}], "cv::Param::UINT64": [{"name": "cv.Param_UINT64", "value": "9"}], "cv::Param::UCHAR": [{"name": "cv.Param_UCHAR", "value": "11"}], "cv::Param::SCALAR": [{"name": "cv.Param_SCALAR", "value": "12"}], "cv::AsyncArray": [{"name": "cv.AsyncArray"}], "cv::Error::StsOk": [{"name": "cv.Error.StsOk", "value": "0"}], "cv::Error::StsBackTrace": [{"name": "cv.Error.StsBackTrace", "value": "-1"}], "cv::Error::StsError": [{"name": "cv.Error.StsError", "value": "-2"}], "cv::Error::StsInternal": [{"name": "cv.Error.StsInternal", "value": "-3"}], "cv::Error::StsNoMem": [{"name": "cv.Error.StsNoMem", "value": "-4"}], "cv::Error::StsBadArg": [{"name": "cv.Error.StsBadArg", "value": "-5"}], "cv::Error::StsBadFunc": [{"name": "cv.Error.StsBadFunc", "value": "-6"}], "cv::Error::StsNoConv": [{"name": "cv.Error.StsNoConv", "value": "-7"}], "cv::Error::StsAutoTrace": [{"name": "cv.Error.StsAutoTrace", "value": "-8"}], "cv::Error::HeaderIsNull": [{"name": "cv.Error.HeaderIsNull", "value": "-9"}], "cv::Error::BadImageSize": [{"name": "cv.Error.BadImageSize", "value": "-10"}], "cv::Error::BadOffset": [{"name": "cv.Error.BadOffset", "value": "-11"}], "cv::Error::BadDataPtr": [{"name": "cv.Error.BadDataPtr", "value": "-12"}], "cv::Error::BadStep": [{"name": "cv.Error.BadStep", "value": "-13"}], "cv::Error::BadModelOrChSeq": [{"name": "cv.Error.BadModelOrChSeq", "value": "-14"}], "cv::Error::BadNumChannels": [{"name": "cv.Error.BadNumChannels", "value": "-15"}], "cv::Error::BadNumChannel1U": [{"name": "cv.Error.BadNumChannel1U", "value": "-16"}], "cv::Error::BadDepth": [{"name": "cv.Error.BadDepth", "value": "-17"}], "cv::Error::BadAlphaChannel": [{"name": "cv.Error.BadAlphaChannel", "value": "-18"}], "cv::Error::BadOrder": [{"name": "cv.Error.BadOrder", "value": "-19"}], "cv::Error::BadOrigin": [{"name": "cv.Error.BadOrigin", "value": "-20"}], "cv::Error::BadAlign": [{"name": "cv.Error.BadAlign", "value": "-21"}], "cv::Error::BadCallBack": [{"name": "cv.Error.BadCallBack", "value": "-22"}], "cv::Error::BadTileSize": [{"name": "cv.Error.BadTileSize", "value": "-23"}], "cv::Error::BadCOI": [{"name": "cv.Error.BadCOI", "value": "-24"}], "cv::Error::BadROISize": [{"name": "cv.Error.BadROISize", "value": "-25"}], "cv::Error::MaskIsTiled": [{"name": "cv.Error.MaskIsTiled", "value": "-26"}], "cv::Error::StsNullPtr": [{"name": "cv.Error.StsNullPtr", "value": "-27"}], "cv::Error::StsVecLengthErr": [{"name": "cv.Error.StsVecLengthErr", "value": "-28"}], "cv::Error::StsFilterStructContentErr": [{"name": "cv.Error.StsFilterStructContentErr", "value": "-29"}], "cv::Error::StsKernelStructContentErr": [{"name": "cv.Error.StsKernelStructContentErr", "value": "-30"}], "cv::Error::StsFilterOffsetErr": [{"name": "cv.Error.StsFilterOffsetErr", "value": "-31"}], "cv::Error::StsBadSize": [{"name": "cv.Error.StsBadSize", "value": "-201"}], "cv::Error::StsDivByZero": [{"name": "cv.Error.StsDivByZero", "value": "-202"}], "cv::Error::StsInplaceNotSupported": [{"name": "cv.Error.StsInplaceNotSupported", "value": "-203"}], "cv::Error::StsObjectNotFound": [{"name": "cv.Error.StsObjectNotFound", "value": "-204"}], "cv::Error::StsUnmatchedFormats": [{"name": "cv.Error.StsUnmatchedFormats", "value": "-205"}], "cv::Error::StsBadFlag": [{"name": "cv.Error.StsBadFlag", "value": "-206"}], "cv::Error::StsBadPoint": [{"name": "cv.Error.StsBadPoint", "value": "-207"}], "cv::Error::StsBadMask": [{"name": "cv.Error.StsBadMask", "value": "-208"}], "cv::Error::StsUnmatchedSizes": [{"name": "cv.Error.StsUnmatchedSizes", "value": "-209"}], "cv::Error::StsUnsupportedFormat": [{"name": "cv.Error.StsUnsupportedFormat", "value": "-210"}], "cv::Error::StsOutOfRange": [{"name": "cv.Error.StsOutOfRange", "value": "-211"}], "cv::Error::StsParseError": [{"name": "cv.Error.StsParseError", "value": "-212"}], "cv::Error::StsNotImplemented": [{"name": "cv.Error.StsNotImplemented", "value": "-213"}], "cv::Error::StsBadMemBlock": [{"name": "cv.Error.StsBadMemBlock", "value": "-214"}], "cv::Error::StsAssert": [{"name": "cv.Error.StsAssert", "value": "-215"}], "cv::Error::GpuNotSupported": [{"name": "cv.Error.GpuNotSupported", "value": "-216"}], "cv::Error::GpuApiCallError": [{"name": "cv.Error.GpuApiCallError", "value": "-217"}], "cv::Error::OpenGlNotSupported": [{"name": "cv.Error.OpenGlNotSupported", "value": "-218"}], "cv::Error::OpenGlApiCallError": [{"name": "cv.Error.OpenGlApiCallError", "value": "-219"}], "cv::Error::OpenCLApiCallError": [{"name": "cv.Error.OpenCLApiCallError", "value": "-220"}], "cv::Error::OpenCLDoubleNotSupported": [{"name": "cv.Error.OpenCLDoubleNotSupported", "value": "-221"}], "cv::Error::OpenCLInitError": [{"name": "cv.Error.OpenCLInitError", "value": "-222"}], "cv::Error::OpenCLNoAMDBlasFft": [{"name": "cv.Error.OpenCLNoAMDBlasFft", "value": "-223"}], "cv::DECOMP_LU": [{"name": "cv.DECOMP_LU", "value": "0"}], "cv::DECOMP_SVD": [{"name": "cv.DECOMP_SVD", "value": "1"}], "cv::DECOMP_EIG": [{"name": "cv.DECOMP_EIG", "value": "2"}], "cv::DECOMP_CHOLESKY": [{"name": "cv.DECOMP_CHOLESKY", "value": "3"}], "cv::DECOMP_QR": [{"name": "cv.DECOMP_QR", "value": "4"}], "cv::DECOMP_NORMAL": [{"name": "cv.DECOMP_NORMAL", "value": "16"}], "cv::NORM_INF": [{"name": "cv.NORM_INF", "value": "1"}], "cv::NORM_L1": [{"name": "cv.NORM_L1", "value": "2"}], "cv::NORM_L2": [{"name": "cv.NORM_L2", "value": "4"}], "cv::NORM_L2SQR": [{"name": "cv.NORM_L2SQR", "value": "5"}], "cv::NORM_HAMMING": [{"name": "cv.NORM_HAMMING", "value": "6"}], "cv::NORM_HAMMING2": [{"name": "cv.NORM_HAMMING2", "value": "7"}], "cv::NORM_TYPE_MASK": [{"name": "cv.NORM_TYPE_MASK", "value": "7"}], "cv::NORM_RELATIVE": [{"name": "cv.NORM_RELATIVE", "value": "8"}], "cv::NORM_MINMAX": [{"name": "cv.NORM_MINMAX", "value": "32"}], "cv::CMP_EQ": [{"name": "cv.CMP_EQ", "value": "0"}], "cv::CMP_GT": [{"name": "cv.CMP_GT", "value": "1"}], "cv::CMP_GE": [{"name": "cv.CMP_GE", "value": "2"}], "cv::CMP_LT": [{"name": "cv.CMP_LT", "value": "3"}], "cv::CMP_LE": [{"name": "cv.CMP_LE", "value": "4"}], "cv::CMP_NE": [{"name": "cv.CMP_NE", "value": "5"}], "cv::GEMM_1_T": [{"name": "cv.GEMM_1_T", "value": "1"}], "cv::GEMM_2_T": [{"name": "cv.GEMM_2_T", "value": "2"}], "cv::GEMM_3_T": [{"name": "cv.GEMM_3_T", "value": "4"}], "cv::DFT_INVERSE": [{"name": "cv.DFT_INVERSE", "value": "1"}], "cv::DFT_SCALE": [{"name": "cv.DFT_SCALE", "value": "2"}], "cv::DFT_ROWS": [{"name": "cv.DFT_ROWS", "value": "4"}], "cv::DFT_COMPLEX_OUTPUT": [{"name": "cv.DFT_COMPLEX_OUTPUT", "value": "16"}], "cv::DFT_REAL_OUTPUT": [{"name": "cv.DFT_REAL_OUTPUT", "value": "32"}], "cv::DFT_COMPLEX_INPUT": [{"name": "cv.DFT_COMPLEX_INPUT", "value": "64"}], "cv::DCT_INVERSE": [{"name": "cv.DCT_INVERSE", "value": "DFT_INVERSE"}], "cv::DCT_ROWS": [{"name": "cv.DCT_ROWS", "value": "DFT_ROWS"}], "cv::BORDER_CONSTANT": [{"name": "cv.BORDER_CONSTANT", "value": "0"}], "cv::BORDER_REPLICATE": [{"name": "cv.BORDER_REPLICATE", "value": "1"}], "cv::BORDER_REFLECT": [{"name": "cv.BORDER_REFLECT", "value": "2"}], "cv::BORDER_WRAP": [{"name": "cv.BORDER_WRAP", "value": "3"}], "cv::BORDER_REFLECT_101": [{"name": "cv.BORDER_REFLECT_101", "value": "4"}], "cv::BORDER_TRANSPARENT": [{"name": "cv.BORDER_TRANSPARENT", "value": "5"}], "cv::BORDER_REFLECT101": [{"name": "cv.BORDER_REFLECT101", "value": "BORDER_REFLECT_101"}], "cv::BORDER_DEFAULT": [{"name": "cv.BORDER_DEFAULT", "value": "BORDER_REFLECT_101"}], "cv::BORDER_ISOLATED": [{"name": "cv.BORDER_ISOLATED", "value": "16"}], "cv::detail::TEST_CUSTOM": [{"name": "cv.detail.TEST_CUSTOM", "value": "0"}], "cv::detail::TEST_EQ": [{"name": "cv.detail.TEST_EQ", "value": "1"}], "cv::detail::TEST_NE": [{"name": "cv.detail.TEST_NE", "value": "2"}], "cv::detail::TEST_LE": [{"name": "cv.detail.TEST_LE", "value": "3"}], "cv::detail::TEST_LT": [{"name": "cv.detail.TEST_LT", "value": "4"}], "cv::detail::TEST_GE": [{"name": "cv.detail.TEST_GE", "value": "5"}], "cv::detail::TEST_GT": [{"name": "cv.detail.TEST_GT", "value": "6"}], "cv::cuda::GpuMat": [{"name": "cv.cuda_GpuMat"}], "cv::cuda::GpuMat::Allocator": [{"name": "cv.cuda_GpuMat_Allocator"}], "cv::cuda::BufferPool": [{"name": "cv.cuda_BufferPool"}], "cv::cuda::HostMem": [{"name": "cv.cuda_HostMem"}], "cv::cuda::HostMem::PAGE_LOCKED": [{"name": "cv.cuda.HostMem_PAGE_LOCKED", "value": "1"}], "cv::cuda::HostMem::SHARED": [{"name": "cv.cuda.HostMem_SHARED", "value": "2"}], "cv::cuda::HostMem::WRITE_COMBINED": [{"name": "cv.cuda.HostMem_WRITE_COMBINED", "value": "4"}], "cv::cuda::Stream": [{"name": "cv.cuda_Stream"}], "cv::cuda::Event": [{"name": "cv.cuda_Event"}], "cv::cuda::Event::DEFAULT": [{"name": "cv.cuda.Event_DEFAULT", "value": "0x00"}], "cv::cuda::Event::BLOCKING_SYNC": [{"name": "cv.cuda.Event_BLOCKING_SYNC", "value": "0x01"}], "cv::cuda::Event::DISABLE_TIMING": [{"name": "cv.cuda.Event_DISABLE_TIMING", "value": "0x02"}], "cv::cuda::Event::INTERPROCESS": [{"name": "cv.cuda.Event_INTERPROCESS", "value": "0x04"}], "cv::cuda::FEATURE_SET_COMPUTE_10": [{"name": "cv.cuda.FEATURE_SET_COMPUTE_10", "value": "10"}], "cv::cuda::FEATURE_SET_COMPUTE_11": [{"name": "cv.cuda.FEATURE_SET_COMPUTE_11", "value": "11"}], "cv::cuda::FEATURE_SET_COMPUTE_12": [{"name": "cv.cuda.FEATURE_SET_COMPUTE_12", "value": "12"}], "cv::cuda::FEATURE_SET_COMPUTE_13": [{"name": "cv.cuda.FEATURE_SET_COMPUTE_13", "value": "13"}], "cv::cuda::FEATURE_SET_COMPUTE_20": [{"name": "cv.cuda.FEATURE_SET_COMPUTE_20", "value": "20"}], "cv::cuda::FEATURE_SET_COMPUTE_21": [{"name": "cv.cuda.FEATURE_SET_COMPUTE_21", "value": "21"}], "cv::cuda::FEATURE_SET_COMPUTE_30": [{"name": "cv.cuda.FEATURE_SET_COMPUTE_30", "value": "30"}], "cv::cuda::FEATURE_SET_COMPUTE_32": [{"name": "cv.cuda.FEATURE_SET_COMPUTE_32", "value": "32"}], "cv::cuda::FEATURE_SET_COMPUTE_35": [{"name": "cv.cuda.FEATURE_SET_COMPUTE_35", "value": "35"}], "cv::cuda::FEATURE_SET_COMPUTE_50": [{"name": "cv.cuda.FEATURE_SET_COMPUTE_50", "value": "50"}], "cv::cuda::GLOBAL_ATOMICS": [{"name": "cv.cuda.GLOBAL_ATOMICS", "value": "FEATURE_SET_COMPUTE_11"}], "cv::cuda::SHARED_ATOMICS": [{"name": "cv.cuda.SHARED_ATOMICS", "value": "FEATURE_SET_COMPUTE_12"}], "cv::cuda::NATIVE_DOUBLE": [{"name": "cv.cuda.NATIVE_DOUBLE", "value": "FEATURE_SET_COMPUTE_13"}], "cv::cuda::WARP_SHUFFLE_FUNCTIONS": [{"name": "cv.cuda.WARP_SHUFFLE_FUNCTIONS", "value": "FEATURE_SET_COMPUTE_30"}], "cv::cuda::DYNAMIC_PARALLELISM": [{"name": "cv.cuda.DYNAMIC_PARALLELISM", "value": "FEATURE_SET_COMPUTE_35"}], "cv::cuda::TargetArchs": [{"name": "cv.cuda_TargetArchs"}], "cv::cuda::DeviceInfo": [{"name": "cv.cuda_DeviceInfo"}], "cv::cuda::DeviceInfo::ComputeModeDefault": [{"name": "cv.cuda.DeviceInfo_ComputeModeDefault", "value": "0"}], "cv::cuda::DeviceInfo::ComputeModeExclusive": [{"name": "cv.cuda.DeviceInfo_ComputeModeExclusive", "value": "1"}], "cv::cuda::DeviceInfo::ComputeModeProhibited": [{"name": "cv.cuda.DeviceInfo_ComputeModeProhibited", "value": "2"}], "cv::cuda::DeviceInfo::ComputeModeExclusiveProcess": [{"name": "cv.cuda.DeviceInfo_ComputeModeExclusiveProcess", "value": "3"}], "cv::ACCESS_READ": [{"name": "cv.ACCESS_READ", "value": "1<<24"}], "cv::ACCESS_WRITE": [{"name": "cv.ACCESS_WRITE", "value": "1<<25"}], "cv::ACCESS_RW": [{"name": "cv.ACCESS_RW", "value": "3<<24"}], "cv::ACCESS_MASK": [{"name": "cv.ACCESS_MASK", "value": "ACCESS_RW"}], "cv::ACCESS_FAST": [{"name": "cv.ACCESS_FAST", "value": "1<<26"}], "cv::_InputArray::KIND_SHIFT": [{"name": "cv._InputArray_KIND_SHIFT", "value": "16"}], "cv::_InputArray::FIXED_TYPE": [{"name": "cv._InputArray_FIXED_TYPE", "value": "0x8000 << KIND_SHIFT"}], "cv::_InputArray::FIXED_SIZE": [{"name": "cv._InputArray_FIXED_SIZE", "value": "0x4000 << KIND_SHIFT"}], "cv::_InputArray::KIND_MASK": [{"name": "cv._InputArray_KIND_MASK", "value": "31 << KIND_SHIFT"}], "cv::_InputArray::NONE": [{"name": "cv._InputArray_NONE", "value": "0 << KIND_SHIFT"}], "cv::_InputArray::MAT": [{"name": "cv._InputArray_MAT", "value": "1 << KIND_SHIFT"}], "cv::_InputArray::MATX": [{"name": "cv._InputArray_MATX", "value": "2 << KIND_SHIFT"}], "cv::_InputArray::STD_VECTOR": [{"name": "cv._InputArray_STD_VECTOR", "value": "3 << KIND_SHIFT"}], "cv::_InputArray::STD_VECTOR_VECTOR": [{"name": "cv._InputArray_STD_VECTOR_VECTOR", "value": "4 << KIND_SHIFT"}], "cv::_InputArray::STD_VECTOR_MAT": [{"name": "cv._InputArray_STD_VECTOR_MAT", "value": "5 << KIND_SHIFT"}], "cv::_InputArray::EXPR": [{"name": "cv._InputArray_EXPR", "value": "6 << KIND_SHIFT"}], "cv::_InputArray::OPENGL_BUFFER": [{"name": "cv._InputArray_OPENGL_BUFFER", "value": "7 << KIND_SHIFT"}], "cv::_InputArray::CUDA_HOST_MEM": [{"name": "cv._InputArray_CUDA_HOST_MEM", "value": "8 << KIND_SHIFT"}], "cv::_InputArray::CUDA_GPU_MAT": [{"name": "cv._InputArray_CUDA_GPU_MAT", "value": "9 << KIND_SHIFT"}], "cv::_InputArray::UMAT": [{"name": "cv._InputArray_UMAT", "value": "10 << KIND_SHIFT"}], "cv::_InputArray::STD_VECTOR_UMAT": [{"name": "cv._InputArray_STD_VECTOR_UMAT", "value": "11 << KIND_SHIFT"}], "cv::_InputArray::STD_BOOL_VECTOR": [{"name": "cv._InputArray_STD_BOOL_VECTOR", "value": "12 << KIND_SHIFT"}], "cv::_InputArray::STD_VECTOR_CUDA_GPU_MAT": [{"name": "cv._InputArray_STD_VECTOR_CUDA_GPU_MAT", "value": "13 << KIND_SHIFT"}], "cv::_InputArray::STD_ARRAY": [{"name": "cv._InputArray_STD_ARRAY", "value": "14 << KIND_SHIFT"}], "cv::_InputArray::STD_ARRAY_MAT": [{"name": "cv._InputArray_STD_ARRAY_MAT", "value": "15 << KIND_SHIFT"}], "cv::_OutputArray::DEPTH_MASK_8U": [{"name": "cv._OutputArray_DEPTH_MASK_8U", "value": "1 << CV_8U"}], "cv::_OutputArray::DEPTH_MASK_8S": [{"name": "cv._OutputArray_DEPTH_MASK_8S", "value": "1 << CV_8S"}], "cv::_OutputArray::DEPTH_MASK_16U": [{"name": "cv._OutputArray_DEPTH_MASK_16U", "value": "1 << CV_16U"}], "cv::_OutputArray::DEPTH_MASK_16S": [{"name": "cv._OutputArray_DEPTH_MASK_16S", "value": "1 << CV_16S"}], "cv::_OutputArray::DEPTH_MASK_32S": [{"name": "cv._OutputArray_DEPTH_MASK_32S", "value": "1 << CV_32S"}], "cv::_OutputArray::DEPTH_MASK_32F": [{"name": "cv._OutputArray_DEPTH_MASK_32F", "value": "1 << CV_32F"}], "cv::_OutputArray::DEPTH_MASK_64F": [{"name": "cv._OutputArray_DEPTH_MASK_64F", "value": "1 << CV_64F"}], "cv::_OutputArray::DEPTH_MASK_16F": [{"name": "cv._OutputArray_DEPTH_MASK_16F", "value": "1 << CV_16F"}], "cv::_OutputArray::DEPTH_MASK_ALL": [{"name": "cv._OutputArray_DEPTH_MASK_ALL", "value": "(DEPTH_MASK_64F<<1)-1"}], "cv::_OutputArray::DEPTH_MASK_ALL_BUT_8S": [{"name": "cv._OutputArray_DEPTH_MASK_ALL_BUT_8S", "value": "DEPTH_MASK_ALL & ~DEPTH_MASK_8S"}], "cv::_OutputArray::DEPTH_MASK_ALL_16F": [{"name": "cv._OutputArray_DEPTH_MASK_ALL_16F", "value": "(DEPTH_MASK_16F<<1)-1"}], "cv::_OutputArray::DEPTH_MASK_FLT": [{"name": "cv._OutputArray_DEPTH_MASK_FLT", "value": "DEPTH_MASK_32F + DEPTH_MASK_64F"}], "cv::USAGE_DEFAULT": [{"name": "cv.USAGE_DEFAULT", "value": "0"}], "cv::USAGE_ALLOCATE_HOST_MEMORY": [{"name": "cv.USAGE_ALLOCATE_HOST_MEMORY", "value": "1 << 0"}], "cv::USAGE_ALLOCATE_DEVICE_MEMORY": [{"name": "cv.USAGE_ALLOCATE_DEVICE_MEMORY", "value": "1 << 1"}], "cv::USAGE_ALLOCATE_SHARED_MEMORY": [{"name": "cv.USAGE_ALLOCATE_SHARED_MEMORY", "value": "1 << 2"}], "cv::__UMAT_USAGE_FLAGS_32BIT": [{"name": "cv.__UMAT_USAGE_FLAGS_32BIT", "value": "0x7fffffff"}], "cv::UMatData::COPY_ON_MAP": [{"name": "cv.UMatData_COPY_ON_MAP", "value": "1"}], "cv::UMatData::HOST_COPY_OBSOLETE": [{"name": "cv.UMatData_HOST_COPY_OBSOLETE", "value": "2"}], "cv::UMatData::DEVICE_COPY_OBSOLETE": [{"name": "cv.UMatData_DEVICE_COPY_OBSOLETE", "value": "4"}], "cv::UMatData::TEMP_UMAT": [{"name": "cv.UMatData_TEMP_UMAT", "value": "8"}], "cv::UMatData::TEMP_COPIED_UMAT": [{"name": "cv.UMatData_TEMP_COPIED_UMAT", "value": "24"}], "cv::UMatData::USER_ALLOCATED": [{"name": "cv.UMatData_USER_ALLOCATED", "value": "32"}], "cv::UMatData::DEVICE_MEM_MAPPED": [{"name": "cv.UMatData_DEVICE_MEM_MAPPED", "value": "64"}], "cv::UMatData::ASYNC_CLEANUP": [{"name": "cv.UMatData_ASYNC_CLEANUP", "value": "128"}], "cv::Mat::MAGIC_VAL": [{"name": "cv.Mat_MAGIC_VAL", "value": "0x42FF0000"}], "cv::Mat::AUTO_STEP": [{"name": "cv.Mat_AUTO_STEP", "value": "0"}], "cv::Mat::CONTINUOUS_FLAG": [{"name": "cv.Mat_CONTINUOUS_FLAG", "value": "CV_MAT_CONT_FLAG"}], "cv::Mat::SUBMATRIX_FLAG": [{"name": "cv.Mat_SUBMATRIX_FLAG", "value": "CV_SUBMAT_FLAG"}], "cv::Mat::MAGIC_MASK": [{"name": "cv.Mat_MAGIC_MASK", "value": "0xFFFF0000"}], "cv::Mat::TYPE_MASK": [{"name": "cv.Mat_TYPE_MASK", "value": "0x00000FFF"}], "cv::Mat::DEPTH_MASK": [{"name": "cv.Mat_DEPTH_MASK", "value": "7"}], "cv::UMat::MAGIC_VAL": [{"name": "cv.UMat_MAGIC_VAL", "value": "0x42FF0000"}], "cv::UMat::AUTO_STEP": [{"name": "cv.UMat_AUTO_STEP", "value": "0"}], "cv::UMat::CONTINUOUS_FLAG": [{"name": "cv.UMat_CONTINUOUS_FLAG", "value": "CV_MAT_CONT_FLAG"}], "cv::UMat::SUBMATRIX_FLAG": [{"name": "cv.UMat_SUBMATRIX_FLAG", "value": "CV_SUBMAT_FLAG"}], "cv::UMat::MAGIC_MASK": [{"name": "cv.UMat_MAGIC_MASK", "value": "0xFFFF0000"}], "cv::UMat::TYPE_MASK": [{"name": "cv.UMat_TYPE_MASK", "value": "0x00000FFF"}], "cv::UMat::DEPTH_MASK": [{"name": "cv.UMat_DEPTH_MASK", "value": "7"}], "cv::SparseMat::MAGIC_VAL": [{"name": "cv.SparseMat_MAGIC_VAL", "value": "0x42FD0000"}], "cv::SparseMat::MAX_DIM": [{"name": "cv.SparseMat_MAX_DIM", "value": "32"}], "cv::SparseMat::HASH_SCALE": [{"name": "cv.SparseMat_HASH_SCALE", "value": "0x5bd1e995"}], "cv::SparseMat::HASH_BIT": [{"name": "cv.SparseMat_HASH_BIT", "value": "0x80000000"}], "cv::ocl::Device": [{"name": "cv.ocl_Device"}], "cv::ocl::Device::TYPE_DEFAULT": [{"name": "cv.ocl.Device_TYPE_DEFAULT", "value": "(1 << 0)"}], "cv::ocl::Device::TYPE_CPU": [{"name": "cv.ocl.Device_TYPE_CPU", "value": "(1 << 1)"}], "cv::ocl::Device::TYPE_GPU": [{"name": "cv.ocl.Device_TYPE_GPU", "value": "(1 << 2)"}], "cv::ocl::Device::TYPE_ACCELERATOR": [{"name": "cv.ocl.Device_TYPE_ACCELERATOR", "value": "(1 << 3)"}], "cv::ocl::Device::TYPE_DGPU": [{"name": "cv.ocl.Device_TYPE_DGPU", "value": "TYPE_GPU + (1 << 16)"}], "cv::ocl::Device::TYPE_IGPU": [{"name": "cv.ocl.Device_TYPE_IGPU", "value": "TYPE_GPU + (1 << 17)"}], "cv::ocl::Device::TYPE_ALL": [{"name": "cv.ocl.Device_TYPE_ALL", "value": "0xFFFFFFFF"}], "cv::ocl::Device::FP_DENORM": [{"name": "cv.ocl.Device_FP_DENORM", "value": "(1 << 0)"}], "cv::ocl::Device::FP_INF_NAN": [{"name": "cv.ocl.Device_FP_INF_NAN", "value": "(1 << 1)"}], "cv::ocl::Device::FP_ROUND_TO_NEAREST": [{"name": "cv.ocl.Device_FP_ROUND_TO_NEAREST", "value": "(1 << 2)"}], "cv::ocl::Device::FP_ROUND_TO_ZERO": [{"name": "cv.ocl.Device_FP_ROUND_TO_ZERO", "value": "(1 << 3)"}], "cv::ocl::Device::FP_ROUND_TO_INF": [{"name": "cv.ocl.Device_FP_ROUND_TO_INF", "value": "(1 << 4)"}], "cv::ocl::Device::FP_FMA": [{"name": "cv.ocl.Device_FP_FMA", "value": "(1 << 5)"}], "cv::ocl::Device::FP_SOFT_FLOAT": [{"name": "cv.ocl.Device_FP_SOFT_FLOAT", "value": "(1 << 6)"}], "cv::ocl::Device::FP_CORRECTLY_ROUNDED_DIVIDE_SQRT": [{"name": "cv.ocl.Device_FP_CORRECTLY_ROUNDED_DIVIDE_SQRT", "value": "(1 << 7)"}], "cv::ocl::Device::EXEC_KERNEL": [{"name": "cv.ocl.Device_EXEC_KERNEL", "value": "(1 << 0)"}], "cv::ocl::Device::EXEC_NATIVE_KERNEL": [{"name": "cv.ocl.Device_EXEC_NATIVE_KERNEL", "value": "(1 << 1)"}], "cv::ocl::Device::NO_CACHE": [{"name": "cv.ocl.Device_NO_CACHE", "value": "0"}], "cv::ocl::Device::READ_ONLY_CACHE": [{"name": "cv.ocl.Device_READ_ONLY_CACHE", "value": "1"}], "cv::ocl::Device::READ_WRITE_CACHE": [{"name": "cv.ocl.Device_READ_WRITE_CACHE", "value": "2"}], "cv::ocl::Device::NO_LOCAL_MEM": [{"name": "cv.ocl.Device_NO_LOCAL_MEM", "value": "0"}], "cv::ocl::Device::LOCAL_IS_LOCAL": [{"name": "cv.ocl.Device_LOCAL_IS_LOCAL", "value": "1"}], "cv::ocl::Device::LOCAL_IS_GLOBAL": [{"name": "cv.ocl.Device_LOCAL_IS_GLOBAL", "value": "2"}], "cv::ocl::Device::UNKNOWN_VENDOR": [{"name": "cv.ocl.Device_UNKNOWN_VENDOR", "value": "0"}], "cv::ocl::Device::VENDOR_AMD": [{"name": "cv.ocl.Device_VENDOR_AMD", "value": "1"}], "cv::ocl::Device::VENDOR_INTEL": [{"name": "cv.ocl.Device_VENDOR_INTEL", "value": "2"}], "cv::ocl::Device::VENDOR_NVIDIA": [{"name": "cv.ocl.Device_VENDOR_NVIDIA", "value": "3"}], "cv::ocl::KernelArg::LOCAL": [{"name": "cv.ocl.KernelArg_LOCAL", "value": "1"}], "cv::ocl::KernelArg::READ_ONLY": [{"name": "cv.ocl.KernelArg_READ_ONLY", "value": "2"}], "cv::ocl::KernelArg::WRITE_ONLY": [{"name": "cv.ocl.KernelArg_WRITE_ONLY", "value": "4"}], "cv::ocl::KernelArg::READ_WRITE": [{"name": "cv.ocl.KernelArg_READ_WRITE", "value": "6"}], "cv::ocl::KernelArg::CONSTANT": [{"name": "cv.ocl.KernelArg_CONSTANT", "value": "8"}], "cv::ocl::KernelArg::PTR_ONLY": [{"name": "cv.ocl.KernelArg_PTR_ONLY", "value": "16"}], "cv::ocl::KernelArg::NO_SIZE": [{"name": "cv.ocl.KernelArg_NO_SIZE", "value": "256"}], "cv::ocl::OCL_VECTOR_OWN": [{"name": "cv.ocl.OCL_VECTOR_OWN", "value": "0"}], "cv::ocl::OCL_VECTOR_MAX": [{"name": "cv.ocl.OCL_VECTOR_MAX", "value": "1"}], "cv::ocl::OCL_VECTOR_DEFAULT": [{"name": "cv.ocl.OCL_VECTOR_DEFAULT", "value": "OCL_VECTOR_OWN"}], "cv::ocl::OpenCLExecutionContext": [{"name": "cv.ocl_OpenCLExecutionContext"}], "cv::ogl::Buffer::ARRAY_BUFFER": [{"name": "cv.ogl.Buffer_ARRAY_BUFFER", "value": "0x8892"}], "cv::ogl::Buffer::ELEMENT_ARRAY_BUFFER": [{"name": "cv.ogl.Buffer_ELEMENT_ARRAY_BUFFER", "value": "0x8893"}], "cv::ogl::Buffer::PIXEL_PACK_BUFFER": [{"name": "cv.ogl.Buffer_PIXEL_PACK_BUFFER", "value": "0x88EB"}], "cv::ogl::Buffer::PIXEL_UNPACK_BUFFER": [{"name": "cv.ogl.Buffer_PIXEL_UNPACK_BUFFER", "value": "0x88EC"}], "cv::ogl::Buffer::READ_ONLY": [{"name": "cv.ogl.Buffer_READ_ONLY", "value": "0x88B8"}], "cv::ogl::Buffer::WRITE_ONLY": [{"name": "cv.ogl.Buffer_WRITE_ONLY", "value": "0x88B9"}], "cv::ogl::Buffer::READ_WRITE": [{"name": "cv.ogl.Buffer_READ_WRITE", "value": "0x88BA"}], "cv::ogl::Texture2D::NONE": [{"name": "cv.ogl.Texture2D_NONE", "value": "0"}], "cv::ogl::Texture2D::DEPTH_COMPONENT": [{"name": "cv.ogl.Texture2D_DEPTH_COMPONENT", "value": "0x1902"}], "cv::ogl::Texture2D::RGB": [{"name": "cv.ogl.Texture2D_RGB", "value": "0x1907"}], "cv::ogl::Texture2D::RGBA": [{"name": "cv.ogl.Texture2D_RGBA", "value": "0x1908"}], "cv::ogl::POINTS": [{"name": "cv.ogl.POINTS", "value": "0x0000"}], "cv::ogl::LINES": [{"name": "cv.ogl.LINES", "value": "0x0001"}], "cv::ogl::LINE_LOOP": [{"name": "cv.ogl.LINE_LOOP", "value": "0x0002"}], "cv::ogl::LINE_STRIP": [{"name": "cv.ogl.LINE_STRIP", "value": "0x0003"}], "cv::ogl::TRIANGLES": [{"name": "cv.ogl.TRIANGLES", "value": "0x0004"}], "cv::ogl::TRIANGLE_STRIP": [{"name": "cv.ogl.TRIANGLE_STRIP", "value": "0x0005"}], "cv::ogl::TRIANGLE_FAN": [{"name": "cv.ogl.TRIANGLE_FAN", "value": "0x0006"}], "cv::ogl::QUADS": [{"name": "cv.ogl.QUADS", "value": "0x0007"}], "cv::ogl::QUAD_STRIP": [{"name": "cv.ogl.QUAD_STRIP", "value": "0x0008"}], "cv::ogl::POLYGON": [{"name": "cv.ogl.POLYGON", "value": "0x0009"}], "cv::SOLVELP_UNBOUNDED": [{"name": "cv.SOLVELP_UNBOUNDED", "value": "-2"}], "cv::SOLVELP_UNFEASIBLE": [{"name": "cv.SOLVELP_UNFEASIBLE", "value": "-1"}], "cv::SOLVELP_SINGLE": [{"name": "cv.SOLVELP_SINGLE", "value": "0"}], "cv::SOLVELP_MULTI": [{"name": "cv.SOLVELP_MULTI", "value": "1"}], "cv::FileStorage": [{"name": "cv.FileStorage"}], "cv::FileStorage::READ": [{"name": "cv.FileStorage_READ", "value": "0"}], "cv::FileStorage::WRITE": [{"name": "cv.FileStorage_WRITE", "value": "1"}], "cv::FileStorage::APPEND": [{"name": "cv.FileStorage_APPEND", "value": "2"}], "cv::FileStorage::MEMORY": [{"name": "cv.FileStorage_MEMORY", "value": "4"}], "cv::FileStorage::FORMAT_MASK": [{"name": "cv.FileStorage_FORMAT_MASK", "value": "(7<<3)"}], "cv::FileStorage::FORMAT_AUTO": [{"name": "cv.FileStorage_FORMAT_AUTO", "value": "0"}], "cv::FileStorage::FORMAT_XML": [{"name": "cv.FileStorage_FORMAT_XML", "value": "(1<<3)"}], "cv::FileStorage::FORMAT_YAML": [{"name": "cv.FileStorage_FORMAT_YAML", "value": "(2<<3)"}], "cv::FileStorage::FORMAT_JSON": [{"name": "cv.FileStorage_FORMAT_JSON", "value": "(3<<3)"}], "cv::FileStorage::BASE64": [{"name": "cv.FileStorage_BASE64", "value": "64"}], "cv::FileStorage::WRITE_BASE64": [{"name": "cv.FileStorage_WRITE_BASE64", "value": "BASE64 | WRITE"}], "cv::FileStorage::UNDEFINED": [{"name": "cv.FileStorage_UNDEFINED", "value": "0"}], "cv::FileStorage::VALUE_EXPECTED": [{"name": "cv.FileStorage_VALUE_EXPECTED", "value": "1"}], "cv::FileStorage::NAME_EXPECTED": [{"name": "cv.FileStorage_NAME_EXPECTED", "value": "2"}], "cv::FileStorage::INSIDE_MAP": [{"name": "cv.FileStorage_INSIDE_MAP", "value": "4"}], "cv::FileNode": [{"name": "cv.FileNode"}], "cv::FileNode::NONE": [{"name": "cv.FileNode_NONE", "value": "0"}], "cv::FileNode::INT": [{"name": "cv.FileNode_INT", "value": "1"}], "cv::FileNode::REAL": [{"name": "cv.FileNode_REAL", "value": "2"}], "cv::FileNode::FLOAT": [{"name": "cv.FileNode_FLOAT", "value": "REAL"}], "cv::FileNode::STR": [{"name": "cv.FileNode_STR", "value": "3"}], "cv::FileNode::STRING": [{"name": "cv.FileNode_STRING", "value": "STR"}], "cv::FileNode::SEQ": [{"name": "cv.FileNode_SEQ", "value": "4"}], "cv::FileNode::MAP": [{"name": "cv.FileNode_MAP", "value": "5"}], "cv::FileNode::TYPE_MASK": [{"name": "cv.FileNode_TYPE_MASK", "value": "7"}], "cv::FileNode::FLOW": [{"name": "cv.FileNode_FLOW", "value": "8"}], "cv::FileNode::UNIFORM": [{"name": "cv.FileNode_UNIFORM", "value": "8"}], "cv::FileNode::EMPTY": [{"name": "cv.FileNode_EMPTY", "value": "16"}], "cv::FileNode::NAMED": [{"name": "cv.FileNode_NAMED", "value": "32"}], "cv::KeyPoint": [{"name": "cv.KeyPoint"}], "cv::DMatch": [{"name": "cv.DMatch"}], "cv::TermCriteria::COUNT": [{"name": "cv.TermCriteria_COUNT", "value": "1"}], "cv::TermCriteria::MAX_ITER": [{"name": "cv.TermCriteria_MAX_ITER", "value": "COUNT"}], "cv::TermCriteria::EPS": [{"name": "cv.TermCriteria_EPS", "value": "2"}], "cv::Moments": [{"name": "cv.Moments"}], "cv::TickMeter": [{"name": "cv.TickMeter"}], "cv::UMat": [{"name": "cv.UMat"}], "cv::flann::FLANN_INDEX_TYPE_8U": [{"name": "cv.flann.FLANN_INDEX_TYPE_8U", "value": "CV_8U"}], "cv::flann::FLANN_INDEX_TYPE_8S": [{"name": "cv.flann.FLANN_INDEX_TYPE_8S", "value": "CV_8S"}], "cv::flann::FLANN_INDEX_TYPE_16U": [{"name": "cv.flann.FLANN_INDEX_TYPE_16U", "value": "CV_16U"}], "cv::flann::FLANN_INDEX_TYPE_16S": [{"name": "cv.flann.FLANN_INDEX_TYPE_16S", "value": "CV_16S"}], "cv::flann::FLANN_INDEX_TYPE_32S": [{"name": "cv.flann.FLANN_INDEX_TYPE_32S", "value": "CV_32S"}], "cv::flann::FLANN_INDEX_TYPE_32F": [{"name": "cv.flann.FLANN_INDEX_TYPE_32F", "value": "CV_32F"}], "cv::flann::FLANN_INDEX_TYPE_64F": [{"name": "cv.flann.FLANN_INDEX_TYPE_64F", "value": "CV_64F"}], "cv::flann::FLANN_INDEX_TYPE_STRING": [{"name": "cv.flann.FLANN_INDEX_TYPE_STRING", "value": "CV_64F+1"}], "cv::flann::FLANN_INDEX_TYPE_BOOL": [{"name": "cv.flann.FLANN_INDEX_TYPE_BOOL", "value": "CV_64F+2"}], "cv::flann::FLANN_INDEX_TYPE_ALGORITHM": [{"name": "cv.flann.FLANN_INDEX_TYPE_ALGORITHM", "value": "CV_64F+3"}], "cv::flann::LAST_VALUE_FLANN_INDEX_TYPE": [{"name": "cv.flann.LAST_VALUE_FLANN_INDEX_TYPE", "value": "FLANN_INDEX_TYPE_ALGORITHM"}], "cv::flann::Index": [{"name": "cv.flann_Index"}], "cv::FILTER_SCHARR": [{"name": "cv.FILTER_SCHARR", "value": "-1"}], "cv::MORPH_ERODE": [{"name": "cv.MORPH_ERODE", "value": "0"}], "cv::MORPH_DILATE": [{"name": "cv.MORPH_DILATE", "value": "1"}], "cv::MORPH_OPEN": [{"name": "cv.MORPH_OPEN", "value": "2"}], "cv::MORPH_CLOSE": [{"name": "cv.MORPH_CLOSE", "value": "3"}], "cv::MORPH_GRADIENT": [{"name": "cv.MORPH_GRADIENT", "value": "4"}], "cv::MORPH_TOPHAT": [{"name": "cv.MORPH_TOPHAT", "value": "5"}], "cv::MORPH_BLACKHAT": [{"name": "cv.MORPH_BLACKHAT", "value": "6"}], "cv::MORPH_HITMISS": [{"name": "cv.MORPH_HITMISS", "value": "7"}], "cv::MORPH_RECT": [{"name": "cv.MORPH_RECT", "value": "0"}], "cv::MORPH_CROSS": [{"name": "cv.MORPH_CROSS", "value": "1"}], "cv::MORPH_ELLIPSE": [{"name": "cv.MORPH_ELLIPSE", "value": "2"}], "cv::INTER_NEAREST": [{"name": "cv.INTER_NEAREST", "value": "0"}], "cv::INTER_LINEAR": [{"name": "cv.INTER_LINEAR", "value": "1"}], "cv::INTER_CUBIC": [{"name": "cv.INTER_CUBIC", "value": "2"}], "cv::INTER_AREA": [{"name": "cv.INTER_AREA", "value": "3"}], "cv::INTER_LANCZOS4": [{"name": "cv.INTER_LANCZOS4", "value": "4"}], "cv::INTER_LINEAR_EXACT": [{"name": "cv.INTER_LINEAR_EXACT", "value": "5"}], "cv::INTER_NEAREST_EXACT": [{"name": "cv.INTER_NEAREST_EXACT", "value": "6"}], "cv::INTER_MAX": [{"name": "cv.INTER_MAX", "value": "7"}], "cv::WARP_FILL_OUTLIERS": [{"name": "cv.WARP_FILL_OUTLIERS", "value": "8"}], "cv::WARP_INVERSE_MAP": [{"name": "cv.WARP_INVERSE_MAP", "value": "16"}], "cv::WARP_POLAR_LINEAR": [{"name": "cv.WARP_POLAR_LINEAR", "value": "0"}], "cv::WARP_POLAR_LOG": [{"name": "cv.WARP_POLAR_LOG", "value": "256"}], "cv::INTER_BITS": [{"name": "cv.INTER_BITS", "value": "5"}], "cv::INTER_BITS2": [{"name": "cv.INTER_BITS2", "value": "INTER_BITS * 2"}], "cv::INTER_TAB_SIZE": [{"name": "cv.INTER_TAB_SIZE", "value": "1 << INTER_BITS"}], "cv::INTER_TAB_SIZE2": [{"name": "cv.INTER_TAB_SIZE2", "value": "INTER_TAB_SIZE * INTER_TAB_SIZE"}], "cv::DIST_USER": [{"name": "cv.DIST_USER", "value": "-1"}], "cv::DIST_L1": [{"name": "cv.DIST_L1", "value": "1"}], "cv::DIST_L2": [{"name": "cv.DIST_L2", "value": "2"}], "cv::DIST_C": [{"name": "cv.DIST_C", "value": "3"}], "cv::DIST_L12": [{"name": "cv.DIST_L12", "value": "4"}], "cv::DIST_FAIR": [{"name": "cv.DIST_FAIR", "value": "5"}], "cv::DIST_WELSCH": [{"name": "cv.DIST_WELSCH", "value": "6"}], "cv::DIST_HUBER": [{"name": "cv.DIST_HUBER", "value": "7"}], "cv::DIST_MASK_3": [{"name": "cv.DIST_MASK_3", "value": "3"}], "cv::DIST_MASK_5": [{"name": "cv.DIST_MASK_5", "value": "5"}], "cv::DIST_MASK_PRECISE": [{"name": "cv.DIST_MASK_PRECISE", "value": "0"}], "cv::THRESH_BINARY": [{"name": "cv.THRESH_BINARY", "value": "0"}], "cv::THRESH_BINARY_INV": [{"name": "cv.THRESH_BINARY_INV", "value": "1"}], "cv::THRESH_TRUNC": [{"name": "cv.THRESH_TRUNC", "value": "2"}], "cv::THRESH_TOZERO": [{"name": "cv.THRESH_TOZERO", "value": "3"}], "cv::THRESH_TOZERO_INV": [{"name": "cv.THRESH_TOZERO_INV", "value": "4"}], "cv::THRESH_MASK": [{"name": "cv.THRESH_MASK", "value": "7"}], "cv::THRESH_OTSU": [{"name": "cv.THRESH_OTSU", "value": "8"}], "cv::THRESH_TRIANGLE": [{"name": "cv.THRESH_TRIANGLE", "value": "16"}], "cv::ADAPTIVE_THRESH_MEAN_C": [{"name": "cv.ADAPTIVE_THRESH_MEAN_C", "value": "0"}], "cv::ADAPTIVE_THRESH_GAUSSIAN_C": [{"name": "cv.ADAPTIVE_THRESH_GAUSSIAN_C", "value": "1"}], "cv::GC_BGD": [{"name": "cv.GC_BGD", "value": "0"}], "cv::GC_FGD": [{"name": "cv.GC_FGD", "value": "1"}], "cv::GC_PR_BGD": [{"name": "cv.GC_PR_BGD", "value": "2"}], "cv::GC_PR_FGD": [{"name": "cv.GC_PR_FGD", "value": "3"}], "cv::GC_INIT_WITH_RECT": [{"name": "cv.GC_INIT_WITH_RECT", "value": "0"}], "cv::GC_INIT_WITH_MASK": [{"name": "cv.GC_INIT_WITH_MASK", "value": "1"}], "cv::GC_EVAL": [{"name": "cv.GC_EVAL", "value": "2"}], "cv::GC_EVAL_FREEZE_MODEL": [{"name": "cv.GC_EVAL_FREEZE_MODEL", "value": "3"}], "cv::DIST_LABEL_CCOMP": [{"name": "cv.DIST_LABEL_CCOMP", "value": "0"}], "cv::DIST_LABEL_PIXEL": [{"name": "cv.DIST_LABEL_PIXEL", "value": "1"}], "cv::FLOODFILL_FIXED_RANGE": [{"name": "cv.FLOODFILL_FIXED_RANGE", "value": "1 << 16"}], "cv::FLOODFILL_MASK_ONLY": [{"name": "cv.FLOODFILL_MASK_ONLY", "value": "1 << 17"}], "cv::CC_STAT_LEFT": [{"name": "cv.CC_STAT_LEFT", "value": "0"}], "cv::CC_STAT_TOP": [{"name": "cv.CC_STAT_TOP", "value": "1"}], "cv::CC_STAT_WIDTH": [{"name": "cv.CC_STAT_WIDTH", "value": "2"}], "cv::CC_STAT_HEIGHT": [{"name": "cv.CC_STAT_HEIGHT", "value": "3"}], "cv::CC_STAT_AREA": [{"name": "cv.CC_STAT_AREA", "value": "4"}], "cv::CC_STAT_MAX": [{"name": "cv.CC_STAT_MAX", "value": "5"}], "cv::CCL_WU": [{"name": "cv.CCL_WU", "value": "0"}], "cv::CCL_DEFAULT": [{"name": "cv.CCL_DEFAULT", "value": "-1"}], "cv::CCL_GRANA": [{"name": "cv.CCL_GRANA", "value": "1"}], "cv::RETR_EXTERNAL": [{"name": "cv.RETR_EXTERNAL", "value": "0"}], "cv::RETR_LIST": [{"name": "cv.RETR_LIST", "value": "1"}], "cv::RETR_CCOMP": [{"name": "cv.RETR_CCOMP", "value": "2"}], "cv::RETR_TREE": [{"name": "cv.RETR_TREE", "value": "3"}], "cv::RETR_FLOODFILL": [{"name": "cv.RETR_FLOODFILL", "value": "4"}], "cv::CHAIN_APPROX_NONE": [{"name": "cv.CHAIN_APPROX_NONE", "value": "1"}], "cv::CHAIN_APPROX_SIMPLE": [{"name": "cv.CHAIN_APPROX_SIMPLE", "value": "2"}], "cv::CHAIN_APPROX_TC89_L1": [{"name": "cv.CHAIN_APPROX_TC89_L1", "value": "3"}], "cv::CHAIN_APPROX_TC89_KCOS": [{"name": "cv.CHAIN_APPROX_TC89_KCOS", "value": "4"}], "cv::CONTOURS_MATCH_I1": [{"name": "cv.CONTOURS_MATCH_I1", "value": "1"}], "cv::CONTOURS_MATCH_I2": [{"name": "cv.CONTOURS_MATCH_I2", "value": "2"}], "cv::CONTOURS_MATCH_I3": [{"name": "cv.CONTOURS_MATCH_I3", "value": "3"}], "cv::HOUGH_STANDARD": [{"name": "cv.HOUGH_STANDARD", "value": "0"}], "cv::HOUGH_PROBABILISTIC": [{"name": "cv.HOUGH_PROBABILISTIC", "value": "1"}], "cv::HOUGH_MULTI_SCALE": [{"name": "cv.HOUGH_MULTI_SCALE", "value": "2"}], "cv::HOUGH_GRADIENT": [{"name": "cv.HOUGH_GRADIENT", "value": "3"}], "cv::HOUGH_GRADIENT_ALT": [{"name": "cv.HOUGH_GRADIENT_ALT", "value": "4"}], "cv::LSD_REFINE_NONE": [{"name": "cv.LSD_REFINE_NONE", "value": "0"}], "cv::LSD_REFINE_STD": [{"name": "cv.LSD_REFINE_STD", "value": "1"}], "cv::LSD_REFINE_ADV": [{"name": "cv.LSD_REFINE_ADV", "value": "2"}], "cv::HISTCMP_CORREL": [{"name": "cv.HISTCMP_CORREL", "value": "0"}], "cv::HISTCMP_CHISQR": [{"name": "cv.HISTCMP_CHISQR", "value": "1"}], "cv::HISTCMP_INTERSECT": [{"name": "cv.HISTCMP_INTERSECT", "value": "2"}], "cv::HISTCMP_BHATTACHARYYA": [{"name": "cv.HISTCMP_BHATTACHARYYA", "value": "3"}], "cv::HISTCMP_HELLINGER": [{"name": "cv.HISTCMP_HELLINGER", "value": "HISTCMP_BHATTACHARYYA"}], "cv::HISTCMP_CHISQR_ALT": [{"name": "cv.HISTCMP_CHISQR_ALT", "value": "4"}], "cv::HISTCMP_KL_DIV": [{"name": "cv.HISTCMP_KL_DIV", "value": "5"}], "cv::COLOR_BGR2BGRA": [{"name": "cv.COLOR_BGR2BGRA", "value": "0"}], "cv::COLOR_RGB2RGBA": [{"name": "cv.COLOR_RGB2RGBA", "value": "COLOR_BGR2BGRA"}], "cv::COLOR_BGRA2BGR": [{"name": "cv.COLOR_BGRA2BGR", "value": "1"}], "cv::COLOR_RGBA2RGB": [{"name": "cv.COLOR_RGBA2RGB", "value": "COLOR_BGRA2BGR"}], "cv::COLOR_BGR2RGBA": [{"name": "cv.COLOR_BGR2RGBA", "value": "2"}], "cv::COLOR_RGB2BGRA": [{"name": "cv.COLOR_RGB2BGRA", "value": "COLOR_BGR2RGBA"}], "cv::COLOR_RGBA2BGR": [{"name": "cv.COLOR_RGBA2BGR", "value": "3"}], "cv::COLOR_BGRA2RGB": [{"name": "cv.COLOR_BGRA2RGB", "value": "COLOR_RGBA2BGR"}], "cv::COLOR_BGR2RGB": [{"name": "cv.COLOR_BGR2RGB", "value": "4"}], "cv::COLOR_RGB2BGR": [{"name": "cv.COLOR_RGB2BGR", "value": "COLOR_BGR2RGB"}], "cv::COLOR_BGRA2RGBA": [{"name": "cv.COLOR_BGRA2RGBA", "value": "5"}], "cv::COLOR_RGBA2BGRA": [{"name": "cv.COLOR_RGBA2BGRA", "value": "COLOR_BGRA2RGBA"}], "cv::COLOR_BGR2GRAY": [{"name": "cv.COLOR_BGR2GRAY", "value": "6"}], "cv::COLOR_RGB2GRAY": [{"name": "cv.COLOR_RGB2GRAY", "value": "7"}], "cv::COLOR_GRAY2BGR": [{"name": "cv.COLOR_GRAY2BGR", "value": "8"}], "cv::COLOR_GRAY2RGB": [{"name": "cv.COLOR_GRAY2RGB", "value": "COLOR_GRAY2BGR"}], "cv::COLOR_GRAY2BGRA": [{"name": "cv.COLOR_GRAY2BGRA", "value": "9"}], "cv::COLOR_GRAY2RGBA": [{"name": "cv.COLOR_GRAY2RGBA", "value": "COLOR_GRAY2BGRA"}], "cv::COLOR_BGRA2GRAY": [{"name": "cv.COLOR_BGRA2GRAY", "value": "10"}], "cv::COLOR_RGBA2GRAY": [{"name": "cv.COLOR_RGBA2GRAY", "value": "11"}], "cv::COLOR_BGR2BGR565": [{"name": "cv.COLOR_BGR2BGR565", "value": "12"}], "cv::COLOR_RGB2BGR565": [{"name": "cv.COLOR_RGB2BGR565", "value": "13"}], "cv::COLOR_BGR5652BGR": [{"name": "cv.COLOR_BGR5652BGR", "value": "14"}], "cv::COLOR_BGR5652RGB": [{"name": "cv.COLOR_BGR5652RGB", "value": "15"}], "cv::COLOR_BGRA2BGR565": [{"name": "cv.COLOR_BGRA2BGR565", "value": "16"}], "cv::COLOR_RGBA2BGR565": [{"name": "cv.COLOR_RGBA2BGR565", "value": "17"}], "cv::COLOR_BGR5652BGRA": [{"name": "cv.COLOR_BGR5652BGRA", "value": "18"}], "cv::COLOR_BGR5652RGBA": [{"name": "cv.COLOR_BGR5652RGBA", "value": "19"}], "cv::COLOR_GRAY2BGR565": [{"name": "cv.COLOR_GRAY2BGR565", "value": "20"}], "cv::COLOR_BGR5652GRAY": [{"name": "cv.COLOR_BGR5652GRAY", "value": "21"}], "cv::COLOR_BGR2BGR555": [{"name": "cv.COLOR_BGR2BGR555", "value": "22"}], "cv::COLOR_RGB2BGR555": [{"name": "cv.COLOR_RGB2BGR555", "value": "23"}], "cv::COLOR_BGR5552BGR": [{"name": "cv.COLOR_BGR5552BGR", "value": "24"}], "cv::COLOR_BGR5552RGB": [{"name": "cv.COLOR_BGR5552RGB", "value": "25"}], "cv::COLOR_BGRA2BGR555": [{"name": "cv.COLOR_BGRA2BGR555", "value": "26"}], "cv::COLOR_RGBA2BGR555": [{"name": "cv.COLOR_RGBA2BGR555", "value": "27"}], "cv::COLOR_BGR5552BGRA": [{"name": "cv.COLOR_BGR5552BGRA", "value": "28"}], "cv::COLOR_BGR5552RGBA": [{"name": "cv.COLOR_BGR5552RGBA", "value": "29"}], "cv::COLOR_GRAY2BGR555": [{"name": "cv.COLOR_GRAY2BGR555", "value": "30"}], "cv::COLOR_BGR5552GRAY": [{"name": "cv.COLOR_BGR5552GRAY", "value": "31"}], "cv::COLOR_BGR2XYZ": [{"name": "cv.COLOR_BGR2XYZ", "value": "32"}], "cv::COLOR_RGB2XYZ": [{"name": "cv.COLOR_RGB2XYZ", "value": "33"}], "cv::COLOR_XYZ2BGR": [{"name": "cv.COLOR_XYZ2BGR", "value": "34"}], "cv::COLOR_XYZ2RGB": [{"name": "cv.COLOR_XYZ2RGB", "value": "35"}], "cv::COLOR_BGR2YCrCb": [{"name": "cv.COLOR_BGR2YCrCb", "value": "36"}], "cv::COLOR_RGB2YCrCb": [{"name": "cv.COLOR_RGB2YCrCb", "value": "37"}], "cv::COLOR_YCrCb2BGR": [{"name": "cv.COLOR_YCrCb2BGR", "value": "38"}], "cv::COLOR_YCrCb2RGB": [{"name": "cv.COLOR_YCrCb2RGB", "value": "39"}], "cv::COLOR_BGR2HSV": [{"name": "cv.COLOR_BGR2HSV", "value": "40"}], "cv::COLOR_RGB2HSV": [{"name": "cv.COLOR_RGB2HSV", "value": "41"}], "cv::COLOR_BGR2Lab": [{"name": "cv.COLOR_BGR2Lab", "value": "44"}], "cv::COLOR_RGB2Lab": [{"name": "cv.COLOR_RGB2Lab", "value": "45"}], "cv::COLOR_BGR2Luv": [{"name": "cv.COLOR_BGR2Luv", "value": "50"}], "cv::COLOR_RGB2Luv": [{"name": "cv.COLOR_RGB2Luv", "value": "51"}], "cv::COLOR_BGR2HLS": [{"name": "cv.COLOR_BGR2HLS", "value": "52"}], "cv::COLOR_RGB2HLS": [{"name": "cv.COLOR_RGB2HLS", "value": "53"}], "cv::COLOR_HSV2BGR": [{"name": "cv.COLOR_HSV2BGR", "value": "54"}], "cv::COLOR_HSV2RGB": [{"name": "cv.COLOR_HSV2RGB", "value": "55"}], "cv::COLOR_Lab2BGR": [{"name": "cv.COLOR_Lab2BGR", "value": "56"}], "cv::COLOR_Lab2RGB": [{"name": "cv.COLOR_Lab2RGB", "value": "57"}], "cv::COLOR_Luv2BGR": [{"name": "cv.COLOR_Luv2BGR", "value": "58"}], "cv::COLOR_Luv2RGB": [{"name": "cv.COLOR_Luv2RGB", "value": "59"}], "cv::COLOR_HLS2BGR": [{"name": "cv.COLOR_HLS2BGR", "value": "60"}], "cv::COLOR_HLS2RGB": [{"name": "cv.COLOR_HLS2RGB", "value": "61"}], "cv::COLOR_BGR2HSV_FULL": [{"name": "cv.COLOR_BGR2HSV_FULL", "value": "66"}], "cv::COLOR_RGB2HSV_FULL": [{"name": "cv.COLOR_RGB2HSV_FULL", "value": "67"}], "cv::COLOR_BGR2HLS_FULL": [{"name": "cv.COLOR_BGR2HLS_FULL", "value": "68"}], "cv::COLOR_RGB2HLS_FULL": [{"name": "cv.COLOR_RGB2HLS_FULL", "value": "69"}], "cv::COLOR_HSV2BGR_FULL": [{"name": "cv.COLOR_HSV2BGR_FULL", "value": "70"}], "cv::COLOR_HSV2RGB_FULL": [{"name": "cv.COLOR_HSV2RGB_FULL", "value": "71"}], "cv::COLOR_HLS2BGR_FULL": [{"name": "cv.COLOR_HLS2BGR_FULL", "value": "72"}], "cv::COLOR_HLS2RGB_FULL": [{"name": "cv.COLOR_HLS2RGB_FULL", "value": "73"}], "cv::COLOR_LBGR2Lab": [{"name": "cv.COLOR_LBGR2Lab", "value": "74"}], "cv::COLOR_LRGB2Lab": [{"name": "cv.COLOR_LRGB2Lab", "value": "75"}], "cv::COLOR_LBGR2Luv": [{"name": "cv.COLOR_LBGR2Luv", "value": "76"}], "cv::COLOR_LRGB2Luv": [{"name": "cv.COLOR_LRGB2Luv", "value": "77"}], "cv::COLOR_Lab2LBGR": [{"name": "cv.COLOR_Lab2LBGR", "value": "78"}], "cv::COLOR_Lab2LRGB": [{"name": "cv.COLOR_Lab2LRGB", "value": "79"}], "cv::COLOR_Luv2LBGR": [{"name": "cv.COLOR_Luv2LBGR", "value": "80"}], "cv::COLOR_Luv2LRGB": [{"name": "cv.COLOR_Luv2LRGB", "value": "81"}], "cv::COLOR_BGR2YUV": [{"name": "cv.COLOR_BGR2YUV", "value": "82"}], "cv::COLOR_RGB2YUV": [{"name": "cv.COLOR_RGB2YUV", "value": "83"}], "cv::COLOR_YUV2BGR": [{"name": "cv.COLOR_YUV2BGR", "value": "84"}], "cv::COLOR_YUV2RGB": [{"name": "cv.COLOR_YUV2RGB", "value": "85"}], "cv::COLOR_YUV2RGB_NV12": [{"name": "cv.COLOR_YUV2RGB_NV12", "value": "90"}], "cv::COLOR_YUV2BGR_NV12": [{"name": "cv.COLOR_YUV2BGR_NV12", "value": "91"}], "cv::COLOR_YUV2RGB_NV21": [{"name": "cv.COLOR_YUV2RGB_NV21", "value": "92"}], "cv::COLOR_YUV2BGR_NV21": [{"name": "cv.COLOR_YUV2BGR_NV21", "value": "93"}], "cv::COLOR_YUV420sp2RGB": [{"name": "cv.COLOR_YUV420sp2RGB", "value": "COLOR_YUV2RGB_NV21"}], "cv::COLOR_YUV420sp2BGR": [{"name": "cv.COLOR_YUV420sp2BGR", "value": "COLOR_YUV2BGR_NV21"}], "cv::COLOR_YUV2RGBA_NV12": [{"name": "cv.COLOR_YUV2RGBA_NV12", "value": "94"}], "cv::COLOR_YUV2BGRA_NV12": [{"name": "cv.COLOR_YUV2BGRA_NV12", "value": "95"}], "cv::COLOR_YUV2RGBA_NV21": [{"name": "cv.COLOR_YUV2RGBA_NV21", "value": "96"}], "cv::COLOR_YUV2BGRA_NV21": [{"name": "cv.COLOR_YUV2BGRA_NV21", "value": "97"}], "cv::COLOR_YUV420sp2RGBA": [{"name": "cv.COLOR_YUV420sp2RGBA", "value": "COLOR_YUV2RGBA_NV21"}], "cv::COLOR_YUV420sp2BGRA": [{"name": "cv.COLOR_YUV420sp2BGRA", "value": "COLOR_YUV2BGRA_NV21"}], "cv::COLOR_YUV2RGB_YV12": [{"name": "cv.COLOR_YUV2RGB_YV12", "value": "98"}], "cv::COLOR_YUV2BGR_YV12": [{"name": "cv.COLOR_YUV2BGR_YV12", "value": "99"}], "cv::COLOR_YUV2RGB_IYUV": [{"name": "cv.COLOR_YUV2RGB_IYUV", "value": "100"}], "cv::COLOR_YUV2BGR_IYUV": [{"name": "cv.COLOR_YUV2BGR_IYUV", "value": "101"}], "cv::COLOR_YUV2RGB_I420": [{"name": "cv.COLOR_YUV2RGB_I420", "value": "COLOR_YUV2RGB_IYUV"}], "cv::COLOR_YUV2BGR_I420": [{"name": "cv.COLOR_YUV2BGR_I420", "value": "COLOR_YUV2BGR_IYUV"}], "cv::COLOR_YUV420p2RGB": [{"name": "cv.COLOR_YUV420p2RGB", "value": "COLOR_YUV2RGB_YV12"}], "cv::COLOR_YUV420p2BGR": [{"name": "cv.COLOR_YUV420p2BGR", "value": "COLOR_YUV2BGR_YV12"}], "cv::COLOR_YUV2RGBA_YV12": [{"name": "cv.COLOR_YUV2RGBA_YV12", "value": "102"}], "cv::COLOR_YUV2BGRA_YV12": [{"name": "cv.COLOR_YUV2BGRA_YV12", "value": "103"}], "cv::COLOR_YUV2RGBA_IYUV": [{"name": "cv.COLOR_YUV2RGBA_IYUV", "value": "104"}], "cv::COLOR_YUV2BGRA_IYUV": [{"name": "cv.COLOR_YUV2BGRA_IYUV", "value": "105"}], "cv::COLOR_YUV2RGBA_I420": [{"name": "cv.COLOR_YUV2RGBA_I420", "value": "COLOR_YUV2RGBA_IYUV"}], "cv::COLOR_YUV2BGRA_I420": [{"name": "cv.COLOR_YUV2BGRA_I420", "value": "COLOR_YUV2BGRA_IYUV"}], "cv::COLOR_YUV420p2RGBA": [{"name": "cv.COLOR_YUV420p2RGBA", "value": "COLOR_YUV2RGBA_YV12"}], "cv::COLOR_YUV420p2BGRA": [{"name": "cv.COLOR_YUV420p2BGRA", "value": "COLOR_YUV2BGRA_YV12"}], "cv::COLOR_YUV2GRAY_420": [{"name": "cv.COLOR_YUV2GRAY_420", "value": "106"}], "cv::COLOR_YUV2GRAY_NV21": [{"name": "cv.COLOR_YUV2GRAY_NV21", "value": "COLOR_YUV2GRAY_420"}], "cv::COLOR_YUV2GRAY_NV12": [{"name": "cv.COLOR_YUV2GRAY_NV12", "value": "COLOR_YUV2GRAY_420"}], "cv::COLOR_YUV2GRAY_YV12": [{"name": "cv.COLOR_YUV2GRAY_YV12", "value": "COLOR_YUV2GRAY_420"}], "cv::COLOR_YUV2GRAY_IYUV": [{"name": "cv.COLOR_YUV2GRAY_IYUV", "value": "COLOR_YUV2GRAY_420"}], "cv::COLOR_YUV2GRAY_I420": [{"name": "cv.COLOR_YUV2GRAY_I420", "value": "COLOR_YUV2GRAY_420"}], "cv::COLOR_YUV420sp2GRAY": [{"name": "cv.COLOR_YUV420sp2GRAY", "value": "COLOR_YUV2GRAY_420"}], "cv::COLOR_YUV420p2GRAY": [{"name": "cv.COLOR_YUV420p2GRAY", "value": "COLOR_YUV2GRAY_420"}], "cv::COLOR_YUV2RGB_UYVY": [{"name": "cv.COLOR_YUV2RGB_UYVY", "value": "107"}], "cv::COLOR_YUV2BGR_UYVY": [{"name": "cv.COLOR_YUV2BGR_UYVY", "value": "108"}], "cv::COLOR_YUV2RGB_Y422": [{"name": "cv.COLOR_YUV2RGB_Y422", "value": "COLOR_YUV2RGB_UYVY"}], "cv::COLOR_YUV2BGR_Y422": [{"name": "cv.COLOR_YUV2BGR_Y422", "value": "COLOR_YUV2BGR_UYVY"}], "cv::COLOR_YUV2RGB_UYNV": [{"name": "cv.COLOR_YUV2RGB_UYNV", "value": "COLOR_YUV2RGB_UYVY"}], "cv::COLOR_YUV2BGR_UYNV": [{"name": "cv.COLOR_YUV2BGR_UYNV", "value": "COLOR_YUV2BGR_UYVY"}], "cv::COLOR_YUV2RGBA_UYVY": [{"name": "cv.COLOR_YUV2RGBA_UYVY", "value": "111"}], "cv::COLOR_YUV2BGRA_UYVY": [{"name": "cv.COLOR_YUV2BGRA_UYVY", "value": "112"}], "cv::COLOR_YUV2RGBA_Y422": [{"name": "cv.COLOR_YUV2RGBA_Y422", "value": "COLOR_YUV2RGBA_UYVY"}], "cv::COLOR_YUV2BGRA_Y422": [{"name": "cv.COLOR_YUV2BGRA_Y422", "value": "COLOR_YUV2BGRA_UYVY"}], "cv::COLOR_YUV2RGBA_UYNV": [{"name": "cv.COLOR_YUV2RGBA_UYNV", "value": "COLOR_YUV2RGBA_UYVY"}], "cv::COLOR_YUV2BGRA_UYNV": [{"name": "cv.COLOR_YUV2BGRA_UYNV", "value": "COLOR_YUV2BGRA_UYVY"}], "cv::COLOR_YUV2RGB_YUY2": [{"name": "cv.COLOR_YUV2RGB_YUY2", "value": "115"}], "cv::COLOR_YUV2BGR_YUY2": [{"name": "cv.COLOR_YUV2BGR_YUY2", "value": "116"}], "cv::COLOR_YUV2RGB_YVYU": [{"name": "cv.COLOR_YUV2RGB_YVYU", "value": "117"}], "cv::COLOR_YUV2BGR_YVYU": [{"name": "cv.COLOR_YUV2BGR_YVYU", "value": "118"}], "cv::COLOR_YUV2RGB_YUYV": [{"name": "cv.COLOR_YUV2RGB_YUYV", "value": "COLOR_YUV2RGB_YUY2"}], "cv::COLOR_YUV2BGR_YUYV": [{"name": "cv.COLOR_YUV2BGR_YUYV", "value": "COLOR_YUV2BGR_YUY2"}], "cv::COLOR_YUV2RGB_YUNV": [{"name": "cv.COLOR_YUV2RGB_YUNV", "value": "COLOR_YUV2RGB_YUY2"}], "cv::COLOR_YUV2BGR_YUNV": [{"name": "cv.COLOR_YUV2BGR_YUNV", "value": "COLOR_YUV2BGR_YUY2"}], "cv::COLOR_YUV2RGBA_YUY2": [{"name": "cv.COLOR_YUV2RGBA_YUY2", "value": "119"}], "cv::COLOR_YUV2BGRA_YUY2": [{"name": "cv.COLOR_YUV2BGRA_YUY2", "value": "120"}], "cv::COLOR_YUV2RGBA_YVYU": [{"name": "cv.COLOR_YUV2RGBA_YVYU", "value": "121"}], "cv::COLOR_YUV2BGRA_YVYU": [{"name": "cv.COLOR_YUV2BGRA_YVYU", "value": "122"}], "cv::COLOR_YUV2RGBA_YUYV": [{"name": "cv.COLOR_YUV2RGBA_YUYV", "value": "COLOR_YUV2RGBA_YUY2"}], "cv::COLOR_YUV2BGRA_YUYV": [{"name": "cv.COLOR_YUV2BGRA_YUYV", "value": "COLOR_YUV2BGRA_YUY2"}], "cv::COLOR_YUV2RGBA_YUNV": [{"name": "cv.COLOR_YUV2RGBA_YUNV", "value": "COLOR_YUV2RGBA_YUY2"}], "cv::COLOR_YUV2BGRA_YUNV": [{"name": "cv.COLOR_YUV2BGRA_YUNV", "value": "COLOR_YUV2BGRA_YUY2"}], "cv::COLOR_YUV2GRAY_UYVY": [{"name": "cv.COLOR_YUV2GRAY_UYVY", "value": "123"}], "cv::COLOR_YUV2GRAY_YUY2": [{"name": "cv.COLOR_YUV2GRAY_YUY2", "value": "124"}], "cv::COLOR_YUV2GRAY_Y422": [{"name": "cv.COLOR_YUV2GRAY_Y422", "value": "COLOR_YUV2GRAY_UYVY"}], "cv::COLOR_YUV2GRAY_UYNV": [{"name": "cv.COLOR_YUV2GRAY_UYNV", "value": "COLOR_YUV2GRAY_UYVY"}], "cv::COLOR_YUV2GRAY_YVYU": [{"name": "cv.COLOR_YUV2GRAY_YVYU", "value": "COLOR_YUV2GRAY_YUY2"}], "cv::COLOR_YUV2GRAY_YUYV": [{"name": "cv.COLOR_YUV2GRAY_YUYV", "value": "COLOR_YUV2GRAY_YUY2"}], "cv::COLOR_YUV2GRAY_YUNV": [{"name": "cv.COLOR_YUV2GRAY_YUNV", "value": "COLOR_YUV2GRAY_YUY2"}], "cv::COLOR_RGBA2mRGBA": [{"name": "cv.COLOR_RGBA2mRGBA", "value": "125"}], "cv::COLOR_mRGBA2RGBA": [{"name": "cv.COLOR_mRGBA2RGBA", "value": "126"}], "cv::COLOR_RGB2YUV_I420": [{"name": "cv.COLOR_RGB2YUV_I420", "value": "127"}], "cv::COLOR_BGR2YUV_I420": [{"name": "cv.COLOR_BGR2YUV_I420", "value": "128"}], "cv::COLOR_RGB2YUV_IYUV": [{"name": "cv.COLOR_RGB2YUV_IYUV", "value": "COLOR_RGB2YUV_I420"}], "cv::COLOR_BGR2YUV_IYUV": [{"name": "cv.COLOR_BGR2YUV_IYUV", "value": "COLOR_BGR2YUV_I420"}], "cv::COLOR_RGBA2YUV_I420": [{"name": "cv.COLOR_RGBA2YUV_I420", "value": "129"}], "cv::COLOR_BGRA2YUV_I420": [{"name": "cv.COLOR_BGRA2YUV_I420", "value": "130"}], "cv::COLOR_RGBA2YUV_IYUV": [{"name": "cv.COLOR_RGBA2YUV_IYUV", "value": "COLOR_RGBA2YUV_I420"}], "cv::COLOR_BGRA2YUV_IYUV": [{"name": "cv.COLOR_BGRA2YUV_IYUV", "value": "COLOR_BGRA2YUV_I420"}], "cv::COLOR_RGB2YUV_YV12": [{"name": "cv.COLOR_RGB2YUV_YV12", "value": "131"}], "cv::COLOR_BGR2YUV_YV12": [{"name": "cv.COLOR_BGR2YUV_YV12", "value": "132"}], "cv::COLOR_RGBA2YUV_YV12": [{"name": "cv.COLOR_RGBA2YUV_YV12", "value": "133"}], "cv::COLOR_BGRA2YUV_YV12": [{"name": "cv.COLOR_BGRA2YUV_YV12", "value": "134"}], "cv::COLOR_BayerBG2BGR": [{"name": "cv.COLOR_BayerBG2BGR", "value": "46"}], "cv::COLOR_BayerGB2BGR": [{"name": "cv.COLOR_BayerGB2BGR", "value": "47"}], "cv::COLOR_BayerRG2BGR": [{"name": "cv.COLOR_BayerRG2BGR", "value": "48"}], "cv::COLOR_BayerGR2BGR": [{"name": "cv.COLOR_BayerGR2BGR", "value": "49"}], "cv::COLOR_BayerBG2RGB": [{"name": "cv.COLOR_BayerBG2RGB", "value": "COLOR_BayerRG2BGR"}], "cv::COLOR_BayerGB2RGB": [{"name": "cv.COLOR_BayerGB2RGB", "value": "COLOR_BayerGR2BGR"}], "cv::COLOR_BayerRG2RGB": [{"name": "cv.COLOR_BayerRG2RGB", "value": "COLOR_BayerBG2BGR"}], "cv::COLOR_BayerGR2RGB": [{"name": "cv.COLOR_BayerGR2RGB", "value": "COLOR_BayerGB2BGR"}], "cv::COLOR_BayerBG2GRAY": [{"name": "cv.COLOR_BayerBG2GRAY", "value": "86"}], "cv::COLOR_BayerGB2GRAY": [{"name": "cv.COLOR_BayerGB2GRAY", "value": "87"}], "cv::COLOR_BayerRG2GRAY": [{"name": "cv.COLOR_BayerRG2GRAY", "value": "88"}], "cv::COLOR_BayerGR2GRAY": [{"name": "cv.COLOR_BayerGR2GRAY", "value": "89"}], "cv::COLOR_BayerBG2BGR_VNG": [{"name": "cv.COLOR_BayerBG2BGR_VNG", "value": "62"}], "cv::COLOR_BayerGB2BGR_VNG": [{"name": "cv.COLOR_BayerGB2BGR_VNG", "value": "63"}], "cv::COLOR_BayerRG2BGR_VNG": [{"name": "cv.COLOR_BayerRG2BGR_VNG", "value": "64"}], "cv::COLOR_BayerGR2BGR_VNG": [{"name": "cv.COLOR_BayerGR2BGR_VNG", "value": "65"}], "cv::COLOR_BayerBG2RGB_VNG": [{"name": "cv.COLOR_BayerBG2RGB_VNG", "value": "COLOR_BayerRG2BGR_VNG"}], "cv::COLOR_BayerGB2RGB_VNG": [{"name": "cv.COLOR_BayerGB2RGB_VNG", "value": "COLOR_BayerGR2BGR_VNG"}], "cv::COLOR_BayerRG2RGB_VNG": [{"name": "cv.COLOR_BayerRG2RGB_VNG", "value": "COLOR_BayerBG2BGR_VNG"}], "cv::COLOR_BayerGR2RGB_VNG": [{"name": "cv.COLOR_BayerGR2RGB_VNG", "value": "COLOR_BayerGB2BGR_VNG"}], "cv::COLOR_BayerBG2BGR_EA": [{"name": "cv.COLOR_BayerBG2BGR_EA", "value": "135"}], "cv::COLOR_BayerGB2BGR_EA": [{"name": "cv.COLOR_BayerGB2BGR_EA", "value": "136"}], "cv::COLOR_BayerRG2BGR_EA": [{"name": "cv.COLOR_BayerRG2BGR_EA", "value": "137"}], "cv::COLOR_BayerGR2BGR_EA": [{"name": "cv.COLOR_BayerGR2BGR_EA", "value": "138"}], "cv::COLOR_BayerBG2RGB_EA": [{"name": "cv.COLOR_BayerBG2RGB_EA", "value": "COLOR_BayerRG2BGR_EA"}], "cv::COLOR_BayerGB2RGB_EA": [{"name": "cv.COLOR_BayerGB2RGB_EA", "value": "COLOR_BayerGR2BGR_EA"}], "cv::COLOR_BayerRG2RGB_EA": [{"name": "cv.COLOR_BayerRG2RGB_EA", "value": "COLOR_BayerBG2BGR_EA"}], "cv::COLOR_BayerGR2RGB_EA": [{"name": "cv.COLOR_BayerGR2RGB_EA", "value": "COLOR_BayerGB2BGR_EA"}], "cv::COLOR_BayerBG2BGRA": [{"name": "cv.COLOR_BayerBG2BGRA", "value": "139"}], "cv::COLOR_BayerGB2BGRA": [{"name": "cv.COLOR_BayerGB2BGRA", "value": "140"}], "cv::COLOR_BayerRG2BGRA": [{"name": "cv.COLOR_BayerRG2BGRA", "value": "141"}], "cv::COLOR_BayerGR2BGRA": [{"name": "cv.COLOR_BayerGR2BGRA", "value": "142"}], "cv::COLOR_BayerBG2RGBA": [{"name": "cv.COLOR_BayerBG2RGBA", "value": "COLOR_BayerRG2BGRA"}], "cv::COLOR_BayerGB2RGBA": [{"name": "cv.COLOR_BayerGB2RGBA", "value": "COLOR_BayerGR2BGRA"}], "cv::COLOR_BayerRG2RGBA": [{"name": "cv.COLOR_BayerRG2RGBA", "value": "COLOR_BayerBG2BGRA"}], "cv::COLOR_BayerGR2RGBA": [{"name": "cv.COLOR_BayerGR2RGBA", "value": "COLOR_BayerGB2BGRA"}], "cv::COLOR_COLORCVT_MAX": [{"name": "cv.COLOR_COLORCVT_MAX", "value": "143"}], "cv::INTERSECT_NONE": [{"name": "cv.INTERSECT_NONE", "value": "0"}], "cv::INTERSECT_PARTIAL": [{"name": "cv.INTERSECT_PARTIAL", "value": "1"}], "cv::INTERSECT_FULL": [{"name": "cv.INTERSECT_FULL", "value": "2"}], "cv::FILLED": [{"name": "cv.FILLED", "value": "-1"}], "cv::LINE_4": [{"name": "cv.LINE_4", "value": "4"}], "cv::LINE_8": [{"name": "cv.LINE_8", "value": "8"}], "cv::LINE_AA": [{"name": "cv.LINE_AA", "value": "16"}], "cv::FONT_HERSHEY_SIMPLEX": [{"name": "cv.FONT_HERSHEY_SIMPLEX", "value": "0"}], "cv::FONT_HERSHEY_PLAIN": [{"name": "cv.FONT_HERSHEY_PLAIN", "value": "1"}], "cv::FONT_HERSHEY_DUPLEX": [{"name": "cv.FONT_HERSHEY_DUPLEX", "value": "2"}], "cv::FONT_HERSHEY_COMPLEX": [{"name": "cv.FONT_HERSHEY_COMPLEX", "value": "3"}], "cv::FONT_HERSHEY_TRIPLEX": [{"name": "cv.FONT_HERSHEY_TRIPLEX", "value": "4"}], "cv::FONT_HERSHEY_COMPLEX_SMALL": [{"name": "cv.FONT_HERSHEY_COMPLEX_SMALL", "value": "5"}], "cv::FONT_HERSHEY_SCRIPT_SIMPLEX": [{"name": "cv.FONT_HERSHEY_SCRIPT_SIMPLEX", "value": "6"}], "cv::FONT_HERSHEY_SCRIPT_COMPLEX": [{"name": "cv.FONT_HERSHEY_SCRIPT_COMPLEX", "value": "7"}], "cv::FONT_ITALIC": [{"name": "cv.FONT_ITALIC", "value": "16"}], "cv::MARKER_CROSS": [{"name": "cv.MARKER_CROSS", "value": "0"}], "cv::MARKER_TILTED_CROSS": [{"name": "cv.MARKER_TILTED_CROSS", "value": "1"}], "cv::MARKER_STAR": [{"name": "cv.MARKER_STAR", "value": "2"}], "cv::MARKER_DIAMOND": [{"name": "cv.MARKER_DIAMOND", "value": "3"}], "cv::MARKER_SQUARE": [{"name": "cv.MARKER_SQUARE", "value": "4"}], "cv::MARKER_TRIANGLE_UP": [{"name": "cv.MARKER_TRIANGLE_UP", "value": "5"}], "cv::MARKER_TRIANGLE_DOWN": [{"name": "cv.MARKER_TRIANGLE_DOWN", "value": "6"}], "cv::GeneralizedHough": [{"name": "cv.GeneralizedHough"}], "cv::GeneralizedHoughBallard": [{"name": "cv.GeneralizedHoughBallard"}], "cv::GeneralizedHoughGuil": [{"name": "cv.GeneralizedHoughGuil"}], "cv::CLAHE": [{"name": "cv.CLAHE"}], "cv::Subdiv2D": [{"name": "cv.Subdiv2D"}], "cv::Subdiv2D::PTLOC_ERROR": [{"name": "cv.Subdiv2D_PTLOC_ERROR", "value": "-2"}], "cv::Subdiv2D::PTLOC_OUTSIDE_RECT": [{"name": "cv.Subdiv2D_PTLOC_OUTSIDE_RECT", "value": "-1"}], "cv::Subdiv2D::PTLOC_INSIDE": [{"name": "cv.Subdiv2D_PTLOC_INSIDE", "value": "0"}], "cv::Subdiv2D::PTLOC_VERTEX": [{"name": "cv.Subdiv2D_PTLOC_VERTEX", "value": "1"}], "cv::Subdiv2D::PTLOC_ON_EDGE": [{"name": "cv.Subdiv2D_PTLOC_ON_EDGE", "value": "2"}], "cv::Subdiv2D::NEXT_AROUND_ORG": [{"name": "cv.Subdiv2D_NEXT_AROUND_ORG", "value": "0x00"}], "cv::Subdiv2D::NEXT_AROUND_DST": [{"name": "cv.Subdiv2D_NEXT_AROUND_DST", "value": "0x22"}], "cv::Subdiv2D::PREV_AROUND_ORG": [{"name": "cv.Subdiv2D_PREV_AROUND_ORG", "value": "0x11"}], "cv::Subdiv2D::PREV_AROUND_DST": [{"name": "cv.Subdiv2D_PREV_AROUND_DST", "value": "0x33"}], "cv::Subdiv2D::NEXT_AROUND_LEFT": [{"name": "cv.Subdiv2D_NEXT_AROUND_LEFT", "value": "0x13"}], "cv::Subdiv2D::NEXT_AROUND_RIGHT": [{"name": "cv.Subdiv2D_NEXT_AROUND_RIGHT", "value": "0x31"}], "cv::Subdiv2D::PREV_AROUND_LEFT": [{"name": "cv.Subdiv2D_PREV_AROUND_LEFT", "value": "0x20"}], "cv::Subdiv2D::PREV_AROUND_RIGHT": [{"name": "cv.Subdiv2D_PREV_AROUND_RIGHT", "value": "0x02"}], "cv::LineSegmentDetector": [{"name": "cv.LineSegmentDetector"}], "cv::TM_SQDIFF": [{"name": "cv.TM_SQDIFF", "value": "0"}], "cv::TM_SQDIFF_NORMED": [{"name": "cv.TM_SQDIFF_NORMED", "value": "1"}], "cv::TM_CCORR": [{"name": "cv.TM_CCORR", "value": "2"}], "cv::TM_CCORR_NORMED": [{"name": "cv.TM_CCORR_NORMED", "value": "3"}], "cv::TM_CCOEFF": [{"name": "cv.TM_CCOEFF", "value": "4"}], "cv::TM_CCOEFF_NORMED": [{"name": "cv.TM_CCOEFF_NORMED", "value": "5"}], "cv::COLORMAP_AUTUMN": [{"name": "cv.COLORMAP_AUTUMN", "value": "0"}], "cv::COLORMAP_BONE": [{"name": "cv.COLORMAP_BONE", "value": "1"}], "cv::COLORMAP_JET": [{"name": "cv.COLORMAP_JET", "value": "2"}], "cv::COLORMAP_WINTER": [{"name": "cv.COLORMAP_WINTER", "value": "3"}], "cv::COLORMAP_RAINBOW": [{"name": "cv.COLORMAP_RAINBOW", "value": "4"}], "cv::COLORMAP_OCEAN": [{"name": "cv.COLORMAP_OCEAN", "value": "5"}], "cv::COLORMAP_SUMMER": [{"name": "cv.COLORMAP_SUMMER", "value": "6"}], "cv::COLORMAP_SPRING": [{"name": "cv.COLORMAP_SPRING", "value": "7"}], "cv::COLORMAP_COOL": [{"name": "cv.COLORMAP_COOL", "value": "8"}], "cv::COLORMAP_HSV": [{"name": "cv.COLORMAP_HSV", "value": "9"}], "cv::COLORMAP_PINK": [{"name": "cv.COLORMAP_PINK", "value": "10"}], "cv::COLORMAP_HOT": [{"name": "cv.COLORMAP_HOT", "value": "11"}], "cv::COLORMAP_PARULA": [{"name": "cv.COLORMAP_PARULA", "value": "12"}], "cv::COLORMAP_MAGMA": [{"name": "cv.COLORMAP_MAGMA", "value": "13"}], "cv::COLORMAP_INFERNO": [{"name": "cv.COLORMAP_INFERNO", "value": "14"}], "cv::COLORMAP_PLASMA": [{"name": "cv.COLORMAP_PLASMA", "value": "15"}], "cv::COLORMAP_VIRIDIS": [{"name": "cv.COLORMAP_VIRIDIS", "value": "16"}], "cv::COLORMAP_CIVIDIS": [{"name": "cv.COLORMAP_CIVIDIS", "value": "17"}], "cv::COLORMAP_TWILIGHT": [{"name": "cv.COLORMAP_TWILIGHT", "value": "18"}], "cv::COLORMAP_TWILIGHT_SHIFTED": [{"name": "cv.COLORMAP_TWILIGHT_SHIFTED", "value": "19"}], "cv::COLORMAP_TURBO": [{"name": "cv.COLORMAP_TURBO", "value": "20"}], "cv::COLORMAP_DEEPGREEN": [{"name": "cv.COLORMAP_DEEPGREEN", "value": "21"}], "cv::ml::VAR_NUMERICAL": [{"name": "cv.ml.VAR_NUMERICAL", "value": "0"}], "cv::ml::VAR_ORDERED": [{"name": "cv.ml.VAR_ORDERED", "value": "0"}], "cv::ml::VAR_CATEGORICAL": [{"name": "cv.ml.VAR_CATEGORICAL", "value": "1"}], "cv::ml::TEST_ERROR": [{"name": "cv.ml.TEST_ERROR", "value": "0"}], "cv::ml::TRAIN_ERROR": [{"name": "cv.ml.TRAIN_ERROR", "value": "1"}], "cv::ml::ROW_SAMPLE": [{"name": "cv.ml.ROW_SAMPLE", "value": "0"}], "cv::ml::COL_SAMPLE": [{"name": "cv.ml.COL_SAMPLE", "value": "1"}], "cv::ml::ParamGrid": [{"name": "cv.ml_ParamGrid"}], "cv::ml::TrainData": [{"name": "cv.ml_TrainData"}], "cv::ml::StatModel": [{"name": "cv.ml_StatModel"}], "cv::ml::StatModel::UPDATE_MODEL": [{"name": "cv.ml.StatModel_UPDATE_MODEL", "value": "1"}], "cv::ml::StatModel::RAW_OUTPUT": [{"name": "cv.ml.StatModel_RAW_OUTPUT", "value": "1"}], "cv::ml::StatModel::COMPRESSED_INPUT": [{"name": "cv.ml.StatModel_COMPRESSED_INPUT", "value": "2"}], "cv::ml::StatModel::PREPROCESSED_INPUT": [{"name": "cv.ml.StatModel_PREPROCESSED_INPUT", "value": "4"}], "cv::ml::NormalBayesClassifier": [{"name": "cv.ml_NormalBayesClassifier"}], "cv::ml::KNearest": [{"name": "cv.ml_KNearest"}], "cv::ml::KNearest::BRUTE_FORCE": [{"name": "cv.ml.KNearest_BRUTE_FORCE", "value": "1"}], "cv::ml::KNearest::KDTREE": [{"name": "cv.ml.KNearest_KDTREE", "value": "2"}], "cv::ml::SVM": [{"name": "cv.ml_SVM"}], "cv::ml::SVM::C_SVC": [{"name": "cv.ml.SVM_C_SVC", "value": "100"}], "cv::ml::SVM::NU_SVC": [{"name": "cv.ml.SVM_NU_SVC", "value": "101"}], "cv::ml::SVM::ONE_CLASS": [{"name": "cv.ml.SVM_ONE_CLASS", "value": "102"}], "cv::ml::SVM::EPS_SVR": [{"name": "cv.ml.SVM_EPS_SVR", "value": "103"}], "cv::ml::SVM::NU_SVR": [{"name": "cv.ml.SVM_NU_SVR", "value": "104"}], "cv::ml::SVM::CUSTOM": [{"name": "cv.ml.SVM_CUSTOM", "value": "-1"}], "cv::ml::SVM::LINEAR": [{"name": "cv.ml.SVM_LINEAR", "value": "0"}], "cv::ml::SVM::POLY": [{"name": "cv.ml.SVM_POLY", "value": "1"}], "cv::ml::SVM::RBF": [{"name": "cv.ml.SVM_RBF", "value": "2"}], "cv::ml::SVM::SIGMOID": [{"name": "cv.ml.SVM_SIGMOID", "value": "3"}], "cv::ml::SVM::CHI2": [{"name": "cv.ml.SVM_CHI2", "value": "4"}], "cv::ml::SVM::INTER": [{"name": "cv.ml.SVM_INTER", "value": "5"}], "cv::ml::SVM::C": [{"name": "cv.ml.SVM_C", "value": "0"}], "cv::ml::SVM::GAMMA": [{"name": "cv.ml.SVM_GAMMA", "value": "1"}], "cv::ml::SVM::P": [{"name": "cv.ml.SVM_P", "value": "2"}], "cv::ml::SVM::NU": [{"name": "cv.ml.SVM_NU", "value": "3"}], "cv::ml::SVM::COEF": [{"name": "cv.ml.SVM_COEF", "value": "4"}], "cv::ml::SVM::DEGREE": [{"name": "cv.ml.SVM_DEGREE", "value": "5"}], "cv::ml::EM": [{"name": "cv.ml_EM"}], "cv::ml::EM::COV_MAT_SPHERICAL": [{"name": "cv.ml.EM_COV_MAT_SPHERICAL", "value": "0"}], "cv::ml::EM::COV_MAT_DIAGONAL": [{"name": "cv.ml.EM_COV_MAT_DIAGONAL", "value": "1"}], "cv::ml::EM::COV_MAT_GENERIC": [{"name": "cv.ml.EM_COV_MAT_GENERIC", "value": "2"}], "cv::ml::EM::COV_MAT_DEFAULT": [{"name": "cv.ml.EM_COV_MAT_DEFAULT", "value": "COV_MAT_DIAGONAL"}], "cv::ml::EM::DEFAULT_NCLUSTERS": [{"name": "cv.ml.EM_DEFAULT_NCLUSTERS", "value": "5"}], "cv::ml::EM::DEFAULT_MAX_ITERS": [{"name": "cv.ml.EM_DEFAULT_MAX_ITERS", "value": "100"}], "cv::ml::EM::START_E_STEP": [{"name": "cv.ml.EM_START_E_STEP", "value": "1"}], "cv::ml::EM::START_M_STEP": [{"name": "cv.ml.EM_START_M_STEP", "value": "2"}], "cv::ml::EM::START_AUTO_STEP": [{"name": "cv.ml.EM_START_AUTO_STEP", "value": "0"}], "cv::ml::DTrees": [{"name": "cv.ml_DTrees"}], "cv::ml::DTrees::PREDICT_AUTO": [{"name": "cv.ml.DTrees_PREDICT_AUTO", "value": "0"}], "cv::ml::DTrees::PREDICT_SUM": [{"name": "cv.ml.DTrees_PREDICT_SUM", "value": "(1<<8)"}], "cv::ml::DTrees::PREDICT_MAX_VOTE": [{"name": "cv.ml.DTrees_PREDICT_MAX_VOTE", "value": "(2<<8)"}], "cv::ml::DTrees::PREDICT_MASK": [{"name": "cv.ml.DTrees_PREDICT_MASK", "value": "(3<<8)"}], "cv::ml::RTrees": [{"name": "cv.ml_RTrees"}], "cv::ml::Boost": [{"name": "cv.ml_Boost"}], "cv::ml::Boost::DISCRETE": [{"name": "cv.ml.Boost_DISCRETE", "value": "0"}], "cv::ml::Boost::REAL": [{"name": "cv.ml.Boost_REAL", "value": "1"}], "cv::ml::Boost::LOGIT": [{"name": "cv.ml.Boost_LOGIT", "value": "2"}], "cv::ml::Boost::GENTLE": [{"name": "cv.ml.Boost_GENTLE", "value": "3"}], "cv::ml::ANN_MLP": [{"name": "cv.ml_ANN_MLP"}], "cv::ml::ANN_MLP::BACKPROP": [{"name": "cv.ml.ANN_MLP_BACKPROP", "value": "0"}], "cv::ml::ANN_MLP::RPROP": [{"name": "cv.ml.ANN_MLP_RPROP", "value": "1"}], "cv::ml::ANN_MLP::ANNEAL": [{"name": "cv.ml.ANN_MLP_ANNEAL", "value": "2"}], "cv::ml::ANN_MLP::IDENTITY": [{"name": "cv.ml.ANN_MLP_IDENTITY", "value": "0"}], "cv::ml::ANN_MLP::SIGMOID_SYM": [{"name": "cv.ml.ANN_MLP_SIGMOID_SYM", "value": "1"}], "cv::ml::ANN_MLP::GAUSSIAN": [{"name": "cv.ml.ANN_MLP_GAUSSIAN", "value": "2"}], "cv::ml::ANN_MLP::RELU": [{"name": "cv.ml.ANN_MLP_RELU", "value": "3"}], "cv::ml::ANN_MLP::LEAKYRELU": [{"name": "cv.ml.ANN_MLP_LEAKYRELU", "value": "4"}], "cv::ml::ANN_MLP::UPDATE_WEIGHTS": [{"name": "cv.ml.ANN_MLP_UPDATE_WEIGHTS", "value": "1"}], "cv::ml::ANN_MLP::NO_INPUT_SCALE": [{"name": "cv.ml.ANN_MLP_NO_INPUT_SCALE", "value": "2"}], "cv::ml::ANN_MLP::NO_OUTPUT_SCALE": [{"name": "cv.ml.ANN_MLP_NO_OUTPUT_SCALE", "value": "4"}], "cv::ml::LogisticRegression": [{"name": "cv.ml_LogisticRegression"}], "cv::ml::LogisticRegression::REG_DISABLE": [{"name": "cv.ml.LogisticRegression_REG_DISABLE", "value": "-1"}], "cv::ml::LogisticRegression::REG_L1": [{"name": "cv.ml.LogisticRegression_REG_L1", "value": "0"}], "cv::ml::LogisticRegression::REG_L2": [{"name": "cv.ml.LogisticRegression_REG_L2", "value": "1"}], "cv::ml::LogisticRegression::BATCH": [{"name": "cv.ml.LogisticRegression_BATCH", "value": "0"}], "cv::ml::LogisticRegression::MINI_BATCH": [{"name": "cv.ml.LogisticRegression_MINI_BATCH", "value": "1"}], "cv::ml::SVMSGD": [{"name": "cv.ml_SVMSGD"}], "cv::ml::SVMSGD::SGD": [{"name": "cv.ml.SVMSGD_SGD", "value": "0"}], "cv::ml::SVMSGD::ASGD": [{"name": "cv.ml.SVMSGD_ASGD", "value": "1"}], "cv::ml::SVMSGD::SOFT_MARGIN": [{"name": "cv.ml.SVMSGD_SOFT_MARGIN", "value": "0"}], "cv::ml::SVMSGD::HARD_MARGIN": [{"name": "cv.ml.SVMSGD_HARD_MARGIN", "value": "1"}], "cv::phase_unwrapping::HistogramPhaseUnwrapping": [{"name": "cv.phase_unwrapping_HistogramPhaseUnwrapping"}], "cv::phase_unwrapping::HistogramPhaseUnwrapping::Params": [{"name": "cv.phase_unwrapping_HistogramPhaseUnwrapping_Params"}], "cv::phase_unwrapping::PhaseUnwrapping": [{"name": "cv.phase_unwrapping_PhaseUnwrapping"}], "cv::INPAINT_NS": [{"name": "cv.INPAINT_NS", "value": "0"}], "cv::INPAINT_TELEA": [{"name": "cv.INPAINT_TELEA", "value": "1"}], "cv::LDR_SIZE": [{"name": "cv.LDR_SIZE", "value": "256"}], "cv::Tonemap": [{"name": "cv.Tonemap"}], "cv::TonemapDrago": [{"name": "cv.TonemapDrago"}], "cv::TonemapReinhard": [{"name": "cv.TonemapReinhard"}], "cv::TonemapMantiuk": [{"name": "cv.TonemapMantiuk"}], "cv::AlignExposures": [{"name": "cv.AlignExposures"}], "cv::AlignMTB": [{"name": "cv.AlignMTB"}], "cv::CalibrateCRF": [{"name": "cv.CalibrateCRF"}], "cv::CalibrateDebevec": [{"name": "cv.CalibrateDebevec"}], "cv::CalibrateRobertson": [{"name": "cv.CalibrateRobertson"}], "cv::MergeExposures": [{"name": "cv.MergeExposures"}], "cv::MergeDebevec": [{"name": "cv.MergeDebevec"}], "cv::MergeMertens": [{"name": "cv.MergeMertens"}], "cv::MergeRobertson": [{"name": "cv.MergeRobertson"}], "cv::NORMAL_CLONE": [{"name": "cv.NORMAL_CLONE", "value": "1"}], "cv::MIXED_CLONE": [{"name": "cv.MIXED_CLONE", "value": "2"}], "cv::MONOCHROME_TRANSFER": [{"name": "cv.MONOCHROME_TRANSFER", "value": "3"}], "cv::RECURS_FILTER": [{"name": "cv.RECURS_FILTER", "value": "1"}], "cv::NORMCONV_FILTER": [{"name": "cv.NORMCONV_FILTER", "value": "2"}], "cv::plot::Plot2d": [{"name": "cv.plot_Plot2d"}], "cv::quality::QualityBase": [{"name": "cv.quality_QualityBase"}], "cv::quality::QualityBRISQUE": [{"name": "cv.quality_QualityBRISQUE"}], "cv::quality::QualityGMSD": [{"name": "cv.quality_QualityGMSD"}], "cv::quality::QualityMSE": [{"name": "cv.quality_QualityMSE"}], "cv::quality::QualityPSNR": [{"name": "cv.quality_QualityPSNR"}], "cv::quality::QualitySSIM": [{"name": "cv.quality_QualitySSIM"}], "cv::reg::Map": [{"name": "cv.reg_Map"}], "cv::reg::MapAffine": [{"name": "cv.reg_MapAffine"}], "cv::reg::Mapper": [{"name": "cv.reg_Mapper"}], "cv::reg::MapperGradAffine": [{"name": "cv.reg_MapperGradAffine"}], "cv::reg::MapperGradEuclid": [{"name": "cv.reg_MapperGradEuclid"}], "cv::reg::MapperGradProj": [{"name": "cv.reg_MapperGradProj"}], "cv::reg::MapperGradShift": [{"name": "cv.reg_MapperGradShift"}], "cv::reg::MapperGradSimilar": [{"name": "cv.reg_MapperGradSimilar"}], "cv::reg::MapperPyramid": [{"name": "cv.reg_MapperPyramid"}], "cv::reg::MapTypeCaster": [{"name": "cv.reg_MapTypeCaster"}], "cv::reg::MapProjec": [{"name": "cv.reg_MapProjec"}], "cv::reg::MapShift": [{"name": "cv.reg_MapShift"}], "cv::ppf_match_3d::ICP": [{"name": "cv.ppf_match_3d_ICP"}], "cv::ppf_match_3d::Pose3D": [{"name": "cv.ppf_match_3d_Pose3D"}], "cv::ppf_match_3d::PoseCluster3D": [{"name": "cv.ppf_match_3d_PoseCluster3D"}], "cv::ppf_match_3d::PPF3DDetector": [{"name": "cv.ppf_match_3d_PPF3DDetector"}], "cv::xphoto::HAAR": [{"name": "cv.xphoto.HAAR", "value": "0"}], "cv::xphoto::BM3D_STEPALL": [{"name": "cv.xphoto.BM3D_STEPALL", "value": "0"}], "cv::xphoto::BM3D_STEP1": [{"name": "cv.xphoto.BM3D_STEP1", "value": "1"}], "cv::xphoto::BM3D_STEP2": [{"name": "cv.xphoto.BM3D_STEP2", "value": "2"}], "cv::xphoto::INPAINT_SHIFTMAP": [{"name": "cv.xphoto.INPAINT_SHIFTMAP", "value": "0"}], "cv::xphoto::INPAINT_FSR_BEST": [{"name": "cv.xphoto.INPAINT_FSR_BEST", "value": "1"}], "cv::xphoto::INPAINT_FSR_FAST": [{"name": "cv.xphoto.INPAINT_FSR_FAST", "value": "2"}], "cv::xphoto::TonemapDurand": [{"name": "cv.xphoto_TonemapDurand"}], "cv::xphoto::WhiteBalancer": [{"name": "cv.xphoto_WhiteBalancer"}], "cv::xphoto::SimpleWB": [{"name": "cv.xphoto_SimpleWB"}], "cv::xphoto::GrayworldWB": [{"name": "cv.xphoto_GrayworldWB"}], "cv::xphoto::LearningBasedWB": [{"name": "cv.xphoto_LearningBasedWB"}], "cv::dnn::DictValue": [{"name": "cv.dnn_DictValue"}], "cv::dnn::DNN_BACKEND_DEFAULT": [{"name": "cv.dnn.DNN_BACKEND_DEFAULT", "value": "0"}], "cv::dnn::DNN_BACKEND_HALIDE": [{"name": "cv.dnn.DNN_BACKEND_HALIDE", "value": "0+1"}], "cv::dnn::DNN_BACKEND_INFERENCE_ENGINE": [{"name": "cv.dnn.DNN_BACKEND_INFERENCE_ENGINE", "value": "0+2"}], "cv::dnn::DNN_BACKEND_OPENCV": [{"name": "cv.dnn.DNN_BACKEND_OPENCV", "value": "0+3"}], "cv::dnn::DNN_BACKEND_VKCOM": [{"name": "cv.dnn.DNN_BACKEND_VKCOM", "value": "0+4"}], "cv::dnn::DNN_BACKEND_CUDA": [{"name": "cv.dnn.DNN_BACKEND_CUDA", "value": "0+5"}], "cv::dnn::DNN_TARGET_CPU": [{"name": "cv.dnn.DNN_TARGET_CPU", "value": "0"}], "cv::dnn::DNN_TARGET_OPENCL": [{"name": "cv.dnn.DNN_TARGET_OPENCL", "value": "0+1"}], "cv::dnn::DNN_TARGET_OPENCL_FP16": [{"name": "cv.dnn.DNN_TARGET_OPENCL_FP16", "value": "0+2"}], "cv::dnn::DNN_TARGET_MYRIAD": [{"name": "cv.dnn.DNN_TARGET_MYRIAD", "value": "0+3"}], "cv::dnn::DNN_TARGET_VULKAN": [{"name": "cv.dnn.DNN_TARGET_VULKAN", "value": "0+4"}], "cv::dnn::DNN_TARGET_FPGA": [{"name": "cv.dnn.DNN_TARGET_FPGA", "value": "0+5"}], "cv::dnn::DNN_TARGET_CUDA": [{"name": "cv.dnn.DNN_TARGET_CUDA", "value": "0+6"}], "cv::dnn::DNN_TARGET_CUDA_FP16": [{"name": "cv.dnn.DNN_TARGET_CUDA_FP16", "value": "0+7"}], "cv::dnn::Layer": [{"name": "cv.dnn_Layer"}], "cv::dnn::Net": [{"name": "cv.dnn_Net"}], "cv::dnn::Model": [{"name": "cv.dnn_Model"}], "cv::dnn::ClassificationModel": [{"name": "cv.dnn_ClassificationModel"}], "cv::dnn::KeypointsModel": [{"name": "cv.dnn_KeypointsModel"}], "cv::dnn::SegmentationModel": [{"name": "cv.dnn_SegmentationModel"}], "cv::dnn::DetectionModel": [{"name": "cv.dnn_DetectionModel"}], "cv::dnn_superres::DnnSuperResImpl": [{"name": "cv.dnn_superres_DnnSuperResImpl"}], "cv::Feature2D": [{"name": "cv.Feature2D"}], "cv::AffineFeature": [{"name": "cv.AffineFeature"}], "cv::SIFT": [{"name": "cv.SIFT"}], "cv::BRISK": [{"name": "cv.BRISK"}], "cv::ORB": [{"name": "cv.ORB"}], "cv::ORB::HARRIS_SCORE": [{"name": "cv.ORB_HARRIS_SCORE", "value": "0"}], "cv::ORB::FAST_SCORE": [{"name": "cv.ORB_FAST_SCORE", "value": "1"}], "cv::MSER": [{"name": "cv.MSER"}], "cv::FastFeatureDetector": [{"name": "cv.FastFeatureDetector"}], "cv::FastFeatureDetector::TYPE_5_8": [{"name": "cv.FastFeatureDetector_TYPE_5_8", "value": "0"}], "cv::FastFeatureDetector::TYPE_7_12": [{"name": "cv.FastFeatureDetector_TYPE_7_12", "value": "1"}], "cv::FastFeatureDetector::TYPE_9_16": [{"name": "cv.FastFeatureDetector_TYPE_9_16", "value": "2"}], "cv::FastFeatureDetector::THRESHOLD": [{"name": "cv.FastFeatureDetector_THRESHOLD", "value": "10000"}], "cv::FastFeatureDetector::NONMAX_SUPPRESSION": [{"name": "cv.FastFeatureDetector_NONMAX_SUPPRESSION", "value": "10001"}], "cv::FastFeatureDetector::FAST_N": [{"name": "cv.FastFeatureDetector_FAST_N", "value": "10002"}], "cv::AgastFeatureDetector": [{"name": "cv.AgastFeatureDetector"}], "cv::AgastFeatureDetector::AGAST_5_8": [{"name": "cv.AgastFeatureDetector_AGAST_5_8", "value": "0"}], "cv::AgastFeatureDetector::AGAST_7_12d": [{"name": "cv.AgastFeatureDetector_AGAST_7_12d", "value": "1"}], "cv::AgastFeatureDetector::AGAST_7_12s": [{"name": "cv.AgastFeatureDetector_AGAST_7_12s", "value": "2"}], "cv::AgastFeatureDetector::OAST_9_16": [{"name": "cv.AgastFeatureDetector_OAST_9_16", "value": "3"}], "cv::AgastFeatureDetector::THRESHOLD": [{"name": "cv.AgastFeatureDetector_THRESHOLD", "value": "10000"}], "cv::AgastFeatureDetector::NONMAX_SUPPRESSION": [{"name": "cv.AgastFeatureDetector_NONMAX_SUPPRESSION", "value": "10001"}], "cv::GFTTDetector": [{"name": "cv.GFTTDetector"}], "cv::SimpleBlobDetector": [{"name": "cv.SimpleBlobDetector"}], "cv::SimpleBlobDetector::Params": [{"name": "cv.SimpleBlobDetector_Params"}], "cv::KAZE": [{"name": "cv.KAZE"}], "cv::KAZE::DIFF_PM_G1": [{"name": "cv.KAZE_DIFF_PM_G1", "value": "0"}], "cv::KAZE::DIFF_PM_G2": [{"name": "cv.KAZE_DIFF_PM_G2", "value": "1"}], "cv::KAZE::DIFF_WEICKERT": [{"name": "cv.KAZE_DIFF_WEICKERT", "value": "2"}], "cv::KAZE::DIFF_CHARBONNIER": [{"name": "cv.KAZE_DIFF_CHARBONNIER", "value": "3"}], "cv::AKAZE": [{"name": "cv.AKAZE"}], "cv::AKAZE::DESCRIPTOR_KAZE_UPRIGHT": [{"name": "cv.AKAZE_DESCRIPTOR_KAZE_UPRIGHT", "value": "2"}], "cv::AKAZE::DESCRIPTOR_KAZE": [{"name": "cv.AKAZE_DESCRIPTOR_KAZE", "value": "3"}], "cv::AKAZE::DESCRIPTOR_MLDB_UPRIGHT": [{"name": "cv.AKAZE_DESCRIPTOR_MLDB_UPRIGHT", "value": "4"}], "cv::AKAZE::DESCRIPTOR_MLDB": [{"name": "cv.AKAZE_DESCRIPTOR_MLDB", "value": "5"}], "cv::DescriptorMatcher": [{"name": "cv.DescriptorMatcher"}], "cv::DescriptorMatcher::FLANNBASED": [{"name": "cv.DescriptorMatcher_FLANNBASED", "value": "1"}], "cv::DescriptorMatcher::BRUTEFORCE": [{"name": "cv.DescriptorMatcher_BRUTEFORCE", "value": "2"}], "cv::DescriptorMatcher::BRUTEFORCE_L1": [{"name": "cv.DescriptorMatcher_BRUTEFORCE_L1", "value": "3"}], "cv::DescriptorMatcher::BRUTEFORCE_HAMMING": [{"name": "cv.DescriptorMatcher_BRUTEFORCE_HAMMING", "value": "4"}], "cv::DescriptorMatcher::BRUTEFORCE_HAMMINGLUT": [{"name": "cv.DescriptorMatcher_BRUTEFORCE_HAMMINGLUT", "value": "5"}], "cv::DescriptorMatcher::BRUTEFORCE_SL2": [{"name": "cv.DescriptorMatcher_BRUTEFORCE_SL2", "value": "6"}], "cv::BFMatcher": [{"name": "cv.BFMatcher"}], "cv::FlannBasedMatcher": [{"name": "cv.FlannBasedMatcher"}], "cv::DrawMatchesFlags::DEFAULT": [{"name": "cv.DrawMatchesFlags_DEFAULT", "value": "0"}], "cv::DrawMatchesFlags::DRAW_OVER_OUTIMG": [{"name": "cv.DrawMatchesFlags_DRAW_OVER_OUTIMG", "value": "1"}], "cv::DrawMatchesFlags::NOT_DRAW_SINGLE_POINTS": [{"name": "cv.DrawMatchesFlags_NOT_DRAW_SINGLE_POINTS", "value": "2"}], "cv::DrawMatchesFlags::DRAW_RICH_KEYPOINTS": [{"name": "cv.DrawMatchesFlags_DRAW_RICH_KEYPOINTS", "value": "4"}], "cv::BOWTrainer": [{"name": "cv.BOWTrainer"}], "cv::BOWKMeansTrainer": [{"name": "cv.BOWKMeansTrainer"}], "cv::BOWImgDescriptorExtractor": [{"name": "cv.BOWImgDescriptorExtractor"}], "cv::ft::LINEAR": [{"name": "cv.ft.LINEAR", "value": "1"}], "cv::ft::SINUS": [{"name": "cv.ft.SINUS", "value": "2"}], "cv::ft::ONE_STEP": [{"name": "cv.ft.ONE_STEP", "value": "1"}], "cv::ft::MULTI_STEP": [{"name": "cv.ft.MULTI_STEP", "value": "2"}], "cv::ft::ITERATIVE": [{"name": "cv.ft.ITERATIVE", "value": "3"}], "cv::hfs::HfsSegment": [{"name": "cv.hfs_HfsSegment"}], "cv::img_hash::AverageHash": [{"name": "cv.img_hash_AverageHash"}], "cv::img_hash::BLOCK_MEAN_HASH_MODE_0": [{"name": "cv.img_hash.BLOCK_MEAN_HASH_MODE_0", "value": "0"}], "cv::img_hash::BLOCK_MEAN_HASH_MODE_1": [{"name": "cv.img_hash.BLOCK_MEAN_HASH_MODE_1", "value": "1"}], "cv::img_hash::BlockMeanHash": [{"name": "cv.img_hash_BlockMeanHash"}], "cv::img_hash::ColorMomentHash": [{"name": "cv.img_hash_ColorMomentHash"}], "cv::img_hash::ImgHashBase": [{"name": "cv.img_hash_ImgHashBase"}], "cv::img_hash::MarrHildrethHash": [{"name": "cv.img_hash_MarrHildrethHash"}], "cv::img_hash::PHash": [{"name": "cv.img_hash_PHash"}], "cv::img_hash::RadialVarianceHash": [{"name": "cv.img_hash_RadialVarianceHash"}], "cv::IMREAD_UNCHANGED": [{"name": "cv.IMREAD_UNCHANGED", "value": "-1"}], "cv::IMREAD_GRAYSCALE": [{"name": "cv.IMREAD_GRAYSCALE", "value": "0"}], "cv::IMREAD_COLOR": [{"name": "cv.IMREAD_COLOR", "value": "1"}], "cv::IMREAD_ANYDEPTH": [{"name": "cv.IMREAD_ANYDEPTH", "value": "2"}], "cv::IMREAD_ANYCOLOR": [{"name": "cv.IMREAD_ANYCOLOR", "value": "4"}], "cv::IMREAD_LOAD_GDAL": [{"name": "cv.IMREAD_LOAD_GDAL", "value": "8"}], "cv::IMREAD_REDUCED_GRAYSCALE_2": [{"name": "cv.IMREAD_REDUCED_GRAYSCALE_2", "value": "16"}], "cv::IMREAD_REDUCED_COLOR_2": [{"name": "cv.IMREAD_REDUCED_COLOR_2", "value": "17"}], "cv::IMREAD_REDUCED_GRAYSCALE_4": [{"name": "cv.IMREAD_REDUCED_GRAYSCALE_4", "value": "32"}], "cv::IMREAD_REDUCED_COLOR_4": [{"name": "cv.IMREAD_REDUCED_COLOR_4", "value": "33"}], "cv::IMREAD_REDUCED_GRAYSCALE_8": [{"name": "cv.IMREAD_REDUCED_GRAYSCALE_8", "value": "64"}], "cv::IMREAD_REDUCED_COLOR_8": [{"name": "cv.IMREAD_REDUCED_COLOR_8", "value": "65"}], "cv::IMREAD_IGNORE_ORIENTATION": [{"name": "cv.IMREAD_IGNORE_ORIENTATION", "value": "128"}], "cv::IMWRITE_JPEG_QUALITY": [{"name": "cv.IMWRITE_JPEG_QUALITY", "value": "1"}], "cv::IMWRITE_JPEG_PROGRESSIVE": [{"name": "cv.IMWRITE_JPEG_PROGRESSIVE", "value": "2"}], "cv::IMWRITE_JPEG_OPTIMIZE": [{"name": "cv.IMWRITE_JPEG_OPTIMIZE", "value": "3"}], "cv::IMWRITE_JPEG_RST_INTERVAL": [{"name": "cv.IMWRITE_JPEG_RST_INTERVAL", "value": "4"}], "cv::IMWRITE_JPEG_LUMA_QUALITY": [{"name": "cv.IMWRITE_JPEG_LUMA_QUALITY", "value": "5"}], "cv::IMWRITE_JPEG_CHROMA_QUALITY": [{"name": "cv.IMWRITE_JPEG_CHROMA_QUALITY", "value": "6"}], "cv::IMWRITE_PNG_COMPRESSION": [{"name": "cv.IMWRITE_PNG_COMPRESSION", "value": "16"}], "cv::IMWRITE_PNG_STRATEGY": [{"name": "cv.IMWRITE_PNG_STRATEGY", "value": "17"}], "cv::IMWRITE_PNG_BILEVEL": [{"name": "cv.IMWRITE_PNG_BILEVEL", "value": "18"}], "cv::IMWRITE_PXM_BINARY": [{"name": "cv.IMWRITE_PXM_BINARY", "value": "32"}], "cv::IMWRITE_EXR_TYPE": [{"name": "cv.IMWRITE_EXR_TYPE", "value": "(3 << 4) + 0"}], "cv::IMWRITE_WEBP_QUALITY": [{"name": "cv.IMWRITE_WEBP_QUALITY", "value": "64"}], "cv::IMWRITE_PAM_TUPLETYPE": [{"name": "cv.IMWRITE_PAM_TUPLETYPE", "value": "128"}], "cv::IMWRITE_TIFF_RESUNIT": [{"name": "cv.IMWRITE_TIFF_RESUNIT", "value": "256"}], "cv::IMWRITE_TIFF_XDPI": [{"name": "cv.IMWRITE_TIFF_XDPI", "value": "257"}], "cv::IMWRITE_TIFF_YDPI": [{"name": "cv.IMWRITE_TIFF_YDPI", "value": "258"}], "cv::IMWRITE_TIFF_COMPRESSION": [{"name": "cv.IMWRITE_TIFF_COMPRESSION", "value": "259"}], "cv::IMWRITE_JPEG2000_COMPRESSION_X1000": [{"name": "cv.IMWRITE_JPEG2000_COMPRESSION_X1000", "value": "272"}], "cv::IMWRITE_EXR_TYPE_HALF": [{"name": "cv.IMWRITE_EXR_TYPE_HALF", "value": "1"}], "cv::IMWRITE_EXR_TYPE_FLOAT": [{"name": "cv.IMWRITE_EXR_TYPE_FLOAT", "value": "2"}], "cv::IMWRITE_PNG_STRATEGY_DEFAULT": [{"name": "cv.IMWRITE_PNG_STRATEGY_DEFAULT", "value": "0"}], "cv::IMWRITE_PNG_STRATEGY_FILTERED": [{"name": "cv.IMWRITE_PNG_STRATEGY_FILTERED", "value": "1"}], "cv::IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY": [{"name": "cv.IMWRITE_PNG_STRATEGY_HUFFMAN_ONLY", "value": "2"}], "cv::IMWRITE_PNG_STRATEGY_RLE": [{"name": "cv.IMWRITE_PNG_STRATEGY_RLE", "value": "3"}], "cv::IMWRITE_PNG_STRATEGY_FIXED": [{"name": "cv.IMWRITE_PNG_STRATEGY_FIXED", "value": "4"}], "cv::IMWRITE_PAM_FORMAT_NULL": [{"name": "cv.IMWRITE_PAM_FORMAT_NULL", "value": "0"}], "cv::IMWRITE_PAM_FORMAT_BLACKANDWHITE": [{"name": "cv.IMWRITE_PAM_FORMAT_BLACKANDWHITE", "value": "1"}], "cv::IMWRITE_PAM_FORMAT_GRAYSCALE": [{"name": "cv.IMWRITE_PAM_FORMAT_GRAYSCALE", "value": "2"}], "cv::IMWRITE_PAM_FORMAT_GRAYSCALE_ALPHA": [{"name": "cv.IMWRITE_PAM_FORMAT_GRAYSCALE_ALPHA", "value": "3"}], "cv::IMWRITE_PAM_FORMAT_RGB": [{"name": "cv.IMWRITE_PAM_FORMAT_RGB", "value": "4"}], "cv::IMWRITE_PAM_FORMAT_RGB_ALPHA": [{"name": "cv.IMWRITE_PAM_FORMAT_RGB_ALPHA", "value": "5"}], "cv::line_descriptor::KeyLine": [{"name": "cv.line_descriptor_KeyLine"}], "cv::line_descriptor::BinaryDescriptor": [{"name": "cv.line_descriptor_BinaryDescriptor"}], "cv::line_descriptor::LSDParam": [{"name": "cv.line_descriptor_LSDParam"}], "cv::line_descriptor::LSDDetector": [{"name": "cv.line_descriptor_LSDDetector"}], "cv::line_descriptor::BinaryDescriptorMatcher": [{"name": "cv.line_descriptor_BinaryDescriptorMatcher"}], "cv::line_descriptor::DrawLinesMatchesFlags": [{"name": "cv.line_descriptor_DrawLinesMatchesFlags"}], "cv::saliency::Saliency": [{"name": "cv.saliency_Saliency"}], "cv::saliency::StaticSaliency": [{"name": "cv.saliency_StaticSaliency"}], "cv::saliency::MotionSaliency": [{"name": "cv.saliency_MotionSaliency"}], "cv::saliency::Objectness": [{"name": "cv.saliency_Objectness"}], "cv::saliency::StaticSaliencySpectralResidual": [{"name": "cv.saliency_StaticSaliencySpectralResidual"}], "cv::saliency::StaticSaliencyFineGrained": [{"name": "cv.saliency_StaticSaliencyFineGrained"}], "cv::saliency::MotionSaliencyBinWangApr2014": [{"name": "cv.saliency_MotionSaliencyBinWangApr2014"}], "cv::saliency::ObjectnessBING": [{"name": "cv.saliency_ObjectnessBING"}], "cv::text::ERFilter": [{"name": "cv.text_ERFilter"}], "cv::text::ERFilter::Callback": [{"name": "cv.text_ERFilter_Callback"}], "cv::text::ERFILTER_NM_RGBLGrad": [{"name": "cv.text.ERFILTER_NM_RGBLGrad", "value": "0"}], "cv::text::ERFILTER_NM_IHSGrad": [{"name": "cv.text.ERFILTER_NM_IHSGrad", "value": "1"}], "cv::text::ERGROUPING_ORIENTATION_HORIZ": [{"name": "cv.text.ERGROUPING_ORIENTATION_HORIZ", "value": "0"}], "cv::text::ERGROUPING_ORIENTATION_ANY": [{"name": "cv.text.ERGROUPING_ORIENTATION_ANY", "value": "1"}], "cv::text::OCR_LEVEL_WORD": [{"name": "cv.text.OCR_LEVEL_WORD", "value": "0"}], "cv::text::OCR_LEVEL_TEXTLINE": [{"name": "cv.text.OCR_LEVEL_TEXTLINE", "value": "1"}], "cv::text::PSM_OSD_ONLY": [{"name": "cv.text.PSM_OSD_ONLY", "value": "0"}], "cv::text::PSM_AUTO_OSD": [{"name": "cv.text.PSM_AUTO_OSD", "value": "1"}], "cv::text::PSM_AUTO_ONLY": [{"name": "cv.text.PSM_AUTO_ONLY", "value": "2"}], "cv::text::PSM_AUTO": [{"name": "cv.text.PSM_AUTO", "value": "3"}], "cv::text::PSM_SINGLE_COLUMN": [{"name": "cv.text.PSM_SINGLE_COLUMN", "value": "4"}], "cv::text::PSM_SINGLE_BLOCK_VERT_TEXT": [{"name": "cv.text.PSM_SINGLE_BLOCK_VERT_TEXT", "value": "5"}], "cv::text::PSM_SINGLE_BLOCK": [{"name": "cv.text.PSM_SINGLE_BLOCK", "value": "6"}], "cv::text::PSM_SINGLE_LINE": [{"name": "cv.text.PSM_SINGLE_LINE", "value": "7"}], "cv::text::PSM_SINGLE_WORD": [{"name": "cv.text.PSM_SINGLE_WORD", "value": "8"}], "cv::text::PSM_CIRCLE_WORD": [{"name": "cv.text.PSM_CIRCLE_WORD", "value": "9"}], "cv::text::PSM_SINGLE_CHAR": [{"name": "cv.text.PSM_SINGLE_CHAR", "value": "10"}], "cv::text::OEM_TESSERACT_ONLY": [{"name": "cv.text.OEM_TESSERACT_ONLY", "value": "0"}], "cv::text::OEM_CUBE_ONLY": [{"name": "cv.text.OEM_CUBE_ONLY", "value": "1"}], "cv::text::OEM_TESSERACT_CUBE_COMBINED": [{"name": "cv.text.OEM_TESSERACT_CUBE_COMBINED", "value": "2"}], "cv::text::OEM_DEFAULT": [{"name": "cv.text.OEM_DEFAULT", "value": "3"}], "cv::text::BaseOCR": [{"name": "cv.text_BaseOCR"}], "cv::text::OCRTesseract": [{"name": "cv.text_OCRTesseract"}], "cv::text::OCR_DECODER_VITERBI": [{"name": "cv.text.OCR_DECODER_VITERBI", "value": "0"}], "cv::text::OCR_KNN_CLASSIFIER": [{"name": "cv.text.OCR_KNN_CLASSIFIER", "value": "0"}], "cv::text::OCR_CNN_CLASSIFIER": [{"name": "cv.text.OCR_CNN_CLASSIFIER", "value": "1"}], "cv::text::OCRHMMDecoder": [{"name": "cv.text_OCRHMMDecoder"}], "cv::text::OCRHMMDecoder::ClassifierCallback": [{"name": "cv.text_OCRHMMDecoder_ClassifierCallback"}], "cv::text::OCRBeamSearchDecoder": [{"name": "cv.text_OCRBeamSearchDecoder"}], "cv::text::OCRBeamSearchDecoder::ClassifierCallback": [{"name": "cv.text_OCRBeamSearchDecoder_ClassifierCallback"}], "cv::text::TextDetector": [{"name": "cv.text_TextDetector"}], "cv::text::TextDetectorCNN": [{"name": "cv.text_TextDetectorCNN"}], "cv::CAP_ANY": [{"name": "cv.CAP_ANY", "value": "0"}], "cv::CAP_VFW": [{"name": "cv.CAP_VFW", "value": "200"}], "cv::CAP_V4L": [{"name": "cv.CAP_V4L", "value": "200"}], "cv::CAP_V4L2": [{"name": "cv.CAP_V4L2", "value": "CAP_V4L"}], "cv::CAP_FIREWIRE": [{"name": "cv.CAP_FIREWIRE", "value": "300"}], "cv::CAP_FIREWARE": [{"name": "cv.CAP_FIREWARE", "value": "CAP_FIREWIRE"}], "cv::CAP_IEEE1394": [{"name": "cv.CAP_IEEE1394", "value": "CAP_FIREWIRE"}], "cv::CAP_DC1394": [{"name": "cv.CAP_DC1394", "value": "CAP_FIREWIRE"}], "cv::CAP_CMU1394": [{"name": "cv.CAP_CMU1394", "value": "CAP_FIREWIRE"}], "cv::CAP_QT": [{"name": "cv.CAP_QT", "value": "500"}], "cv::CAP_UNICAP": [{"name": "cv.CAP_UNICAP", "value": "600"}], "cv::CAP_DSHOW": [{"name": "cv.CAP_DSHOW", "value": "700"}], "cv::CAP_PVAPI": [{"name": "cv.CAP_PVAPI", "value": "800"}], "cv::CAP_OPENNI": [{"name": "cv.CAP_OPENNI", "value": "900"}], "cv::CAP_OPENNI_ASUS": [{"name": "cv.CAP_OPENNI_ASUS", "value": "910"}], "cv::CAP_ANDROID": [{"name": "cv.CAP_ANDROID", "value": "1000"}], "cv::CAP_XIAPI": [{"name": "cv.CAP_XIAPI", "value": "1100"}], "cv::CAP_AVFOUNDATION": [{"name": "cv.CAP_AVFOUNDATION", "value": "1200"}], "cv::CAP_GIGANETIX": [{"name": "cv.CAP_GIGANETIX", "value": "1300"}], "cv::CAP_MSMF": [{"name": "cv.CAP_MSMF", "value": "1400"}], "cv::CAP_WINRT": [{"name": "cv.CAP_WINRT", "value": "1410"}], "cv::CAP_INTELPERC": [{"name": "cv.CAP_INTELPERC", "value": "1500"}], "cv::CAP_REALSENSE": [{"name": "cv.CAP_REALSENSE", "value": "1500"}], "cv::CAP_OPENNI2": [{"name": "cv.CAP_OPENNI2", "value": "1600"}], "cv::CAP_OPENNI2_ASUS": [{"name": "cv.CAP_OPENNI2_ASUS", "value": "1610"}], "cv::CAP_GPHOTO2": [{"name": "cv.CAP_GPHOTO2", "value": "1700"}], "cv::CAP_GSTREAMER": [{"name": "cv.CAP_GSTREAMER", "value": "1800"}], "cv::CAP_FFMPEG": [{"name": "cv.CAP_FFMPEG", "value": "1900"}], "cv::CAP_IMAGES": [{"name": "cv.CAP_IMAGES", "value": "2000"}], "cv::CAP_ARAVIS": [{"name": "cv.CAP_ARAVIS", "value": "2100"}], "cv::CAP_OPENCV_MJPEG": [{"name": "cv.CAP_OPENCV_MJPEG", "value": "2200"}], "cv::CAP_INTEL_MFX": [{"name": "cv.CAP_INTEL_MFX", "value": "2300"}], "cv::CAP_XINE": [{"name": "cv.CAP_XINE", "value": "2400"}], "cv::CAP_PROP_POS_MSEC": [{"name": "cv.CAP_PROP_POS_MSEC", "value": "0"}], "cv::CAP_PROP_POS_FRAMES": [{"name": "cv.CAP_PROP_POS_FRAMES", "value": "1"}], "cv::CAP_PROP_POS_AVI_RATIO": [{"name": "cv.CAP_PROP_POS_AVI_RATIO", "value": "2"}], "cv::CAP_PROP_FRAME_WIDTH": [{"name": "cv.CAP_PROP_FRAME_WIDTH", "value": "3"}], "cv::CAP_PROP_FRAME_HEIGHT": [{"name": "cv.CAP_PROP_FRAME_HEIGHT", "value": "4"}], "cv::CAP_PROP_FPS": [{"name": "cv.CAP_PROP_FPS", "value": "5"}], "cv::CAP_PROP_FOURCC": [{"name": "cv.CAP_PROP_FOURCC", "value": "6"}], "cv::CAP_PROP_FRAME_COUNT": [{"name": "cv.CAP_PROP_FRAME_COUNT", "value": "7"}], "cv::CAP_PROP_FORMAT": [{"name": "cv.CAP_PROP_FORMAT", "value": "8"}], "cv::CAP_PROP_MODE": [{"name": "cv.CAP_PROP_MODE", "value": "9"}], "cv::CAP_PROP_BRIGHTNESS": [{"name": "cv.CAP_PROP_BRIGHTNESS", "value": "10"}], "cv::CAP_PROP_CONTRAST": [{"name": "cv.CAP_PROP_CONTRAST", "value": "11"}], "cv::CAP_PROP_SATURATION": [{"name": "cv.CAP_PROP_SATURATION", "value": "12"}], "cv::CAP_PROP_HUE": [{"name": "cv.CAP_PROP_HUE", "value": "13"}], "cv::CAP_PROP_GAIN": [{"name": "cv.CAP_PROP_GAIN", "value": "14"}], "cv::CAP_PROP_EXPOSURE": [{"name": "cv.CAP_PROP_EXPOSURE", "value": "15"}], "cv::CAP_PROP_CONVERT_RGB": [{"name": "cv.CAP_PROP_CONVERT_RGB", "value": "16"}], "cv::CAP_PROP_WHITE_BALANCE_BLUE_U": [{"name": "cv.CAP_PROP_WHITE_BALANCE_BLUE_U", "value": "17"}], "cv::CAP_PROP_RECTIFICATION": [{"name": "cv.CAP_PROP_RECTIFICATION", "value": "18"}], "cv::CAP_PROP_MONOCHROME": [{"name": "cv.CAP_PROP_MONOCHROME", "value": "19"}], "cv::CAP_PROP_SHARPNESS": [{"name": "cv.CAP_PROP_SHARPNESS", "value": "20"}], "cv::CAP_PROP_AUTO_EXPOSURE": [{"name": "cv.CAP_PROP_AUTO_EXPOSURE", "value": "21"}], "cv::CAP_PROP_GAMMA": [{"name": "cv.CAP_PROP_GAMMA", "value": "22"}], "cv::CAP_PROP_TEMPERATURE": [{"name": "cv.CAP_PROP_TEMPERATURE", "value": "23"}], "cv::CAP_PROP_TRIGGER": [{"name": "cv.CAP_PROP_TRIGGER", "value": "24"}], "cv::CAP_PROP_TRIGGER_DELAY": [{"name": "cv.CAP_PROP_TRIGGER_DELAY", "value": "25"}], "cv::CAP_PROP_WHITE_BALANCE_RED_V": [{"name": "cv.CAP_PROP_WHITE_BALANCE_RED_V", "value": "26"}], "cv::CAP_PROP_ZOOM": [{"name": "cv.CAP_PROP_ZOOM", "value": "27"}], "cv::CAP_PROP_FOCUS": [{"name": "cv.CAP_PROP_FOCUS", "value": "28"}], "cv::CAP_PROP_GUID": [{"name": "cv.CAP_PROP_GUID", "value": "29"}], "cv::CAP_PROP_ISO_SPEED": [{"name": "cv.CAP_PROP_ISO_SPEED", "value": "30"}], "cv::CAP_PROP_BACKLIGHT": [{"name": "cv.CAP_PROP_BACKLIGHT", "value": "32"}], "cv::CAP_PROP_PAN": [{"name": "cv.CAP_PROP_PAN", "value": "33"}], "cv::CAP_PROP_TILT": [{"name": "cv.CAP_PROP_TILT", "value": "34"}], "cv::CAP_PROP_ROLL": [{"name": "cv.CAP_PROP_ROLL", "value": "35"}], "cv::CAP_PROP_IRIS": [{"name": "cv.CAP_PROP_IRIS", "value": "36"}], "cv::CAP_PROP_SETTINGS": [{"name": "cv.CAP_PROP_SETTINGS", "value": "37"}], "cv::CAP_PROP_BUFFERSIZE": [{"name": "cv.CAP_PROP_BUFFERSIZE", "value": "38"}], "cv::CAP_PROP_AUTOFOCUS": [{"name": "cv.CAP_PROP_AUTOFOCUS", "value": "39"}], "cv::CAP_PROP_SAR_NUM": [{"name": "cv.CAP_PROP_SAR_NUM", "value": "40"}], "cv::CAP_PROP_SAR_DEN": [{"name": "cv.CAP_PROP_SAR_DEN", "value": "41"}], "cv::CAP_PROP_BACKEND": [{"name": "cv.CAP_PROP_BACKEND", "value": "42"}], "cv::CAP_PROP_CHANNEL": [{"name": "cv.CAP_PROP_CHANNEL", "value": "43"}], "cv::CAP_PROP_AUTO_WB": [{"name": "cv.CAP_PROP_AUTO_WB", "value": "44"}], "cv::CAP_PROP_WB_TEMPERATURE": [{"name": "cv.CAP_PROP_WB_TEMPERATURE", "value": "45"}], "cv::CAP_PROP_CODEC_PIXEL_FORMAT": [{"name": "cv.CAP_PROP_CODEC_PIXEL_FORMAT", "value": "46"}], "cv::CAP_PROP_BITRATE": [{"name": "cv.CAP_PROP_BITRATE", "value": "47"}], "cv::CAP_PROP_ORIENTATION_META": [{"name": "cv.CAP_PROP_ORIENTATION_META", "value": "48"}], "cv::CAP_PROP_ORIENTATION_AUTO": [{"name": "cv.CAP_PROP_ORIENTATION_AUTO", "value": "49"}], "cv::VIDEOWRITER_PROP_QUALITY": [{"name": "cv.VIDEOWRITER_PROP_QUALITY", "value": "1"}], "cv::VIDEOWRITER_PROP_FRAMEBYTES": [{"name": "cv.VIDEOWRITER_PROP_FRAMEBYTES", "value": "2"}], "cv::VIDEOWRITER_PROP_NSTRIPES": [{"name": "cv.VIDEOWRITER_PROP_NSTRIPES", "value": "3"}], "cv::VIDEOWRITER_PROP_IS_COLOR": [{"name": "cv.VIDEOWRITER_PROP_IS_COLOR", "value": "4"}], "cv::CAP_PROP_DC1394_OFF": [{"name": "cv.CAP_PROP_DC1394_OFF", "value": "-4"}], "cv::CAP_PROP_DC1394_MODE_MANUAL": [{"name": "cv.CAP_PROP_DC1394_MODE_MANUAL", "value": "-3"}], "cv::CAP_PROP_DC1394_MODE_AUTO": [{"name": "cv.CAP_PROP_DC1394_MODE_AUTO", "value": "-2"}], "cv::CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO": [{"name": "cv.CAP_PROP_DC1394_MODE_ONE_PUSH_AUTO", "value": "-1"}], "cv::CAP_PROP_DC1394_MAX": [{"name": "cv.CAP_PROP_DC1394_MAX", "value": "31"}], "cv::CAP_OPENNI_DEPTH_GENERATOR": [{"name": "cv.CAP_OPENNI_DEPTH_GENERATOR", "value": "1 << 31"}], "cv::CAP_OPENNI_IMAGE_GENERATOR": [{"name": "cv.CAP_OPENNI_IMAGE_GENERATOR", "value": "1 << 30"}], "cv::CAP_OPENNI_IR_GENERATOR": [{"name": "cv.CAP_OPENNI_IR_GENERATOR", "value": "1 << 29"}], "cv::CAP_OPENNI_GENERATORS_MASK": [{"name": "cv.CAP_OPENNI_GENERATORS_MASK", "value": "CAP_OPENNI_DEPTH_GENERATOR + CAP_OPENNI_IMAGE_GENERATOR + CAP_OPENNI_IR_GENERATOR"}], "cv::CAP_PROP_OPENNI_OUTPUT_MODE": [{"name": "cv.CAP_PROP_OPENNI_OUTPUT_MODE", "value": "100"}], "cv::CAP_PROP_OPENNI_FRAME_MAX_DEPTH": [{"name": "cv.CAP_PROP_OPENNI_FRAME_MAX_DEPTH", "value": "101"}], "cv::CAP_PROP_OPENNI_BASELINE": [{"name": "cv.CAP_PROP_OPENNI_BASELINE", "value": "102"}], "cv::CAP_PROP_OPENNI_FOCAL_LENGTH": [{"name": "cv.CAP_PROP_OPENNI_FOCAL_LENGTH", "value": "103"}], "cv::CAP_PROP_OPENNI_REGISTRATION": [{"name": "cv.CAP_PROP_OPENNI_REGISTRATION", "value": "104"}], "cv::CAP_PROP_OPENNI_REGISTRATION_ON": [{"name": "cv.CAP_PROP_OPENNI_REGISTRATION_ON", "value": "CAP_PROP_OPENNI_REGISTRATION"}], "cv::CAP_PROP_OPENNI_APPROX_FRAME_SYNC": [{"name": "cv.CAP_PROP_OPENNI_APPROX_FRAME_SYNC", "value": "105"}], "cv::CAP_PROP_OPENNI_MAX_BUFFER_SIZE": [{"name": "cv.CAP_PROP_OPENNI_MAX_BUFFER_SIZE", "value": "106"}], "cv::CAP_PROP_OPENNI_CIRCLE_BUFFER": [{"name": "cv.CAP_PROP_OPENNI_CIRCLE_BUFFER", "value": "107"}], "cv::CAP_PROP_OPENNI_MAX_TIME_DURATION": [{"name": "cv.CAP_PROP_OPENNI_MAX_TIME_DURATION", "value": "108"}], "cv::CAP_PROP_OPENNI_GENERATOR_PRESENT": [{"name": "cv.CAP_PROP_OPENNI_GENERATOR_PRESENT", "value": "109"}], "cv::CAP_PROP_OPENNI2_SYNC": [{"name": "cv.CAP_PROP_OPENNI2_SYNC", "value": "110"}], "cv::CAP_PROP_OPENNI2_MIRROR": [{"name": "cv.CAP_PROP_OPENNI2_MIRROR", "value": "111"}], "cv::CAP_OPENNI_IMAGE_GENERATOR_PRESENT": [{"name": "cv.CAP_OPENNI_IMAGE_GENERATOR_PRESENT", "value": "CAP_OPENNI_IMAGE_GENERATOR + CAP_PROP_OPENNI_GENERATOR_PRESENT"}], "cv::CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE": [{"name": "cv.CAP_OPENNI_IMAGE_GENERATOR_OUTPUT_MODE", "value": "CAP_OPENNI_IMAGE_GENERATOR + CAP_PROP_OPENNI_OUTPUT_MODE"}], "cv::CAP_OPENNI_DEPTH_GENERATOR_PRESENT": [{"name": "cv.CAP_OPENNI_DEPTH_GENERATOR_PRESENT", "value": "CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_GENERATOR_PRESENT"}], "cv::CAP_OPENNI_DEPTH_GENERATOR_BASELINE": [{"name": "cv.CAP_OPENNI_DEPTH_GENERATOR_BASELINE", "value": "CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_BASELINE"}], "cv::CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH": [{"name": "cv.CAP_OPENNI_DEPTH_GENERATOR_FOCAL_LENGTH", "value": "CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_FOCAL_LENGTH"}], "cv::CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION": [{"name": "cv.CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION", "value": "CAP_OPENNI_DEPTH_GENERATOR + CAP_PROP_OPENNI_REGISTRATION"}], "cv::CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON": [{"name": "cv.CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION_ON", "value": "CAP_OPENNI_DEPTH_GENERATOR_REGISTRATION"}], "cv::CAP_OPENNI_IR_GENERATOR_PRESENT": [{"name": "cv.CAP_OPENNI_IR_GENERATOR_PRESENT", "value": "CAP_OPENNI_IR_GENERATOR + CAP_PROP_OPENNI_GENERATOR_PRESENT"}], "cv::CAP_OPENNI_DEPTH_MAP": [{"name": "cv.CAP_OPENNI_DEPTH_MAP", "value": "0"}], "cv::CAP_OPENNI_POINT_CLOUD_MAP": [{"name": "cv.CAP_OPENNI_POINT_CLOUD_MAP", "value": "1"}], "cv::CAP_OPENNI_DISPARITY_MAP": [{"name": "cv.CAP_OPENNI_DISPARITY_MAP", "value": "2"}], "cv::CAP_OPENNI_DISPARITY_MAP_32F": [{"name": "cv.CAP_OPENNI_DISPARITY_MAP_32F", "value": "3"}], "cv::CAP_OPENNI_VALID_DEPTH_MASK": [{"name": "cv.CAP_OPENNI_VALID_DEPTH_MASK", "value": "4"}], "cv::CAP_OPENNI_BGR_IMAGE": [{"name": "cv.CAP_OPENNI_BGR_IMAGE", "value": "5"}], "cv::CAP_OPENNI_GRAY_IMAGE": [{"name": "cv.CAP_OPENNI_GRAY_IMAGE", "value": "6"}], "cv::CAP_OPENNI_IR_IMAGE": [{"name": "cv.CAP_OPENNI_IR_IMAGE", "value": "7"}], "cv::CAP_OPENNI_VGA_30HZ": [{"name": "cv.CAP_OPENNI_VGA_30HZ", "value": "0"}], "cv::CAP_OPENNI_SXGA_15HZ": [{"name": "cv.CAP_OPENNI_SXGA_15HZ", "value": "1"}], "cv::CAP_OPENNI_SXGA_30HZ": [{"name": "cv.CAP_OPENNI_SXGA_30HZ", "value": "2"}], "cv::CAP_OPENNI_QVGA_30HZ": [{"name": "cv.CAP_OPENNI_QVGA_30HZ", "value": "3"}], "cv::CAP_OPENNI_QVGA_60HZ": [{"name": "cv.CAP_OPENNI_QVGA_60HZ", "value": "4"}], "cv::CAP_PROP_GSTREAMER_QUEUE_LENGTH": [{"name": "cv.CAP_PROP_GSTREAMER_QUEUE_LENGTH", "value": "200"}], "cv::CAP_PROP_PVAPI_MULTICASTIP": [{"name": "cv.CAP_PROP_PVAPI_MULTICASTIP", "value": "300"}], "cv::CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE": [{"name": "cv.CAP_PROP_PVAPI_FRAMESTARTTRIGGERMODE", "value": "301"}], "cv::CAP_PROP_PVAPI_DECIMATIONHORIZONTAL": [{"name": "cv.CAP_PROP_PVAPI_DECIMATIONHORIZONTAL", "value": "302"}], "cv::CAP_PROP_PVAPI_DECIMATIONVERTICAL": [{"name": "cv.CAP_PROP_PVAPI_DECIMATIONVERTICAL", "value": "303"}], "cv::CAP_PROP_PVAPI_BINNINGX": [{"name": "cv.CAP_PROP_PVAPI_BINNINGX", "value": "304"}], "cv::CAP_PROP_PVAPI_BINNINGY": [{"name": "cv.CAP_PROP_PVAPI_BINNINGY", "value": "305"}], "cv::CAP_PROP_PVAPI_PIXELFORMAT": [{"name": "cv.CAP_PROP_PVAPI_PIXELFORMAT", "value": "306"}], "cv::CAP_PVAPI_FSTRIGMODE_FREERUN": [{"name": "cv.CAP_PVAPI_FSTRIGMODE_FREERUN", "value": "0"}], "cv::CAP_PVAPI_FSTRIGMODE_SYNCIN1": [{"name": "cv.CAP_PVAPI_FSTRIGMODE_SYNCIN1", "value": "1"}], "cv::CAP_PVAPI_FSTRIGMODE_SYNCIN2": [{"name": "cv.CAP_PVAPI_FSTRIGMODE_SYNCIN2", "value": "2"}], "cv::CAP_PVAPI_FSTRIGMODE_FIXEDRATE": [{"name": "cv.CAP_PVAPI_FSTRIGMODE_FIXEDRATE", "value": "3"}], "cv::CAP_PVAPI_FSTRIGMODE_SOFTWARE": [{"name": "cv.CAP_PVAPI_FSTRIGMODE_SOFTWARE", "value": "4"}], "cv::CAP_PVAPI_DECIMATION_OFF": [{"name": "cv.CAP_PVAPI_DECIMATION_OFF", "value": "1"}], "cv::CAP_PVAPI_DECIMATION_2OUTOF4": [{"name": "cv.CAP_PVAPI_DECIMATION_2OUTOF4", "value": "2"}], "cv::CAP_PVAPI_DECIMATION_2OUTOF8": [{"name": "cv.CAP_PVAPI_DECIMATION_2OUTOF8", "value": "4"}], "cv::CAP_PVAPI_DECIMATION_2OUTOF16": [{"name": "cv.CAP_PVAPI_DECIMATION_2OUTOF16", "value": "8"}], "cv::CAP_PVAPI_PIXELFORMAT_MONO8": [{"name": "cv.CAP_PVAPI_PIXELFORMAT_MONO8", "value": "1"}], "cv::CAP_PVAPI_PIXELFORMAT_MONO16": [{"name": "cv.CAP_PVAPI_PIXELFORMAT_MONO16", "value": "2"}], "cv::CAP_PVAPI_PIXELFORMAT_BAYER8": [{"name": "cv.CAP_PVAPI_PIXELFORMAT_BAYER8", "value": "3"}], "cv::CAP_PVAPI_PIXELFORMAT_BAYER16": [{"name": "cv.CAP_PVAPI_PIXELFORMAT_BAYER16", "value": "4"}], "cv::CAP_PVAPI_PIXELFORMAT_RGB24": [{"name": "cv.CAP_PVAPI_PIXELFORMAT_RGB24", "value": "5"}], "cv::CAP_PVAPI_PIXELFORMAT_BGR24": [{"name": "cv.CAP_PVAPI_PIXELFORMAT_BGR24", "value": "6"}], "cv::CAP_PVAPI_PIXELFORMAT_RGBA32": [{"name": "cv.CAP_PVAPI_PIXELFORMAT_RGBA32", "value": "7"}], "cv::CAP_PVAPI_PIXELFORMAT_BGRA32": [{"name": "cv.CAP_PVAPI_PIXELFORMAT_BGRA32", "value": "8"}], "cv::CAP_PROP_XI_DOWNSAMPLING": [{"name": "cv.CAP_PROP_XI_DOWNSAMPLING", "value": "400"}], "cv::CAP_PROP_XI_DATA_FORMAT": [{"name": "cv.CAP_PROP_XI_DATA_FORMAT", "value": "401"}], "cv::CAP_PROP_XI_OFFSET_X": [{"name": "cv.CAP_PROP_XI_OFFSET_X", "value": "402"}], "cv::CAP_PROP_XI_OFFSET_Y": [{"name": "cv.CAP_PROP_XI_OFFSET_Y", "value": "403"}], "cv::CAP_PROP_XI_TRG_SOURCE": [{"name": "cv.CAP_PROP_XI_TRG_SOURCE", "value": "404"}], "cv::CAP_PROP_XI_TRG_SOFTWARE": [{"name": "cv.CAP_PROP_XI_TRG_SOFTWARE", "value": "405"}], "cv::CAP_PROP_XI_GPI_SELECTOR": [{"name": "cv.CAP_PROP_XI_GPI_SELECTOR", "value": "406"}], "cv::CAP_PROP_XI_GPI_MODE": [{"name": "cv.CAP_PROP_XI_GPI_MODE", "value": "407"}], "cv::CAP_PROP_XI_GPI_LEVEL": [{"name": "cv.CAP_PROP_XI_GPI_LEVEL", "value": "408"}], "cv::CAP_PROP_XI_GPO_SELECTOR": [{"name": "cv.CAP_PROP_XI_GPO_SELECTOR", "value": "409"}], "cv::CAP_PROP_XI_GPO_MODE": [{"name": "cv.CAP_PROP_XI_GPO_MODE", "value": "410"}], "cv::CAP_PROP_XI_LED_SELECTOR": [{"name": "cv.CAP_PROP_XI_LED_SELECTOR", "value": "411"}], "cv::CAP_PROP_XI_LED_MODE": [{"name": "cv.CAP_PROP_XI_LED_MODE", "value": "412"}], "cv::CAP_PROP_XI_MANUAL_WB": [{"name": "cv.CAP_PROP_XI_MANUAL_WB", "value": "413"}], "cv::CAP_PROP_XI_AUTO_WB": [{"name": "cv.CAP_PROP_XI_AUTO_WB", "value": "414"}], "cv::CAP_PROP_XI_AEAG": [{"name": "cv.CAP_PROP_XI_AEAG", "value": "415"}], "cv::CAP_PROP_XI_EXP_PRIORITY": [{"name": "cv.CAP_PROP_XI_EXP_PRIORITY", "value": "416"}], "cv::CAP_PROP_XI_AE_MAX_LIMIT": [{"name": "cv.CAP_PROP_XI_AE_MAX_LIMIT", "value": "417"}], "cv::CAP_PROP_XI_AG_MAX_LIMIT": [{"name": "cv.CAP_PROP_XI_AG_MAX_LIMIT", "value": "418"}], "cv::CAP_PROP_XI_AEAG_LEVEL": [{"name": "cv.CAP_PROP_XI_AEAG_LEVEL", "value": "419"}], "cv::CAP_PROP_XI_TIMEOUT": [{"name": "cv.CAP_PROP_XI_TIMEOUT", "value": "420"}], "cv::CAP_PROP_XI_EXPOSURE": [{"name": "cv.CAP_PROP_XI_EXPOSURE", "value": "421"}], "cv::CAP_PROP_XI_EXPOSURE_BURST_COUNT": [{"name": "cv.CAP_PROP_XI_EXPOSURE_BURST_COUNT", "value": "422"}], "cv::CAP_PROP_XI_GAIN_SELECTOR": [{"name": "cv.CAP_PROP_XI_GAIN_SELECTOR", "value": "423"}], "cv::CAP_PROP_XI_GAIN": [{"name": "cv.CAP_PROP_XI_GAIN", "value": "424"}], "cv::CAP_PROP_XI_DOWNSAMPLING_TYPE": [{"name": "cv.CAP_PROP_XI_DOWNSAMPLING_TYPE", "value": "426"}], "cv::CAP_PROP_XI_BINNING_SELECTOR": [{"name": "cv.CAP_PROP_XI_BINNING_SELECTOR", "value": "427"}], "cv::CAP_PROP_XI_BINNING_VERTICAL": [{"name": "cv.CAP_PROP_XI_BINNING_VERTICAL", "value": "428"}], "cv::CAP_PROP_XI_BINNING_HORIZONTAL": [{"name": "cv.CAP_PROP_XI_BINNING_HORIZONTAL", "value": "429"}], "cv::CAP_PROP_XI_BINNING_PATTERN": [{"name": "cv.CAP_PROP_XI_BINNING_PATTERN", "value": "430"}], "cv::CAP_PROP_XI_DECIMATION_SELECTOR": [{"name": "cv.CAP_PROP_XI_DECIMATION_SELECTOR", "value": "431"}], "cv::CAP_PROP_XI_DECIMATION_VERTICAL": [{"name": "cv.CAP_PROP_XI_DECIMATION_VERTICAL", "value": "432"}], "cv::CAP_PROP_XI_DECIMATION_HORIZONTAL": [{"name": "cv.CAP_PROP_XI_DECIMATION_HORIZONTAL", "value": "433"}], "cv::CAP_PROP_XI_DECIMATION_PATTERN": [{"name": "cv.CAP_PROP_XI_DECIMATION_PATTERN", "value": "434"}], "cv::CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR": [{"name": "cv.CAP_PROP_XI_TEST_PATTERN_GENERATOR_SELECTOR", "value": "587"}], "cv::CAP_PROP_XI_TEST_PATTERN": [{"name": "cv.CAP_PROP_XI_TEST_PATTERN", "value": "588"}], "cv::CAP_PROP_XI_IMAGE_DATA_FORMAT": [{"name": "cv.CAP_PROP_XI_IMAGE_DATA_FORMAT", "value": "435"}], "cv::CAP_PROP_XI_SHUTTER_TYPE": [{"name": "cv.CAP_PROP_XI_SHUTTER_TYPE", "value": "436"}], "cv::CAP_PROP_XI_SENSOR_TAPS": [{"name": "cv.CAP_PROP_XI_SENSOR_TAPS", "value": "437"}], "cv::CAP_PROP_XI_AEAG_ROI_OFFSET_X": [{"name": "cv.CAP_PROP_XI_AEAG_ROI_OFFSET_X", "value": "439"}], "cv::CAP_PROP_XI_AEAG_ROI_OFFSET_Y": [{"name": "cv.CAP_PROP_XI_AEAG_ROI_OFFSET_Y", "value": "440"}], "cv::CAP_PROP_XI_AEAG_ROI_WIDTH": [{"name": "cv.CAP_PROP_XI_AEAG_ROI_WIDTH", "value": "441"}], "cv::CAP_PROP_XI_AEAG_ROI_HEIGHT": [{"name": "cv.CAP_PROP_XI_AEAG_ROI_HEIGHT", "value": "442"}], "cv::CAP_PROP_XI_BPC": [{"name": "cv.CAP_PROP_XI_BPC", "value": "445"}], "cv::CAP_PROP_XI_WB_KR": [{"name": "cv.CAP_PROP_XI_WB_KR", "value": "448"}], "cv::CAP_PROP_XI_WB_KG": [{"name": "cv.CAP_PROP_XI_WB_KG", "value": "449"}], "cv::CAP_PROP_XI_WB_KB": [{"name": "cv.CAP_PROP_XI_WB_KB", "value": "450"}], "cv::CAP_PROP_XI_WIDTH": [{"name": "cv.CAP_PROP_XI_WIDTH", "value": "451"}], "cv::CAP_PROP_XI_HEIGHT": [{"name": "cv.CAP_PROP_XI_HEIGHT", "value": "452"}], "cv::CAP_PROP_XI_REGION_SELECTOR": [{"name": "cv.CAP_PROP_XI_REGION_SELECTOR", "value": "589"}], "cv::CAP_PROP_XI_REGION_MODE": [{"name": "cv.CAP_PROP_XI_REGION_MODE", "value": "595"}], "cv::CAP_PROP_XI_LIMIT_BANDWIDTH": [{"name": "cv.CAP_PROP_XI_LIMIT_BANDWIDTH", "value": "459"}], "cv::CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH": [{"name": "cv.CAP_PROP_XI_SENSOR_DATA_BIT_DEPTH", "value": "460"}], "cv::CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH": [{"name": "cv.CAP_PROP_XI_OUTPUT_DATA_BIT_DEPTH", "value": "461"}], "cv::CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH": [{"name": "cv.CAP_PROP_XI_IMAGE_DATA_BIT_DEPTH", "value": "462"}], "cv::CAP_PROP_XI_OUTPUT_DATA_PACKING": [{"name": "cv.CAP_PROP_XI_OUTPUT_DATA_PACKING", "value": "463"}], "cv::CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE": [{"name": "cv.CAP_PROP_XI_OUTPUT_DATA_PACKING_TYPE", "value": "464"}], "cv::CAP_PROP_XI_IS_COOLED": [{"name": "cv.CAP_PROP_XI_IS_COOLED", "value": "465"}], "cv::CAP_PROP_XI_COOLING": [{"name": "cv.CAP_PROP_XI_COOLING", "value": "466"}], "cv::CAP_PROP_XI_TARGET_TEMP": [{"name": "cv.CAP_PROP_XI_TARGET_TEMP", "value": "467"}], "cv::CAP_PROP_XI_CHIP_TEMP": [{"name": "cv.CAP_PROP_XI_CHIP_TEMP", "value": "468"}], "cv::CAP_PROP_XI_HOUS_TEMP": [{"name": "cv.CAP_PROP_XI_HOUS_TEMP", "value": "469"}], "cv::CAP_PROP_XI_HOUS_BACK_SIDE_TEMP": [{"name": "cv.CAP_PROP_XI_HOUS_BACK_SIDE_TEMP", "value": "590"}], "cv::CAP_PROP_XI_SENSOR_BOARD_TEMP": [{"name": "cv.CAP_PROP_XI_SENSOR_BOARD_TEMP", "value": "596"}], "cv::CAP_PROP_XI_CMS": [{"name": "cv.CAP_PROP_XI_CMS", "value": "470"}], "cv::CAP_PROP_XI_APPLY_CMS": [{"name": "cv.CAP_PROP_XI_APPLY_CMS", "value": "471"}], "cv::CAP_PROP_XI_IMAGE_IS_COLOR": [{"name": "cv.CAP_PROP_XI_IMAGE_IS_COLOR", "value": "474"}], "cv::CAP_PROP_XI_COLOR_FILTER_ARRAY": [{"name": "cv.CAP_PROP_XI_COLOR_FILTER_ARRAY", "value": "475"}], "cv::CAP_PROP_XI_GAMMAY": [{"name": "cv.CAP_PROP_XI_GAMMAY", "value": "476"}], "cv::CAP_PROP_XI_GAMMAC": [{"name": "cv.CAP_PROP_XI_GAMMAC", "value": "477"}], "cv::CAP_PROP_XI_SHARPNESS": [{"name": "cv.CAP_PROP_XI_SHARPNESS", "value": "478"}], "cv::CAP_PROP_XI_CC_MATRIX_00": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_00", "value": "479"}], "cv::CAP_PROP_XI_CC_MATRIX_01": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_01", "value": "480"}], "cv::CAP_PROP_XI_CC_MATRIX_02": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_02", "value": "481"}], "cv::CAP_PROP_XI_CC_MATRIX_03": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_03", "value": "482"}], "cv::CAP_PROP_XI_CC_MATRIX_10": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_10", "value": "483"}], "cv::CAP_PROP_XI_CC_MATRIX_11": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_11", "value": "484"}], "cv::CAP_PROP_XI_CC_MATRIX_12": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_12", "value": "485"}], "cv::CAP_PROP_XI_CC_MATRIX_13": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_13", "value": "486"}], "cv::CAP_PROP_XI_CC_MATRIX_20": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_20", "value": "487"}], "cv::CAP_PROP_XI_CC_MATRIX_21": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_21", "value": "488"}], "cv::CAP_PROP_XI_CC_MATRIX_22": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_22", "value": "489"}], "cv::CAP_PROP_XI_CC_MATRIX_23": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_23", "value": "490"}], "cv::CAP_PROP_XI_CC_MATRIX_30": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_30", "value": "491"}], "cv::CAP_PROP_XI_CC_MATRIX_31": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_31", "value": "492"}], "cv::CAP_PROP_XI_CC_MATRIX_32": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_32", "value": "493"}], "cv::CAP_PROP_XI_CC_MATRIX_33": [{"name": "cv.CAP_PROP_XI_CC_MATRIX_33", "value": "494"}], "cv::CAP_PROP_XI_DEFAULT_CC_MATRIX": [{"name": "cv.CAP_PROP_XI_DEFAULT_CC_MATRIX", "value": "495"}], "cv::CAP_PROP_XI_TRG_SELECTOR": [{"name": "cv.CAP_PROP_XI_TRG_SELECTOR", "value": "498"}], "cv::CAP_PROP_XI_ACQ_FRAME_BURST_COUNT": [{"name": "cv.CAP_PROP_XI_ACQ_FRAME_BURST_COUNT", "value": "499"}], "cv::CAP_PROP_XI_DEBOUNCE_EN": [{"name": "cv.CAP_PROP_XI_DEBOUNCE_EN", "value": "507"}], "cv::CAP_PROP_XI_DEBOUNCE_T0": [{"name": "cv.CAP_PROP_XI_DEBOUNCE_T0", "value": "508"}], "cv::CAP_PROP_XI_DEBOUNCE_T1": [{"name": "cv.CAP_PROP_XI_DEBOUNCE_T1", "value": "509"}], "cv::CAP_PROP_XI_DEBOUNCE_POL": [{"name": "cv.CAP_PROP_XI_DEBOUNCE_POL", "value": "510"}], "cv::CAP_PROP_XI_LENS_MODE": [{"name": "cv.CAP_PROP_XI_LENS_MODE", "value": "511"}], "cv::CAP_PROP_XI_LENS_APERTURE_VALUE": [{"name": "cv.CAP_PROP_XI_LENS_APERTURE_VALUE", "value": "512"}], "cv::CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE": [{"name": "cv.CAP_PROP_XI_LENS_FOCUS_MOVEMENT_VALUE", "value": "513"}], "cv::CAP_PROP_XI_LENS_FOCUS_MOVE": [{"name": "cv.CAP_PROP_XI_LENS_FOCUS_MOVE", "value": "514"}], "cv::CAP_PROP_XI_LENS_FOCUS_DISTANCE": [{"name": "cv.CAP_PROP_XI_LENS_FOCUS_DISTANCE", "value": "515"}], "cv::CAP_PROP_XI_LENS_FOCAL_LENGTH": [{"name": "cv.CAP_PROP_XI_LENS_FOCAL_LENGTH", "value": "516"}], "cv::CAP_PROP_XI_LENS_FEATURE_SELECTOR": [{"name": "cv.CAP_PROP_XI_LENS_FEATURE_SELECTOR", "value": "517"}], "cv::CAP_PROP_XI_LENS_FEATURE": [{"name": "cv.CAP_PROP_XI_LENS_FEATURE", "value": "518"}], "cv::CAP_PROP_XI_DEVICE_MODEL_ID": [{"name": "cv.CAP_PROP_XI_DEVICE_MODEL_ID", "value": "521"}], "cv::CAP_PROP_XI_DEVICE_SN": [{"name": "cv.CAP_PROP_XI_DEVICE_SN", "value": "522"}], "cv::CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA": [{"name": "cv.CAP_PROP_XI_IMAGE_DATA_FORMAT_RGB32_ALPHA", "value": "529"}], "cv::CAP_PROP_XI_IMAGE_PAYLOAD_SIZE": [{"name": "cv.CAP_PROP_XI_IMAGE_PAYLOAD_SIZE", "value": "530"}], "cv::CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT": [{"name": "cv.CAP_PROP_XI_TRANSPORT_PIXEL_FORMAT", "value": "531"}], "cv::CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ": [{"name": "cv.CAP_PROP_XI_SENSOR_CLOCK_FREQ_HZ", "value": "532"}], "cv::CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX": [{"name": "cv.CAP_PROP_XI_SENSOR_CLOCK_FREQ_INDEX", "value": "533"}], "cv::CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT": [{"name": "cv.CAP_PROP_XI_SENSOR_OUTPUT_CHANNEL_COUNT", "value": "534"}], "cv::CAP_PROP_XI_FRAMERATE": [{"name": "cv.CAP_PROP_XI_FRAMERATE", "value": "535"}], "cv::CAP_PROP_XI_COUNTER_SELECTOR": [{"name": "cv.CAP_PROP_XI_COUNTER_SELECTOR", "value": "536"}], "cv::CAP_PROP_XI_COUNTER_VALUE": [{"name": "cv.CAP_PROP_XI_COUNTER_VALUE", "value": "537"}], "cv::CAP_PROP_XI_ACQ_TIMING_MODE": [{"name": "cv.CAP_PROP_XI_ACQ_TIMING_MODE", "value": "538"}], "cv::CAP_PROP_XI_AVAILABLE_BANDWIDTH": [{"name": "cv.CAP_PROP_XI_AVAILABLE_BANDWIDTH", "value": "539"}], "cv::CAP_PROP_XI_BUFFER_POLICY": [{"name": "cv.CAP_PROP_XI_BUFFER_POLICY", "value": "540"}], "cv::CAP_PROP_XI_LUT_EN": [{"name": "cv.CAP_PROP_XI_LUT_EN", "value": "541"}], "cv::CAP_PROP_XI_LUT_INDEX": [{"name": "cv.CAP_PROP_XI_LUT_INDEX", "value": "542"}], "cv::CAP_PROP_XI_LUT_VALUE": [{"name": "cv.CAP_PROP_XI_LUT_VALUE", "value": "543"}], "cv::CAP_PROP_XI_TRG_DELAY": [{"name": "cv.CAP_PROP_XI_TRG_DELAY", "value": "544"}], "cv::CAP_PROP_XI_TS_RST_MODE": [{"name": "cv.CAP_PROP_XI_TS_RST_MODE", "value": "545"}], "cv::CAP_PROP_XI_TS_RST_SOURCE": [{"name": "cv.CAP_PROP_XI_TS_RST_SOURCE", "value": "546"}], "cv::CAP_PROP_XI_IS_DEVICE_EXIST": [{"name": "cv.CAP_PROP_XI_IS_DEVICE_EXIST", "value": "547"}], "cv::CAP_PROP_XI_ACQ_BUFFER_SIZE": [{"name": "cv.CAP_PROP_XI_ACQ_BUFFER_SIZE", "value": "548"}], "cv::CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT": [{"name": "cv.CAP_PROP_XI_ACQ_BUFFER_SIZE_UNIT", "value": "549"}], "cv::CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE": [{"name": "cv.CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_SIZE", "value": "550"}], "cv::CAP_PROP_XI_BUFFERS_QUEUE_SIZE": [{"name": "cv.CAP_PROP_XI_BUFFERS_QUEUE_SIZE", "value": "551"}], "cv::CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT": [{"name": "cv.CAP_PROP_XI_ACQ_TRANSPORT_BUFFER_COMMIT", "value": "552"}], "cv::CAP_PROP_XI_RECENT_FRAME": [{"name": "cv.CAP_PROP_XI_RECENT_FRAME", "value": "553"}], "cv::CAP_PROP_XI_DEVICE_RESET": [{"name": "cv.CAP_PROP_XI_DEVICE_RESET", "value": "554"}], "cv::CAP_PROP_XI_COLUMN_FPN_CORRECTION": [{"name": "cv.CAP_PROP_XI_COLUMN_FPN_CORRECTION", "value": "555"}], "cv::CAP_PROP_XI_ROW_FPN_CORRECTION": [{"name": "cv.CAP_PROP_XI_ROW_FPN_CORRECTION", "value": "591"}], "cv::CAP_PROP_XI_SENSOR_MODE": [{"name": "cv.CAP_PROP_XI_SENSOR_MODE", "value": "558"}], "cv::CAP_PROP_XI_HDR": [{"name": "cv.CAP_PROP_XI_HDR", "value": "559"}], "cv::CAP_PROP_XI_HDR_KNEEPOINT_COUNT": [{"name": "cv.CAP_PROP_XI_HDR_KNEEPOINT_COUNT", "value": "560"}], "cv::CAP_PROP_XI_HDR_T1": [{"name": "cv.CAP_PROP_XI_HDR_T1", "value": "561"}], "cv::CAP_PROP_XI_HDR_T2": [{"name": "cv.CAP_PROP_XI_HDR_T2", "value": "562"}], "cv::CAP_PROP_XI_KNEEPOINT1": [{"name": "cv.CAP_PROP_XI_KNEEPOINT1", "value": "563"}], "cv::CAP_PROP_XI_KNEEPOINT2": [{"name": "cv.CAP_PROP_XI_KNEEPOINT2", "value": "564"}], "cv::CAP_PROP_XI_IMAGE_BLACK_LEVEL": [{"name": "cv.CAP_PROP_XI_IMAGE_BLACK_LEVEL", "value": "565"}], "cv::CAP_PROP_XI_HW_REVISION": [{"name": "cv.CAP_PROP_XI_HW_REVISION", "value": "571"}], "cv::CAP_PROP_XI_DEBUG_LEVEL": [{"name": "cv.CAP_PROP_XI_DEBUG_LEVEL", "value": "572"}], "cv::CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION": [{"name": "cv.CAP_PROP_XI_AUTO_BANDWIDTH_CALCULATION", "value": "573"}], "cv::CAP_PROP_XI_FFS_FILE_ID": [{"name": "cv.CAP_PROP_XI_FFS_FILE_ID", "value": "594"}], "cv::CAP_PROP_XI_FFS_FILE_SIZE": [{"name": "cv.CAP_PROP_XI_FFS_FILE_SIZE", "value": "580"}], "cv::CAP_PROP_XI_FREE_FFS_SIZE": [{"name": "cv.CAP_PROP_XI_FREE_FFS_SIZE", "value": "581"}], "cv::CAP_PROP_XI_USED_FFS_SIZE": [{"name": "cv.CAP_PROP_XI_USED_FFS_SIZE", "value": "582"}], "cv::CAP_PROP_XI_FFS_ACCESS_KEY": [{"name": "cv.CAP_PROP_XI_FFS_ACCESS_KEY", "value": "583"}], "cv::CAP_PROP_XI_SENSOR_FEATURE_SELECTOR": [{"name": "cv.CAP_PROP_XI_SENSOR_FEATURE_SELECTOR", "value": "585"}], "cv::CAP_PROP_XI_SENSOR_FEATURE_VALUE": [{"name": "cv.CAP_PROP_XI_SENSOR_FEATURE_VALUE", "value": "586"}], "cv::CAP_PROP_ARAVIS_AUTOTRIGGER": [{"name": "cv.CAP_PROP_ARAVIS_AUTOTRIGGER", "value": "600"}], "cv::CAP_PROP_IOS_DEVICE_FOCUS": [{"name": "cv.CAP_PROP_IOS_DEVICE_FOCUS", "value": "9001"}], "cv::CAP_PROP_IOS_DEVICE_EXPOSURE": [{"name": "cv.CAP_PROP_IOS_DEVICE_EXPOSURE", "value": "9002"}], "cv::CAP_PROP_IOS_DEVICE_FLASH": [{"name": "cv.CAP_PROP_IOS_DEVICE_FLASH", "value": "9003"}], "cv::CAP_PROP_IOS_DEVICE_WHITEBALANCE": [{"name": "cv.CAP_PROP_IOS_DEVICE_WHITEBALANCE", "value": "9004"}], "cv::CAP_PROP_IOS_DEVICE_TORCH": [{"name": "cv.CAP_PROP_IOS_DEVICE_TORCH", "value": "9005"}], "cv::CAP_PROP_GIGA_FRAME_OFFSET_X": [{"name": "cv.CAP_PROP_GIGA_FRAME_OFFSET_X", "value": "10001"}], "cv::CAP_PROP_GIGA_FRAME_OFFSET_Y": [{"name": "cv.CAP_PROP_GIGA_FRAME_OFFSET_Y", "value": "10002"}], "cv::CAP_PROP_GIGA_FRAME_WIDTH_MAX": [{"name": "cv.CAP_PROP_GIGA_FRAME_WIDTH_MAX", "value": "10003"}], "cv::CAP_PROP_GIGA_FRAME_HEIGH_MAX": [{"name": "cv.CAP_PROP_GIGA_FRAME_HEIGH_MAX", "value": "10004"}], "cv::CAP_PROP_GIGA_FRAME_SENS_WIDTH": [{"name": "cv.CAP_PROP_GIGA_FRAME_SENS_WIDTH", "value": "10005"}], "cv::CAP_PROP_GIGA_FRAME_SENS_HEIGH": [{"name": "cv.CAP_PROP_GIGA_FRAME_SENS_HEIGH", "value": "10006"}], "cv::CAP_PROP_INTELPERC_PROFILE_COUNT": [{"name": "cv.CAP_PROP_INTELPERC_PROFILE_COUNT", "value": "11001"}], "cv::CAP_PROP_INTELPERC_PROFILE_IDX": [{"name": "cv.CAP_PROP_INTELPERC_PROFILE_IDX", "value": "11002"}], "cv::CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE": [{"name": "cv.CAP_PROP_INTELPERC_DEPTH_LOW_CONFIDENCE_VALUE", "value": "11003"}], "cv::CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE": [{"name": "cv.CAP_PROP_INTELPERC_DEPTH_SATURATION_VALUE", "value": "11004"}], "cv::CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD": [{"name": "cv.CAP_PROP_INTELPERC_DEPTH_CONFIDENCE_THRESHOLD", "value": "11005"}], "cv::CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ": [{"name": "cv.CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_HORZ", "value": "11006"}], "cv::CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT": [{"name": "cv.CAP_PROP_INTELPERC_DEPTH_FOCAL_LENGTH_VERT", "value": "11007"}], "cv::CAP_INTELPERC_DEPTH_GENERATOR": [{"name": "cv.CAP_INTELPERC_DEPTH_GENERATOR", "value": "1 << 29"}], "cv::CAP_INTELPERC_IMAGE_GENERATOR": [{"name": "cv.CAP_INTELPERC_IMAGE_GENERATOR", "value": "1 << 28"}], "cv::CAP_INTELPERC_IR_GENERATOR": [{"name": "cv.CAP_INTELPERC_IR_GENERATOR", "value": "1 << 27"}], "cv::CAP_INTELPERC_GENERATORS_MASK": [{"name": "cv.CAP_INTELPERC_GENERATORS_MASK", "value": "CAP_INTELPERC_DEPTH_GENERATOR + CAP_INTELPERC_IMAGE_GENERATOR + CAP_INTELPERC_IR_GENERATOR"}], "cv::CAP_INTELPERC_DEPTH_MAP": [{"name": "cv.CAP_INTELPERC_DEPTH_MAP", "value": "0"}], "cv::CAP_INTELPERC_UVDEPTH_MAP": [{"name": "cv.CAP_INTELPERC_UVDEPTH_MAP", "value": "1"}], "cv::CAP_INTELPERC_IR_MAP": [{"name": "cv.CAP_INTELPERC_IR_MAP", "value": "2"}], "cv::CAP_INTELPERC_IMAGE": [{"name": "cv.CAP_INTELPERC_IMAGE", "value": "3"}], "cv::CAP_PROP_GPHOTO2_PREVIEW": [{"name": "cv.CAP_PROP_GPHOTO2_PREVIEW", "value": "17001"}], "cv::CAP_PROP_GPHOTO2_WIDGET_ENUMERATE": [{"name": "cv.CAP_PROP_GPHOTO2_WIDGET_ENUMERATE", "value": "17002"}], "cv::CAP_PROP_GPHOTO2_RELOAD_CONFIG": [{"name": "cv.CAP_PROP_GPHOTO2_RELOAD_CONFIG", "value": "17003"}], "cv::CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE": [{"name": "cv.CAP_PROP_GPHOTO2_RELOAD_ON_CHANGE", "value": "17004"}], "cv::CAP_PROP_GPHOTO2_COLLECT_MSGS": [{"name": "cv.CAP_PROP_GPHOTO2_COLLECT_MSGS", "value": "17005"}], "cv::CAP_PROP_GPHOTO2_FLUSH_MSGS": [{"name": "cv.CAP_PROP_GPHOTO2_FLUSH_MSGS", "value": "17006"}], "cv::CAP_PROP_SPEED": [{"name": "cv.CAP_PROP_SPEED", "value": "17007"}], "cv::CAP_PROP_APERTURE": [{"name": "cv.CAP_PROP_APERTURE", "value": "17008"}], "cv::CAP_PROP_EXPOSUREPROGRAM": [{"name": "cv.CAP_PROP_EXPOSUREPROGRAM", "value": "17009"}], "cv::CAP_PROP_VIEWFINDER": [{"name": "cv.CAP_PROP_VIEWFINDER", "value": "17010"}], "cv::CAP_PROP_IMAGES_BASE": [{"name": "cv.CAP_PROP_IMAGES_BASE", "value": "18000"}], "cv::CAP_PROP_IMAGES_LAST": [{"name": "cv.CAP_PROP_IMAGES_LAST", "value": "19000"}], "cv::VideoCapture": [{"name": "cv.VideoCapture"}], "cv::VideoWriter": [{"name": "cv.VideoWriter"}], "cv::LMEDS": [{"name": "cv.LMEDS", "value": "4"}], "cv::RANSAC": [{"name": "cv.RANSAC", "value": "8"}], "cv::RHO": [{"name": "cv.RHO", "value": "16"}], "cv::USAC_DEFAULT": [{"name": "cv.USAC_DEFAULT", "value": "32"}], "cv::USAC_PARALLEL": [{"name": "cv.USAC_PARALLEL", "value": "33"}], "cv::USAC_FM_8PTS": [{"name": "cv.USAC_FM_8PTS", "value": "34"}], "cv::USAC_FAST": [{"name": "cv.USAC_FAST", "value": "35"}], "cv::USAC_ACCURATE": [{"name": "cv.USAC_ACCURATE", "value": "36"}], "cv::USAC_PROSAC": [{"name": "cv.USAC_PROSAC", "value": "37"}], "cv::USAC_MAGSAC": [{"name": "cv.USAC_MAGSAC", "value": "38"}], "cv::SOLVEPNP_ITERATIVE": [{"name": "cv.SOLVEPNP_ITERATIVE", "value": "0"}], "cv::SOLVEPNP_EPNP": [{"name": "cv.SOLVEPNP_EPNP", "value": "1"}], "cv::SOLVEPNP_P3P": [{"name": "cv.SOLVEPNP_P3P", "value": "2"}], "cv::SOLVEPNP_DLS": [{"name": "cv.SOLVEPNP_DLS", "value": "3"}], "cv::SOLVEPNP_UPNP": [{"name": "cv.SOLVEPNP_UPNP", "value": "4"}], "cv::SOLVEPNP_AP3P": [{"name": "cv.SOLVEPNP_AP3P", "value": "5"}], "cv::SOLVEPNP_IPPE": [{"name": "cv.SOLVEPNP_IPPE", "value": "6"}], "cv::SOLVEPNP_IPPE_SQUARE": [{"name": "cv.SOLVEPNP_IPPE_SQUARE", "value": "7"}], "cv::SOLVEPNP_MAX_COUNT": [{"name": "cv.SOLVEPNP_MAX_COUNT", "value": "7+1"}], "cv::CALIB_CB_ADAPTIVE_THRESH": [{"name": "cv.CALIB_CB_ADAPTIVE_THRESH", "value": "1"}], "cv::CALIB_CB_NORMALIZE_IMAGE": [{"name": "cv.CALIB_CB_NORMALIZE_IMAGE", "value": "2"}], "cv::CALIB_CB_FILTER_QUADS": [{"name": "cv.CALIB_CB_FILTER_QUADS", "value": "4"}], "cv::CALIB_CB_FAST_CHECK": [{"name": "cv.CALIB_CB_FAST_CHECK", "value": "8"}], "cv::CALIB_CB_EXHAUSTIVE": [{"name": "cv.CALIB_CB_EXHAUSTIVE", "value": "16"}], "cv::CALIB_CB_ACCURACY": [{"name": "cv.CALIB_CB_ACCURACY", "value": "32"}], "cv::CALIB_CB_LARGER": [{"name": "cv.CALIB_CB_LARGER", "value": "64"}], "cv::CALIB_CB_MARKER": [{"name": "cv.CALIB_CB_MARKER", "value": "128"}], "cv::CALIB_CB_SYMMETRIC_GRID": [{"name": "cv.CALIB_CB_SYMMETRIC_GRID", "value": "1"}], "cv::CALIB_CB_ASYMMETRIC_GRID": [{"name": "cv.CALIB_CB_ASYMMETRIC_GRID", "value": "2"}], "cv::CALIB_CB_CLUSTERING": [{"name": "cv.CALIB_CB_CLUSTERING", "value": "4"}], "cv::CALIB_NINTRINSIC": [{"name": "cv.CALIB_NINTRINSIC", "value": "18"}], "cv::CALIB_USE_INTRINSIC_GUESS": [{"name": "cv.CALIB_USE_INTRINSIC_GUESS", "value": "0x00001"}], "cv::CALIB_FIX_ASPECT_RATIO": [{"name": "cv.CALIB_FIX_ASPECT_RATIO", "value": "0x00002"}], "cv::CALIB_FIX_PRINCIPAL_POINT": [{"name": "cv.CALIB_FIX_PRINCIPAL_POINT", "value": "0x00004"}], "cv::CALIB_ZERO_TANGENT_DIST": [{"name": "cv.CALIB_ZERO_TANGENT_DIST", "value": "0x00008"}], "cv::CALIB_FIX_FOCAL_LENGTH": [{"name": "cv.CALIB_FIX_FOCAL_LENGTH", "value": "0x00010"}], "cv::CALIB_FIX_K1": [{"name": "cv.CALIB_FIX_K1", "value": "0x00020"}], "cv::CALIB_FIX_K2": [{"name": "cv.CALIB_FIX_K2", "value": "0x00040"}], "cv::CALIB_FIX_K3": [{"name": "cv.CALIB_FIX_K3", "value": "0x00080"}], "cv::CALIB_FIX_K4": [{"name": "cv.CALIB_FIX_K4", "value": "0x00800"}], "cv::CALIB_FIX_K5": [{"name": "cv.CALIB_FIX_K5", "value": "0x01000"}], "cv::CALIB_FIX_K6": [{"name": "cv.CALIB_FIX_K6", "value": "0x02000"}], "cv::CALIB_RATIONAL_MODEL": [{"name": "cv.CALIB_RATIONAL_MODEL", "value": "0x04000"}], "cv::CALIB_THIN_PRISM_MODEL": [{"name": "cv.CALIB_THIN_PRISM_MODEL", "value": "0x08000"}], "cv::CALIB_FIX_S1_S2_S3_S4": [{"name": "cv.CALIB_FIX_S1_S2_S3_S4", "value": "0x10000"}], "cv::CALIB_TILTED_MODEL": [{"name": "cv.CALIB_TILTED_MODEL", "value": "0x40000"}], "cv::CALIB_FIX_TAUX_TAUY": [{"name": "cv.CALIB_FIX_TAUX_TAUY", "value": "0x80000"}], "cv::CALIB_USE_QR": [{"name": "cv.CALIB_USE_QR", "value": "0x100000"}], "cv::CALIB_FIX_TANGENT_DIST": [{"name": "cv.CALIB_FIX_TANGENT_DIST", "value": "0x200000"}], "cv::CALIB_FIX_INTRINSIC": [{"name": "cv.CALIB_FIX_INTRINSIC", "value": "0x00100"}], "cv::CALIB_SAME_FOCAL_LENGTH": [{"name": "cv.CALIB_SAME_FOCAL_LENGTH", "value": "0x00200"}], "cv::CALIB_ZERO_DISPARITY": [{"name": "cv.CALIB_ZERO_DISPARITY", "value": "0x00400"}], "cv::CALIB_USE_LU": [{"name": "cv.CALIB_USE_LU", "value": "(1 << 17)"}], "cv::CALIB_USE_EXTRINSIC_GUESS": [{"name": "cv.CALIB_USE_EXTRINSIC_GUESS", "value": "(1 << 22)"}], "cv::FM_7POINT": [{"name": "cv.FM_7POINT", "value": "1"}], "cv::FM_8POINT": [{"name": "cv.FM_8POINT", "value": "2"}], "cv::FM_LMEDS": [{"name": "cv.FM_LMEDS", "value": "4"}], "cv::FM_RANSAC": [{"name": "cv.FM_RANSAC", "value": "8"}], "cv::CALIB_HAND_EYE_TSAI": [{"name": "cv.CALIB_HAND_EYE_TSAI", "value": "0"}], "cv::CALIB_HAND_EYE_PARK": [{"name": "cv.CALIB_HAND_EYE_PARK", "value": "1"}], "cv::CALIB_HAND_EYE_HORAUD": [{"name": "cv.CALIB_HAND_EYE_HORAUD", "value": "2"}], "cv::CALIB_HAND_EYE_ANDREFF": [{"name": "cv.CALIB_HAND_EYE_ANDREFF", "value": "3"}], "cv::CALIB_HAND_EYE_DANIILIDIS": [{"name": "cv.CALIB_HAND_EYE_DANIILIDIS", "value": "4"}], "cv::CALIB_ROBOT_WORLD_HAND_EYE_SHAH": [{"name": "cv.CALIB_ROBOT_WORLD_HAND_EYE_SHAH", "value": "0"}], "cv::CALIB_ROBOT_WORLD_HAND_EYE_LI": [{"name": "cv.CALIB_ROBOT_WORLD_HAND_EYE_LI", "value": "1"}], "cv::SAMPLING_UNIFORM": [{"name": "cv.SAMPLING_UNIFORM", "value": "0"}], "cv::SAMPLING_PROGRESSIVE_NAPSAC": [{"name": "cv.SAMPLING_PROGRESSIVE_NAPSAC", "value": "1"}], "cv::SAMPLING_NAPSAC": [{"name": "cv.SAMPLING_NAPSAC", "value": "2"}], "cv::SAMPLING_PROSAC": [{"name": "cv.SAMPLING_PROSAC", "value": "3"}], "cv::LOCAL_OPTIM_NULL": [{"name": "cv.LOCAL_OPTIM_NULL", "value": "0"}], "cv::LOCAL_OPTIM_INNER_LO": [{"name": "cv.LOCAL_OPTIM_INNER_LO", "value": "1"}], "cv::LOCAL_OPTIM_INNER_AND_ITER_LO": [{"name": "cv.LOCAL_OPTIM_INNER_AND_ITER_LO", "value": "2"}], "cv::LOCAL_OPTIM_GC": [{"name": "cv.LOCAL_OPTIM_GC", "value": "3"}], "cv::LOCAL_OPTIM_SIGMA": [{"name": "cv.LOCAL_OPTIM_SIGMA", "value": "4"}], "cv::SCORE_METHOD_RANSAC": [{"name": "cv.SCORE_METHOD_RANSAC", "value": "0"}], "cv::SCORE_METHOD_MSAC": [{"name": "cv.SCORE_METHOD_MSAC", "value": "1"}], "cv::SCORE_METHOD_MAGSAC": [{"name": "cv.SCORE_METHOD_MAGSAC", "value": "2"}], "cv::SCORE_METHOD_LMEDS": [{"name": "cv.SCORE_METHOD_LMEDS", "value": "3"}], "cv::NEIGH_FLANN_KNN": [{"name": "cv.NEIGH_FLANN_KNN", "value": "0"}], "cv::NEIGH_GRID": [{"name": "cv.NEIGH_GRID", "value": "1"}], "cv::NEIGH_FLANN_RADIUS": [{"name": "cv.NEIGH_FLANN_RADIUS", "value": "2"}], "cv::UsacParams": [{"name": "cv.UsacParams"}], "cv::CirclesGridFinderParameters": [{"name": "cv.CirclesGridFinderParameters"}], "cv::CirclesGridFinderParameters::SYMMETRIC_GRID": [{"name": "cv.CirclesGridFinderParameters_SYMMETRIC_GRID", "value": "0"}], "cv::CirclesGridFinderParameters::ASYMMETRIC_GRID": [{"name": "cv.CirclesGridFinderParameters_ASYMMETRIC_GRID", "value": "1"}], "cv::StereoMatcher": [{"name": "cv.StereoMatcher"}], "cv::StereoMatcher::DISP_SHIFT": [{"name": "cv.StereoMatcher_DISP_SHIFT", "value": "4"}], "cv::StereoMatcher::DISP_SCALE": [{"name": "cv.StereoMatcher_DISP_SCALE", "value": "(1 << DISP_SHIFT)"}], "cv::StereoBM": [{"name": "cv.StereoBM"}], "cv::StereoBM::PREFILTER_NORMALIZED_RESPONSE": [{"name": "cv.StereoBM_PREFILTER_NORMALIZED_RESPONSE", "value": "0"}], "cv::StereoBM::PREFILTER_XSOBEL": [{"name": "cv.StereoBM_PREFILTER_XSOBEL", "value": "1"}], "cv::StereoSGBM": [{"name": "cv.StereoSGBM"}], "cv::StereoSGBM::MODE_SGBM": [{"name": "cv.StereoSGBM_MODE_SGBM", "value": "0"}], "cv::StereoSGBM::MODE_HH": [{"name": "cv.StereoSGBM_MODE_HH", "value": "1"}], "cv::StereoSGBM::MODE_SGBM_3WAY": [{"name": "cv.StereoSGBM_MODE_SGBM_3WAY", "value": "2"}], "cv::StereoSGBM::MODE_HH4": [{"name": "cv.StereoSGBM_MODE_HH4", "value": "3"}], "cv::PROJ_SPHERICAL_ORTHO": [{"name": "cv.PROJ_SPHERICAL_ORTHO", "value": "0"}], "cv::PROJ_SPHERICAL_EQRECT": [{"name": "cv.PROJ_SPHERICAL_EQRECT", "value": "1"}], "cv::fisheye::CALIB_USE_INTRINSIC_GUESS": [{"name": "cv.fisheye.CALIB_USE_INTRINSIC_GUESS", "value": "1 << 0"}], "cv::fisheye::CALIB_RECOMPUTE_EXTRINSIC": [{"name": "cv.fisheye.CALIB_RECOMPUTE_EXTRINSIC", "value": "1 << 1"}], "cv::fisheye::CALIB_CHECK_COND": [{"name": "cv.fisheye.CALIB_CHECK_COND", "value": "1 << 2"}], "cv::fisheye::CALIB_FIX_SKEW": [{"name": "cv.fisheye.CALIB_FIX_SKEW", "value": "1 << 3"}], "cv::fisheye::CALIB_FIX_K1": [{"name": "cv.fisheye.CALIB_FIX_K1", "value": "1 << 4"}], "cv::fisheye::CALIB_FIX_K2": [{"name": "cv.fisheye.CALIB_FIX_K2", "value": "1 << 5"}], "cv::fisheye::CALIB_FIX_K3": [{"name": "cv.fisheye.CALIB_FIX_K3", "value": "1 << 6"}], "cv::fisheye::CALIB_FIX_K4": [{"name": "cv.fisheye.CALIB_FIX_K4", "value": "1 << 7"}], "cv::fisheye::CALIB_FIX_INTRINSIC": [{"name": "cv.fisheye.CALIB_FIX_INTRINSIC", "value": "1 << 8"}], "cv::fisheye::CALIB_FIX_PRINCIPAL_POINT": [{"name": "cv.fisheye.CALIB_FIX_PRINCIPAL_POINT", "value": "1 << 9"}], "cv::datasets::male": [{"name": "cv.datasets.male", "value": "0"}], "cv::datasets::female": [{"name": "cv.datasets.female", "value": "0+1"}], "cv::datasets::none": [{"name": "cv.datasets.none", "value": "0+2"}], "cv::datasets::circle": [{"name": "cv.datasets.circle", "value": "1"}], "cv::datasets::triangle": [{"name": "cv.datasets.triangle", "value": "1+1"}], "cv::datasets::updown": [{"name": "cv.datasets.updown", "value": "1+2"}], "cv::datasets::rightleft": [{"name": "cv.datasets.rightleft", "value": "1+3"}], "cv::datasets::wave": [{"name": "cv.datasets.wave", "value": "1+4"}], "cv::datasets::z": [{"name": "cv.datasets.z", "value": "1+5"}], "cv::datasets::cross": [{"name": "cv.datasets.cross", "value": "1+6"}], "cv::datasets::comehere": [{"name": "cv.datasets.comehere", "value": "1+7"}], "cv::datasets::turnaround": [{"name": "cv.datasets.turnaround", "value": "1+8"}], "cv::datasets::pat": [{"name": "cv.datasets.pat", "value": "1+9"}], "cv::datasets::fist": [{"name": "cv.datasets.fist", "value": "1"}], "cv::datasets::index": [{"name": "cv.datasets.index", "value": "1+1"}], "cv::datasets::flat": [{"name": "cv.datasets.flat", "value": "1+2"}], "cv::datasets::light": [{"name": "cv.datasets.light", "value": "1"}], "cv::datasets::dark": [{"name": "cv.datasets.dark", "value": "1+1"}], "cv::datasets::woodenBoard": [{"name": "cv.datasets.woodenBoard", "value": "1"}], "cv::datasets::whitePaper": [{"name": "cv.datasets.whitePaper", "value": "1+1"}], "cv::datasets::paperWithCharacters": [{"name": "cv.datasets.paperWithCharacters", "value": "1+2"}], "cv::datasets::humaneva_1": [{"name": "cv.datasets.humaneva_1", "value": "1"}], "cv::datasets::humaneva_2": [{"name": "cv.datasets.humaneva_2", "value": "1+1"}], "cv::datasets::POS": [{"name": "cv.datasets.POS", "value": "0"}], "cv::datasets::NEG": [{"name": "cv.datasets.NEG", "value": "1"}], "cv::datasets::LEFT": [{"name": "cv.datasets.LEFT", "value": "0"}], "cv::datasets::RIGHT": [{"name": "cv.datasets.RIGHT", "value": "0+1"}], "cv::datasets::LADYBUG": [{"name": "cv.datasets.LADYBUG", "value": "0+2"}], "cv::WINDOW_NORMAL": [{"name": "cv.WINDOW_NORMAL", "value": "0x00000000"}], "cv::WINDOW_AUTOSIZE": [{"name": "cv.WINDOW_AUTOSIZE", "value": "0x00000001"}], "cv::WINDOW_OPENGL": [{"name": "cv.WINDOW_OPENGL", "value": "0x00001000"}], "cv::WINDOW_FULLSCREEN": [{"name": "cv.WINDOW_FULLSCREEN", "value": "1"}], "cv::WINDOW_FREERATIO": [{"name": "cv.WINDOW_FREERATIO", "value": "0x00000100"}], "cv::WINDOW_KEEPRATIO": [{"name": "cv.WINDOW_KEEPRATIO", "value": "0x00000000"}], "cv::WINDOW_GUI_EXPANDED": [{"name": "cv.WINDOW_GUI_EXPANDED", "value": "0x00000000"}], "cv::WINDOW_GUI_NORMAL": [{"name": "cv.WINDOW_GUI_NORMAL", "value": "0x00000010"}], "cv::WND_PROP_FULLSCREEN": [{"name": "cv.WND_PROP_FULLSCREEN", "value": "0"}], "cv::WND_PROP_AUTOSIZE": [{"name": "cv.WND_PROP_AUTOSIZE", "value": "1"}], "cv::WND_PROP_ASPECT_RATIO": [{"name": "cv.WND_PROP_ASPECT_RATIO", "value": "2"}], "cv::WND_PROP_OPENGL": [{"name": "cv.WND_PROP_OPENGL", "value": "3"}], "cv::WND_PROP_VISIBLE": [{"name": "cv.WND_PROP_VISIBLE", "value": "4"}], "cv::WND_PROP_TOPMOST": [{"name": "cv.WND_PROP_TOPMOST", "value": "5"}], "cv::EVENT_MOUSEMOVE": [{"name": "cv.EVENT_MOUSEMOVE", "value": "0"}], "cv::EVENT_LBUTTONDOWN": [{"name": "cv.EVENT_LBUTTONDOWN", "value": "1"}], "cv::EVENT_RBUTTONDOWN": [{"name": "cv.EVENT_RBUTTONDOWN", "value": "2"}], "cv::EVENT_MBUTTONDOWN": [{"name": "cv.EVENT_MBUTTONDOWN", "value": "3"}], "cv::EVENT_LBUTTONUP": [{"name": "cv.EVENT_LBUTTONUP", "value": "4"}], "cv::EVENT_RBUTTONUP": [{"name": "cv.EVENT_RBUTTONUP", "value": "5"}], "cv::EVENT_MBUTTONUP": [{"name": "cv.EVENT_MBUTTONUP", "value": "6"}], "cv::EVENT_LBUTTONDBLCLK": [{"name": "cv.EVENT_LBUTTONDBLCLK", "value": "7"}], "cv::EVENT_RBUTTONDBLCLK": [{"name": "cv.EVENT_RBUTTONDBLCLK", "value": "8"}], "cv::EVENT_MBUTTONDBLCLK": [{"name": "cv.EVENT_MBUTTONDBLCLK", "value": "9"}], "cv::EVENT_MOUSEWHEEL": [{"name": "cv.EVENT_MOUSEWHEEL", "value": "10"}], "cv::EVENT_MOUSEHWHEEL": [{"name": "cv.EVENT_MOUSEHWHEEL", "value": "11"}], "cv::EVENT_FLAG_LBUTTON": [{"name": "cv.EVENT_FLAG_LBUTTON", "value": "1"}], "cv::EVENT_FLAG_RBUTTON": [{"name": "cv.EVENT_FLAG_RBUTTON", "value": "2"}], "cv::EVENT_FLAG_MBUTTON": [{"name": "cv.EVENT_FLAG_MBUTTON", "value": "4"}], "cv::EVENT_FLAG_CTRLKEY": [{"name": "cv.EVENT_FLAG_CTRLKEY", "value": "8"}], "cv::EVENT_FLAG_SHIFTKEY": [{"name": "cv.EVENT_FLAG_SHIFTKEY", "value": "16"}], "cv::EVENT_FLAG_ALTKEY": [{"name": "cv.EVENT_FLAG_ALTKEY", "value": "32"}], "cv::QT_FONT_LIGHT": [{"name": "cv.QT_FONT_LIGHT", "value": "25"}], "cv::QT_FONT_NORMAL": [{"name": "cv.QT_FONT_NORMAL", "value": "50"}], "cv::QT_FONT_DEMIBOLD": [{"name": "cv.QT_FONT_DEMIBOLD", "value": "63"}], "cv::QT_FONT_BOLD": [{"name": "cv.QT_FONT_BOLD", "value": "75"}], "cv::QT_FONT_BLACK": [{"name": "cv.QT_FONT_BLACK", "value": "87"}], "cv::QT_STYLE_NORMAL": [{"name": "cv.QT_STYLE_NORMAL", "value": "0"}], "cv::QT_STYLE_ITALIC": [{"name": "cv.QT_STYLE_ITALIC", "value": "1"}], "cv::QT_STYLE_OBLIQUE": [{"name": "cv.QT_STYLE_OBLIQUE", "value": "2"}], "cv::QT_PUSH_BUTTON": [{"name": "cv.QT_PUSH_BUTTON", "value": "0"}], "cv::QT_CHECKBOX": [{"name": "cv.QT_CHECKBOX", "value": "1"}], "cv::QT_RADIOBOX": [{"name": "cv.QT_RADIOBOX", "value": "2"}], "cv::QT_NEW_BUTTONBAR": [{"name": "cv.QT_NEW_BUTTONBAR", "value": "1024"}], "cv::mcc::DetectorParameters": [{"name": "cv.mcc_DetectorParameters"}], "cv::mcc::CCheckerDetector": [{"name": "cv.mcc_CCheckerDetector"}], "cv::mcc::MCC24": [{"name": "cv.mcc.MCC24", "value": "0"}], "cv::mcc::SG140": [{"name": "cv.mcc.SG140", "value": "0+1"}], "cv::mcc::VINYL18": [{"name": "cv.mcc.VINYL18", "value": "0+2"}], "cv::mcc::CChecker": [{"name": "cv.mcc_CChecker"}], "cv::mcc::CCheckerDraw": [{"name": "cv.mcc_CCheckerDraw"}], "cv::CASCADE_DO_CANNY_PRUNING": [{"name": "cv.CASCADE_DO_CANNY_PRUNING", "value": "1"}], "cv::CASCADE_SCALE_IMAGE": [{"name": "cv.CASCADE_SCALE_IMAGE", "value": "2"}], "cv::CASCADE_FIND_BIGGEST_OBJECT": [{"name": "cv.CASCADE_FIND_BIGGEST_OBJECT", "value": "4"}], "cv::CASCADE_DO_ROUGH_SEARCH": [{"name": "cv.CASCADE_DO_ROUGH_SEARCH", "value": "8"}], "cv::BaseCascadeClassifier": [{"name": "cv.BaseCascadeClassifier"}], "cv::CascadeClassifier": [{"name": "cv.CascadeClassifier"}], "cv::HOGDescriptor": [{"name": "cv.HOGDescriptor"}], "cv::HOGDescriptor::L2Hys": [{"name": "cv.HOGDescriptor_L2Hys", "value": "0"}], "cv::HOGDescriptor::DEFAULT_NLEVELS": [{"name": "cv.HOGDescriptor_DEFAULT_NLEVELS", "value": "64"}], "cv::HOGDescriptor::DESCR_FORMAT_COL_BY_COL": [{"name": "cv.HOGDescriptor_DESCR_FORMAT_COL_BY_COL", "value": "0"}], "cv::HOGDescriptor::DESCR_FORMAT_ROW_BY_ROW": [{"name": "cv.HOGDescriptor_DESCR_FORMAT_ROW_BY_ROW", "value": "1"}], "cv::QRCodeDetector": [{"name": "cv.QRCodeDetector"}], "cv::rapid::Tracker": [{"name": "cv.rapid_Tracker"}], "cv::rapid::Rapid": [{"name": "cv.rapid_Rapid"}], "cv::rapid::OLSTracker": [{"name": "cv.rapid_OLSTracker"}], "cv::rgbd::RgbdNormals": [{"name": "cv.rgbd_RgbdNormals"}], "cv::rgbd::RgbdNormals::RGBD_NORMALS_METHOD_FALS": [{"name": "cv.rgbd.RgbdNormals_RGBD_NORMALS_METHOD_FALS", "value": "0"}], "cv::rgbd::RgbdNormals::RGBD_NORMALS_METHOD_LINEMOD": [{"name": "cv.rgbd.RgbdNormals_RGBD_NORMALS_METHOD_LINEMOD", "value": "1"}], "cv::rgbd::RgbdNormals::RGBD_NORMALS_METHOD_SRI": [{"name": "cv.rgbd.RgbdNormals_RGBD_NORMALS_METHOD_SRI", "value": "2"}], "cv::rgbd::DepthCleaner": [{"name": "cv.rgbd_DepthCleaner"}], "cv::rgbd::DepthCleaner::DEPTH_CLEANER_NIL": [{"name": "cv.rgbd.DepthCleaner_DEPTH_CLEANER_NIL", "value": "0"}], "cv::rgbd::RgbdPlane": [{"name": "cv.rgbd_RgbdPlane"}], "cv::rgbd::RgbdPlane::RGBD_PLANE_METHOD_DEFAULT": [{"name": "cv.rgbd.RgbdPlane_RGBD_PLANE_METHOD_DEFAULT", "value": "0"}], "cv::rgbd::RgbdFrame": [{"name": "cv.rgbd_RgbdFrame"}], "cv::rgbd::OdometryFrame": [{"name": "cv.rgbd_OdometryFrame"}], "cv::rgbd::OdometryFrame::CACHE_SRC": [{"name": "cv.rgbd.OdometryFrame_CACHE_SRC", "value": "1"}], "cv::rgbd::OdometryFrame::CACHE_DST": [{"name": "cv.rgbd.OdometryFrame_CACHE_DST", "value": "2"}], "cv::rgbd::OdometryFrame::CACHE_ALL": [{"name": "cv.rgbd.OdometryFrame_CACHE_ALL", "value": "CACHE_SRC + CACHE_DST"}], "cv::rgbd::Odometry": [{"name": "cv.rgbd_Odometry"}], "cv::rgbd::Odometry::ROTATION": [{"name": "cv.rgbd.Odometry_ROTATION", "value": "1"}], "cv::rgbd::Odometry::TRANSLATION": [{"name": "cv.rgbd.Odometry_TRANSLATION", "value": "2"}], "cv::rgbd::Odometry::RIGID_BODY_MOTION": [{"name": "cv.rgbd.Odometry_RIGID_BODY_MOTION", "value": "4"}], "cv::rgbd::RgbdOdometry": [{"name": "cv.rgbd_RgbdOdometry"}], "cv::rgbd::ICPOdometry": [{"name": "cv.rgbd_ICPOdometry"}], "cv::rgbd::RgbdICPOdometry": [{"name": "cv.rgbd_RgbdICPOdometry"}], "cv::rgbd::FastICPOdometry": [{"name": "cv.rgbd_FastICPOdometry"}], "cv::dynafu::Params": [{"name": "cv.dynafu_Params"}], "cv::dynafu::DynaFu": [{"name": "cv.dynafu_DynaFu"}], "cv::kinfu::Params": [{"name": "cv.kinfu_Params"}], "cv::kinfu::KinFu": [{"name": "cv.kinfu_KinFu"}], "cv::linemod::Feature": [{"name": "cv.linemod_Feature"}], "cv::linemod::Template": [{"name": "cv.linemod_Template"}], "cv::linemod::QuantizedPyramid": [{"name": "cv.linemod_QuantizedPyramid"}], "cv::linemod::Modality": [{"name": "cv.linemod_Modality"}], "cv::linemod::ColorGradient": [{"name": "cv.linemod_ColorGradient"}], "cv::linemod::DepthNormal": [{"name": "cv.linemod_DepthNormal"}], "cv::linemod::Match": [{"name": "cv.linemod_Match"}], "cv::linemod::Detector": [{"name": "cv.linemod_Detector"}], "cv::kinfu::Volume": [{"name": "cv.kinfu_Volume"}], "cv::kinfu::VolumeType::TSDF": [{"name": "cv.kinfu.VolumeType_TSDF", "value": "0"}], "cv::kinfu::VolumeType::HASHTSDF": [{"name": "cv.kinfu.VolumeType_HASHTSDF", "value": "1"}], "cv::HistogramCostExtractor": [{"name": "cv.HistogramCostExtractor"}], "cv::NormHistogramCostExtractor": [{"name": "cv.NormHistogramCostExtractor"}], "cv::EMDHistogramCostExtractor": [{"name": "cv.EMDHistogramCostExtractor"}], "cv::ChiHistogramCostExtractor": [{"name": "cv.ChiHistogramCostExtractor"}], "cv::EMDL1HistogramCostExtractor": [{"name": "cv.EMDL1HistogramCostExtractor"}], "cv::ShapeDistanceExtractor": [{"name": "cv.ShapeDistanceExtractor"}], "cv::ShapeContextDistanceExtractor": [{"name": "cv.ShapeContextDistanceExtractor"}], "cv::HausdorffDistanceExtractor": [{"name": "cv.HausdorffDistanceExtractor"}], "cv::ShapeTransformer": [{"name": "cv.ShapeTransformer"}], "cv::ThinPlateSplineShapeTransformer": [{"name": "cv.ThinPlateSplineShapeTransformer"}], "cv::AffineTransformer": [{"name": "cv.AffineTransformer"}], "cv::structured_light::GrayCodePattern": [{"name": "cv.structured_light_GrayCodePattern"}], "cv::structured_light::FTP": [{"name": "cv.structured_light.FTP", "value": "0"}], "cv::structured_light::PSP": [{"name": "cv.structured_light.PSP", "value": "1"}], "cv::structured_light::FAPS": [{"name": "cv.structured_light.FAPS", "value": "2"}], "cv::structured_light::SinusoidalPattern": [{"name": "cv.structured_light_SinusoidalPattern"}], "cv::structured_light::SinusoidalPattern::Params": [{"name": "cv.structured_light_SinusoidalPattern_Params"}], "cv::structured_light::DECODE_3D_UNDERWORLD": [{"name": "cv.structured_light.DECODE_3D_UNDERWORLD", "value": "0"}], "cv::structured_light::StructuredLightPattern": [{"name": "cv.structured_light_StructuredLightPattern"}], "cv::BackgroundSubtractor": [{"name": "cv.BackgroundSubtractor"}], "cv::BackgroundSubtractorMOG2": [{"name": "cv.BackgroundSubtractorMOG2"}], "cv::BackgroundSubtractorKNN": [{"name": "cv.BackgroundSubtractorKNN"}], "cv::OPTFLOW_USE_INITIAL_FLOW": [{"name": "cv.OPTFLOW_USE_INITIAL_FLOW", "value": "4"}], "cv::OPTFLOW_LK_GET_MIN_EIGENVALS": [{"name": "cv.OPTFLOW_LK_GET_MIN_EIGENVALS", "value": "8"}], "cv::OPTFLOW_FARNEBACK_GAUSSIAN": [{"name": "cv.OPTFLOW_FARNEBACK_GAUSSIAN", "value": "256"}], "cv::MOTION_TRANSLATION": [{"name": "cv.MOTION_TRANSLATION", "value": "0"}], "cv::MOTION_EUCLIDEAN": [{"name": "cv.MOTION_EUCLIDEAN", "value": "1"}], "cv::MOTION_AFFINE": [{"name": "cv.MOTION_AFFINE", "value": "2"}], "cv::MOTION_HOMOGRAPHY": [{"name": "cv.MOTION_HOMOGRAPHY", "value": "3"}], "cv::KalmanFilter": [{"name": "cv.KalmanFilter"}], "cv::DenseOpticalFlow": [{"name": "cv.DenseOpticalFlow"}], "cv::SparseOpticalFlow": [{"name": "cv.SparseOpticalFlow"}], "cv::FarnebackOpticalFlow": [{"name": "cv.FarnebackOpticalFlow"}], "cv::VariationalRefinement": [{"name": "cv.VariationalRefinement"}], "cv::DISOpticalFlow": [{"name": "cv.DISOpticalFlow"}], "cv::DISOpticalFlow::PRESET_ULTRAFAST": [{"name": "cv.DISOpticalFlow_PRESET_ULTRAFAST", "value": "0"}], "cv::DISOpticalFlow::PRESET_FAST": [{"name": "cv.DISOpticalFlow_PRESET_FAST", "value": "1"}], "cv::DISOpticalFlow::PRESET_MEDIUM": [{"name": "cv.DISOpticalFlow_PRESET_MEDIUM", "value": "2"}], "cv::SparsePyrLKOpticalFlow": [{"name": "cv.SparsePyrLKOpticalFlow"}], "cv::videostab::MM_TRANSLATION": [{"name": "cv.videostab.MM_TRANSLATION", "value": "0"}], "cv::videostab::MM_TRANSLATION_AND_SCALE": [{"name": "cv.videostab.MM_TRANSLATION_AND_SCALE", "value": "1"}], "cv::videostab::MM_ROTATION": [{"name": "cv.videostab.MM_ROTATION", "value": "2"}], "cv::videostab::MM_RIGID": [{"name": "cv.videostab.MM_RIGID", "value": "3"}], "cv::videostab::MM_SIMILARITY": [{"name": "cv.videostab.MM_SIMILARITY", "value": "4"}], "cv::videostab::MM_AFFINE": [{"name": "cv.videostab.MM_AFFINE", "value": "5"}], "cv::videostab::MM_HOMOGRAPHY": [{"name": "cv.videostab.MM_HOMOGRAPHY", "value": "6"}], "cv::videostab::MM_UNKNOWN": [{"name": "cv.videostab.MM_UNKNOWN", "value": "7"}], "cv::xfeatures2d::FREAK": [{"name": "cv.xfeatures2d_FREAK"}], "cv::xfeatures2d::StarDetector": [{"name": "cv.xfeatures2d_StarDetector"}], "cv::xfeatures2d::BriefDescriptorExtractor": [{"name": "cv.xfeatures2d_BriefDescriptorExtractor"}], "cv::xfeatures2d::LUCID": [{"name": "cv.xfeatures2d_LUCID"}], "cv::xfeatures2d::LATCH": [{"name": "cv.xfeatures2d_LATCH"}], "cv::xfeatures2d::DAISY": [{"name": "cv.xfeatures2d_DAISY"}], "cv::xfeatures2d::DAISY::NRM_NONE": [{"name": "cv.xfeatures2d.DAISY_NRM_NONE", "value": "100"}], "cv::xfeatures2d::DAISY::NRM_PARTIAL": [{"name": "cv.xfeatures2d.DAISY_NRM_PARTIAL", "value": "101"}], "cv::xfeatures2d::DAISY::NRM_FULL": [{"name": "cv.xfeatures2d.DAISY_NRM_FULL", "value": "102"}], "cv::xfeatures2d::DAISY::NRM_SIFT": [{"name": "cv.xfeatures2d.DAISY_NRM_SIFT", "value": "103"}], "cv::xfeatures2d::MSDDetector": [{"name": "cv.xfeatures2d_MSDDetector"}], "cv::xfeatures2d::VGG": [{"name": "cv.xfeatures2d_VGG"}], "cv::xfeatures2d::BoostDesc": [{"name": "cv.xfeatures2d_BoostDesc"}], "cv::xfeatures2d::PCTSignatures": [{"name": "cv.xfeatures2d_PCTSignatures"}], "cv::xfeatures2d::PCTSignatures::L0_25": [{"name": "cv.xfeatures2d.PCTSignatures_L0_25", "value": "0"}], "cv::xfeatures2d::PCTSignatures::L0_5": [{"name": "cv.xfeatures2d.PCTSignatures_L0_5", "value": "1"}], "cv::xfeatures2d::PCTSignatures::L1": [{"name": "cv.xfeatures2d.PCTSignatures_L1", "value": "2"}], "cv::xfeatures2d::PCTSignatures::L2": [{"name": "cv.xfeatures2d.PCTSignatures_L2", "value": "3"}], "cv::xfeatures2d::PCTSignatures::L2SQUARED": [{"name": "cv.xfeatures2d.PCTSignatures_L2SQUARED", "value": "4"}], "cv::xfeatures2d::PCTSignatures::L5": [{"name": "cv.xfeatures2d.PCTSignatures_L5", "value": "5"}], "cv::xfeatures2d::PCTSignatures::L_INFINITY": [{"name": "cv.xfeatures2d.PCTSignatures_L_INFINITY", "value": "6"}], "cv::xfeatures2d::PCTSignatures::UNIFORM": [{"name": "cv.xfeatures2d.PCTSignatures_UNIFORM", "value": "0"}], "cv::xfeatures2d::PCTSignatures::REGULAR": [{"name": "cv.xfeatures2d.PCTSignatures_REGULAR", "value": "1"}], "cv::xfeatures2d::PCTSignatures::NORMAL": [{"name": "cv.xfeatures2d.PCTSignatures_NORMAL", "value": "2"}], "cv::xfeatures2d::PCTSignatures::MINUS": [{"name": "cv.xfeatures2d.PCTSignatures_MINUS", "value": "0"}], "cv::xfeatures2d::PCTSignatures::GAUSSIAN": [{"name": "cv.xfeatures2d.PCTSignatures_GAUSSIAN", "value": "1"}], "cv::xfeatures2d::PCTSignatures::HEURISTIC": [{"name": "cv.xfeatures2d.PCTSignatures_HEURISTIC", "value": "2"}], "cv::xfeatures2d::PCTSignaturesSQFD": [{"name": "cv.xfeatures2d_PCTSignaturesSQFD"}], "cv::xfeatures2d::HarrisLaplaceFeatureDetector": [{"name": "cv.xfeatures2d_HarrisLaplaceFeatureDetector"}], "cv::cuda::SURF_CUDA": [{"name": "cv.cuda_SURF_CUDA"}], "cv::cuda::SURF_CUDA::X_ROW": [{"name": "cv.cuda.SURF_CUDA_X_ROW", "value": "0"}], "cv::cuda::SURF_CUDA::Y_ROW": [{"name": "cv.cuda.SURF_CUDA_Y_ROW", "value": "0+1"}], "cv::cuda::SURF_CUDA::LAPLACIAN_ROW": [{"name": "cv.cuda.SURF_CUDA_LAPLACIAN_ROW", "value": "0+2"}], "cv::cuda::SURF_CUDA::OCTAVE_ROW": [{"name": "cv.cuda.SURF_CUDA_OCTAVE_ROW", "value": "0+3"}], "cv::cuda::SURF_CUDA::SIZE_ROW": [{"name": "cv.cuda.SURF_CUDA_SIZE_ROW", "value": "0+4"}], "cv::cuda::SURF_CUDA::ANGLE_ROW": [{"name": "cv.cuda.SURF_CUDA_ANGLE_ROW", "value": "0+5"}], "cv::cuda::SURF_CUDA::HESSIAN_ROW": [{"name": "cv.cuda.SURF_CUDA_HESSIAN_ROW", "value": "0+6"}], "cv::cuda::SURF_CUDA::ROWS_COUNT": [{"name": "cv.cuda.SURF_CUDA_ROWS_COUNT", "value": "0+7"}], "cv::xfeatures2d::SURF": [{"name": "cv.xfeatures2d_SURF"}], "cv::ximgproc::THINNING_ZHANGSUEN": [{"name": "cv.ximgproc.THINNING_ZHANGSUEN", "value": "0"}], "cv::ximgproc::THINNING_GUOHALL": [{"name": "cv.ximgproc.THINNING_GUOHALL", "value": "1"}], "cv::ximgproc::BINARIZATION_NIBLACK": [{"name": "cv.ximgproc.BINARIZATION_NIBLACK", "value": "0"}], "cv::ximgproc::BINARIZATION_SAUVOLA": [{"name": "cv.ximgproc.BINARIZATION_SAUVOLA", "value": "1"}], "cv::ximgproc::BINARIZATION_WOLF": [{"name": "cv.ximgproc.BINARIZATION_WOLF", "value": "2"}], "cv::ximgproc::BINARIZATION_NICK": [{"name": "cv.ximgproc.BINARIZATION_NICK", "value": "3"}], "cv::ximgproc::DisparityFilter": [{"name": "cv.ximgproc_DisparityFilter"}], "cv::ximgproc::DisparityWLSFilter": [{"name": "cv.ximgproc_DisparityWLSFilter"}], "cv::ximgproc::DTF_NC": [{"name": "cv.ximgproc.DTF_NC", "value": "0"}], "cv::ximgproc::DTF_IC": [{"name": "cv.ximgproc.DTF_IC", "value": "1"}], "cv::ximgproc::DTF_RF": [{"name": "cv.ximgproc.DTF_RF", "value": "2"}], "cv::ximgproc::GUIDED_FILTER": [{"name": "cv.ximgproc.GUIDED_FILTER", "value": "3"}], "cv::ximgproc::AM_FILTER": [{"name": "cv.ximgproc.AM_FILTER", "value": "4"}], "cv::ximgproc::DTFilter": [{"name": "cv.ximgproc_DTFilter"}], "cv::ximgproc::GuidedFilter": [{"name": "cv.ximgproc_GuidedFilter"}], "cv::ximgproc::AdaptiveManifoldFilter": [{"name": "cv.ximgproc_AdaptiveManifoldFilter"}], "cv::ximgproc::FastBilateralSolverFilter": [{"name": "cv.ximgproc_FastBilateralSolverFilter"}], "cv::ximgproc::FastGlobalSmootherFilter": [{"name": "cv.ximgproc_FastGlobalSmootherFilter"}], "cv::ximgproc::EdgeBoxes": [{"name": "cv.ximgproc_EdgeBoxes"}], "cv::ximgproc::ARO_0_45": [{"name": "cv.ximgproc.ARO_0_45", "value": "0"}], "cv::ximgproc::ARO_45_90": [{"name": "cv.ximgproc.ARO_45_90", "value": "1"}], "cv::ximgproc::ARO_90_135": [{"name": "cv.ximgproc.ARO_90_135", "value": "2"}], "cv::ximgproc::ARO_315_0": [{"name": "cv.ximgproc.ARO_315_0", "value": "3"}], "cv::ximgproc::ARO_315_45": [{"name": "cv.ximgproc.ARO_315_45", "value": "4"}], "cv::ximgproc::ARO_45_135": [{"name": "cv.ximgproc.ARO_45_135", "value": "5"}], "cv::ximgproc::ARO_315_135": [{"name": "cv.ximgproc.ARO_315_135", "value": "6"}], "cv::ximgproc::ARO_CTR_HOR": [{"name": "cv.ximgproc.ARO_CTR_HOR", "value": "7"}], "cv::ximgproc::ARO_CTR_VER": [{"name": "cv.ximgproc.ARO_CTR_VER", "value": "8"}], "cv::ximgproc::FHT_MIN": [{"name": "cv.ximgproc.FHT_MIN", "value": "0"}], "cv::ximgproc::FHT_MAX": [{"name": "cv.ximgproc.FHT_MAX", "value": "1"}], "cv::ximgproc::FHT_ADD": [{"name": "cv.ximgproc.FHT_ADD", "value": "2"}], "cv::ximgproc::FHT_AVE": [{"name": "cv.ximgproc.FHT_AVE", "value": "3"}], "cv::ximgproc::HDO_RAW": [{"name": "cv.ximgproc.HDO_RAW", "value": "0"}], "cv::ximgproc::HDO_DESKEW": [{"name": "cv.ximgproc.HDO_DESKEW", "value": "1"}], "cv::ximgproc::FastLineDetector": [{"name": "cv.ximgproc_FastLineDetector"}], "cv::ximgproc::ContourFitting": [{"name": "cv.ximgproc_ContourFitting"}], "cv::ximgproc::SuperpixelLSC": [{"name": "cv.ximgproc_SuperpixelLSC"}], "cv::ximgproc::RidgeDetectionFilter": [{"name": "cv.ximgproc_RidgeDetectionFilter"}], "cv::ximgproc::SuperpixelSEEDS": [{"name": "cv.ximgproc_SuperpixelSEEDS"}], "cv::ximgproc::segmentation::GraphSegmentation": [{"name": "cv.ximgproc_segmentation_GraphSegmentation"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategy": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentationStrategy"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategyColor": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentationStrategyColor"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategySize": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentationStrategySize"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategyTexture": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentationStrategyTexture"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategyFill": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentationStrategyFill"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategyMultiple": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentationStrategyMultiple"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentation": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentation"}], "cv::ximgproc::SLIC": [{"name": "cv.ximgproc.SLIC", "value": "100"}], "cv::ximgproc::SLICO": [{"name": "cv.ximgproc.SLICO", "value": "101"}], "cv::ximgproc::MSLIC": [{"name": "cv.ximgproc.MSLIC", "value": "102"}], "cv::ximgproc::SuperpixelSLIC": [{"name": "cv.ximgproc_SuperpixelSLIC"}], "cv::ximgproc::SparseMatchInterpolator": [{"name": "cv.ximgproc_SparseMatchInterpolator"}], "cv::ximgproc::EdgeAwareInterpolator": [{"name": "cv.ximgproc_EdgeAwareInterpolator"}], "cv::ximgproc::RICInterpolator": [{"name": "cv.ximgproc_RICInterpolator"}], "cv::ximgproc::RFFeatureGetter": [{"name": "cv.ximgproc_RFFeatureGetter"}], "cv::ximgproc::StructuredEdgeDetection": [{"name": "cv.ximgproc_StructuredEdgeDetection"}], "cv::ximgproc::WMF_EXP": [{"name": "cv.ximgproc.WMF_EXP", "value": "1"}], "cv::ximgproc::WMF_IV1": [{"name": "cv.ximgproc.WMF_IV1", "value": "1 << 1"}], "cv::ximgproc::WMF_IV2": [{"name": "cv.ximgproc.WMF_IV2", "value": "1 << 2"}], "cv::ximgproc::WMF_COS": [{"name": "cv.ximgproc.WMF_COS", "value": "1 << 3"}], "cv::ximgproc::WMF_JAC": [{"name": "cv.ximgproc.WMF_JAC", "value": "1 << 4"}], "cv::ximgproc::WMF_OFF": [{"name": "cv.ximgproc.WMF_OFF", "value": "1 << 5"}], "cv::aruco::CORNER_REFINE_NONE": [{"name": "cv.aruco.CORNER_REFINE_NONE", "value": "0"}], "cv::aruco::CORNER_REFINE_SUBPIX": [{"name": "cv.aruco.CORNER_REFINE_SUBPIX", "value": "1"}], "cv::aruco::CORNER_REFINE_CONTOUR": [{"name": "cv.aruco.CORNER_REFINE_CONTOUR", "value": "2"}], "cv::aruco::CORNER_REFINE_APRILTAG": [{"name": "cv.aruco.CORNER_REFINE_APRILTAG", "value": "3"}], "cv::aruco::DetectorParameters": [{"name": "cv.aruco_DetectorParameters"}], "cv::aruco::Board": [{"name": "cv.aruco_Board"}], "cv::aruco::GridBoard": [{"name": "cv.aruco_GridBoard"}], "cv::aruco::CharucoBoard": [{"name": "cv.aruco_CharucoBoard"}], "cv::aruco::Dictionary": [{"name": "cv.aruco_Dictionary"}], "cv::aruco::DICT_4X4_50": [{"name": "cv.aruco.DICT_4X4_50", "value": "0"}], "cv::aruco::DICT_4X4_100": [{"name": "cv.aruco.DICT_4X4_100", "value": "0+1"}], "cv::aruco::DICT_4X4_250": [{"name": "cv.aruco.DICT_4X4_250", "value": "0+2"}], "cv::aruco::DICT_4X4_1000": [{"name": "cv.aruco.DICT_4X4_1000", "value": "0+3"}], "cv::aruco::DICT_5X5_50": [{"name": "cv.aruco.DICT_5X5_50", "value": "0+4"}], "cv::aruco::DICT_5X5_100": [{"name": "cv.aruco.DICT_5X5_100", "value": "0+5"}], "cv::aruco::DICT_5X5_250": [{"name": "cv.aruco.DICT_5X5_250", "value": "0+6"}], "cv::aruco::DICT_5X5_1000": [{"name": "cv.aruco.DICT_5X5_1000", "value": "0+7"}], "cv::aruco::DICT_6X6_50": [{"name": "cv.aruco.DICT_6X6_50", "value": "0+8"}], "cv::aruco::DICT_6X6_100": [{"name": "cv.aruco.DICT_6X6_100", "value": "0+9"}], "cv::aruco::DICT_6X6_250": [{"name": "cv.aruco.DICT_6X6_250", "value": "0+10"}], "cv::aruco::DICT_6X6_1000": [{"name": "cv.aruco.DICT_6X6_1000", "value": "0+11"}], "cv::aruco::DICT_7X7_50": [{"name": "cv.aruco.DICT_7X7_50", "value": "0+12"}], "cv::aruco::DICT_7X7_100": [{"name": "cv.aruco.DICT_7X7_100", "value": "0+13"}], "cv::aruco::DICT_7X7_250": [{"name": "cv.aruco.DICT_7X7_250", "value": "0+14"}], "cv::aruco::DICT_7X7_1000": [{"name": "cv.aruco.DICT_7X7_1000", "value": "0+15"}], "cv::aruco::DICT_ARUCO_ORIGINAL": [{"name": "cv.aruco.DICT_ARUCO_ORIGINAL", "value": "0+16"}], "cv::aruco::DICT_APRILTAG_16h5": [{"name": "cv.aruco.DICT_APRILTAG_16h5", "value": "0+17"}], "cv::aruco::DICT_APRILTAG_25h9": [{"name": "cv.aruco.DICT_APRILTAG_25h9", "value": "0+18"}], "cv::aruco::DICT_APRILTAG_36h10": [{"name": "cv.aruco.DICT_APRILTAG_36h10", "value": "0+19"}], "cv::aruco::DICT_APRILTAG_36h11": [{"name": "cv.aruco.DICT_APRILTAG_36h11", "value": "0+20"}], "cv::bgsegm::BackgroundSubtractorMOG": [{"name": "cv.bgsegm_BackgroundSubtractorMOG"}], "cv::bgsegm::BackgroundSubtractorGMG": [{"name": "cv.bgsegm_BackgroundSubtractorGMG"}], "cv::bgsegm::BackgroundSubtractorCNT": [{"name": "cv.bgsegm_BackgroundSubtractorCNT"}], "cv::bgsegm::LSBP_CAMERA_MOTION_COMPENSATION_NONE": [{"name": "cv.bgsegm.LSBP_CAMERA_MOTION_COMPENSATION_NONE", "value": "0"}], "cv::bgsegm::LSBP_CAMERA_MOTION_COMPENSATION_LK": [{"name": "cv.bgsegm.LSBP_CAMERA_MOTION_COMPENSATION_LK", "value": "0+1"}], "cv::bgsegm::BackgroundSubtractorGSOC": [{"name": "cv.bgsegm_BackgroundSubtractorGSOC"}], "cv::bgsegm::BackgroundSubtractorLSBP": [{"name": "cv.bgsegm_BackgroundSubtractorLSBP"}], "cv::bgsegm::BackgroundSubtractorLSBPDesc": [{"name": "cv.bgsegm_BackgroundSubtractorLSBPDesc"}], "cv::bgsegm::SyntheticSequenceGenerator": [{"name": "cv.bgsegm_SyntheticSequenceGenerator"}], "cv::bioinspired::RETINA_COLOR_RANDOM": [{"name": "cv.bioinspired.RETINA_COLOR_RANDOM", "value": "0"}], "cv::bioinspired::RETINA_COLOR_DIAGONAL": [{"name": "cv.bioinspired.RETINA_COLOR_DIAGONAL", "value": "1"}], "cv::bioinspired::RETINA_COLOR_BAYER": [{"name": "cv.bioinspired.RETINA_COLOR_BAYER", "value": "2"}], "cv::bioinspired::Retina": [{"name": "cv.bioinspired_Retina"}], "cv::bioinspired::RetinaFastToneMapping": [{"name": "cv.bioinspired_RetinaFastToneMapping"}], "cv::bioinspired::TransientAreasSegmentationModule": [{"name": "cv.bioinspired_TransientAreasSegmentationModule"}], "cv::multicalib::MultiCameraCalibration::PINHOLE": [{"name": "cv.multicalib.MultiCameraCalibration_PINHOLE", "value": "0"}], "cv::multicalib::MultiCameraCalibration::OMNIDIRECTIONAL": [{"name": "cv.multicalib.MultiCameraCalibration_OMNIDIRECTIONAL", "value": "1"}], "cv::omnidir::CALIB_USE_GUESS": [{"name": "cv.omnidir.CALIB_USE_GUESS", "value": "1"}], "cv::omnidir::CALIB_FIX_SKEW": [{"name": "cv.omnidir.CALIB_FIX_SKEW", "value": "2"}], "cv::omnidir::CALIB_FIX_K1": [{"name": "cv.omnidir.CALIB_FIX_K1", "value": "4"}], "cv::omnidir::CALIB_FIX_K2": [{"name": "cv.omnidir.CALIB_FIX_K2", "value": "8"}], "cv::omnidir::CALIB_FIX_P1": [{"name": "cv.omnidir.CALIB_FIX_P1", "value": "16"}], "cv::omnidir::CALIB_FIX_P2": [{"name": "cv.omnidir.CALIB_FIX_P2", "value": "32"}], "cv::omnidir::CALIB_FIX_XI": [{"name": "cv.omnidir.CALIB_FIX_XI", "value": "64"}], "cv::omnidir::CALIB_FIX_GAMMA": [{"name": "cv.omnidir.CALIB_FIX_GAMMA", "value": "128"}], "cv::omnidir::CALIB_FIX_CENTER": [{"name": "cv.omnidir.CALIB_FIX_CENTER", "value": "256"}], "cv::omnidir::RECTIFY_PERSPECTIVE": [{"name": "cv.omnidir.RECTIFY_PERSPECTIVE", "value": "1"}], "cv::omnidir::RECTIFY_CYLINDRICAL": [{"name": "cv.omnidir.RECTIFY_CYLINDRICAL", "value": "2"}], "cv::omnidir::RECTIFY_LONGLATI": [{"name": "cv.omnidir.RECTIFY_LONGLATI", "value": "3"}], "cv::omnidir::RECTIFY_STEREOGRAPHIC": [{"name": "cv.omnidir.RECTIFY_STEREOGRAPHIC", "value": "4"}], "cv::omnidir::XYZRGB": [{"name": "cv.omnidir.XYZRGB", "value": "1"}], "cv::omnidir::XYZ": [{"name": "cv.omnidir.XYZ", "value": "2"}], "cv::dpm::DPMDetector": [{"name": "cv.dpm_DPMDetector"}], "cv::dpm::DPMDetector::ObjectDetection": [{"name": "cv.dpm_DPMDetector_ObjectDetection"}], "cv::face::FaceRecognizer": [{"name": "cv.face_FaceRecognizer"}], "cv::face::BIF": [{"name": "cv.face_BIF"}], "cv::face::FacemarkKazemi": [{"name": "cv.face_FacemarkKazemi"}], "cv::face::Facemark": [{"name": "cv.face_Facemark"}], "cv::face::FacemarkAAM": [{"name": "cv.face_FacemarkAAM"}], "cv::face::FacemarkLBF": [{"name": "cv.face_FacemarkLBF"}], "cv::face::FacemarkTrain": [{"name": "cv.face_FacemarkTrain"}], "cv::face::BasicFaceRecognizer": [{"name": "cv.face_BasicFaceRecognizer"}], "cv::face::EigenFaceRecognizer": [{"name": "cv.face_EigenFaceRecognizer"}], "cv::face::FisherFaceRecognizer": [{"name": "cv.face_FisherFaceRecognizer"}], "cv::face::LBPHFaceRecognizer": [{"name": "cv.face_LBPHFaceRecognizer"}], "cv::face::MACE": [{"name": "cv.face_MACE"}], "cv::face::PredictCollector": [{"name": "cv.face_PredictCollector"}], "cv::face::StandardCollector": [{"name": "cv.face_StandardCollector"}], "cv::optflow::DualTVL1OpticalFlow": [{"name": "cv.optflow_DualTVL1OpticalFlow"}], "cv::optflow::PCAPrior": [{"name": "cv.optflow_PCAPrior"}], "cv::optflow::OpticalFlowPCAFlow": [{"name": "cv.optflow_OpticalFlowPCAFlow"}], "cv::optflow::SR_FIXED": [{"name": "cv.optflow.SR_FIXED", "value": "0"}], "cv::optflow::SR_CROSS": [{"name": "cv.optflow.SR_CROSS", "value": "1"}], "cv::optflow::ST_STANDART": [{"name": "cv.optflow.ST_STANDART", "value": "0"}], "cv::optflow::ST_BILINEAR": [{"name": "cv.optflow.ST_BILINEAR", "value": "1"}], "cv::optflow::INTERP_GEO": [{"name": "cv.optflow.INTERP_GEO", "value": "0"}], "cv::optflow::INTERP_EPIC": [{"name": "cv.optflow.INTERP_EPIC", "value": "1"}], "cv::optflow::INTERP_RIC": [{"name": "cv.optflow.INTERP_RIC", "value": "2"}], "cv::optflow::RLOFOpticalFlowParameter": [{"name": "cv.optflow_RLOFOpticalFlowParameter"}], "cv::optflow::DenseRLOFOpticalFlow": [{"name": "cv.optflow_DenseRLOFOpticalFlow"}], "cv::optflow::SparseRLOFOpticalFlow": [{"name": "cv.optflow_SparseRLOFOpticalFlow"}], "cv::optflow::GPCPatchDescriptor": [{"name": "cv.optflow_GPCPatchDescriptor"}], "cv::optflow::GPCPatchSample": [{"name": "cv.optflow_GPCPatchSample"}], "cv::optflow::GPC_DESCRIPTOR_DCT": [{"name": "cv.optflow.GPC_DESCRIPTOR_DCT", "value": "0"}], "cv::optflow::GPC_DESCRIPTOR_WHT": [{"name": "cv.optflow.GPC_DESCRIPTOR_WHT", "value": "0+1"}], "cv::optflow::GPCTrainingSamples": [{"name": "cv.optflow_GPCTrainingSamples"}], "cv::optflow::GPCTree": [{"name": "cv.optflow_GPCTree"}], "cv::optflow::GPCDetails": [{"name": "cv.optflow_GPCDetails"}], "cv::Stitcher": [{"name": "cv.Stitcher"}], "cv::Stitcher::OK": [{"name": "cv.Stitcher_OK", "value": "0"}], "cv::Stitcher::ERR_NEED_MORE_IMGS": [{"name": "cv.Stitcher_ERR_NEED_MORE_IMGS", "value": "1"}], "cv::Stitcher::ERR_HOMOGRAPHY_EST_FAIL": [{"name": "cv.Stitcher_ERR_HOMOGRAPHY_EST_FAIL", "value": "2"}], "cv::Stitcher::ERR_CAMERA_PARAMS_ADJUST_FAIL": [{"name": "cv.Stitcher_ERR_CAMERA_PARAMS_ADJUST_FAIL", "value": "3"}], "cv::Stitcher::PANORAMA": [{"name": "cv.Stitcher_PANORAMA", "value": "0"}], "cv::Stitcher::SCANS": [{"name": "cv.Stitcher_SCANS", "value": "1"}], "cv::PyRotationWarper": [{"name": "cv.PyRotationWarper"}], "cv::WarperCreator": [{"name": "cv.WarperCreator"}], "cv::detail::Blender": [{"name": "cv.detail_Blender"}], "cv::detail::Blender::NO": [{"name": "cv.detail.Blender_NO", "value": "0"}], "cv::detail::Blender::FEATHER": [{"name": "cv.detail.Blender_FEATHER", "value": "1"}], "cv::detail::Blender::MULTI_BAND": [{"name": "cv.detail.Blender_MULTI_BAND", "value": "2"}], "cv::detail::FeatherBlender": [{"name": "cv.detail_FeatherBlender"}], "cv::detail::MultiBandBlender": [{"name": "cv.detail_MultiBandBlender"}], "cv::detail::CameraParams": [{"name": "cv.detail_CameraParams"}], "cv::detail::ExposureCompensator": [{"name": "cv.detail_ExposureCompensator"}], "cv::detail::ExposureCompensator::NO": [{"name": "cv.detail.ExposureCompensator_NO", "value": "0"}], "cv::detail::ExposureCompensator::GAIN": [{"name": "cv.detail.ExposureCompensator_GAIN", "value": "1"}], "cv::detail::ExposureCompensator::GAIN_BLOCKS": [{"name": "cv.detail.ExposureCompensator_GAIN_BLOCKS", "value": "2"}], "cv::detail::ExposureCompensator::CHANNELS": [{"name": "cv.detail.ExposureCompensator_CHANNELS", "value": "3"}], "cv::detail::ExposureCompensator::CHANNELS_BLOCKS": [{"name": "cv.detail.ExposureCompensator_CHANNELS_BLOCKS", "value": "4"}], "cv::detail::NoExposureCompensator": [{"name": "cv.detail_NoExposureCompensator"}], "cv::detail::GainCompensator": [{"name": "cv.detail_GainCompensator"}], "cv::detail::ChannelsCompensator": [{"name": "cv.detail_ChannelsCompensator"}], "cv::detail::BlocksCompensator": [{"name": "cv.detail_BlocksCompensator"}], "cv::detail::BlocksGainCompensator": [{"name": "cv.detail_BlocksGainCompensator"}], "cv::detail::BlocksChannelsCompensator": [{"name": "cv.detail_BlocksChannelsCompensator"}], "cv::detail::ImageFeatures": [{"name": "cv.detail_ImageFeatures"}], "cv::detail::MatchesInfo": [{"name": "cv.detail_MatchesInfo"}], "cv::detail::FeaturesMatcher": [{"name": "cv.detail_FeaturesMatcher"}], "cv::detail::BestOf2NearestMatcher": [{"name": "cv.detail_BestOf2NearestMatcher"}], "cv::detail::BestOf2NearestRangeMatcher": [{"name": "cv.detail_BestOf2NearestRangeMatcher"}], "cv::detail::AffineBestOf2NearestMatcher": [{"name": "cv.detail_AffineBestOf2NearestMatcher"}], "cv::detail::Estimator": [{"name": "cv.detail_Estimator"}], "cv::detail::HomographyBasedEstimator": [{"name": "cv.detail_HomographyBasedEstimator"}], "cv::detail::AffineBasedEstimator": [{"name": "cv.detail_AffineBasedEstimator"}], "cv::detail::BundleAdjusterBase": [{"name": "cv.detail_BundleAdjusterBase"}], "cv::detail::NoBundleAdjuster": [{"name": "cv.detail_NoBundleAdjuster"}], "cv::detail::BundleAdjusterReproj": [{"name": "cv.detail_BundleAdjusterReproj"}], "cv::detail::BundleAdjusterRay": [{"name": "cv.detail_BundleAdjusterRay"}], "cv::detail::BundleAdjusterAffine": [{"name": "cv.detail_BundleAdjusterAffine"}], "cv::detail::BundleAdjusterAffinePartial": [{"name": "cv.detail_BundleAdjusterAffinePartial"}], "cv::detail::WAVE_CORRECT_HORIZ": [{"name": "cv.detail.WAVE_CORRECT_HORIZ", "value": "0"}], "cv::detail::WAVE_CORRECT_VERT": [{"name": "cv.detail.WAVE_CORRECT_VERT", "value": "1"}], "cv::detail::SeamFinder": [{"name": "cv.detail_SeamFinder"}], "cv::detail::SeamFinder::NO": [{"name": "cv.detail.SeamFinder_NO", "value": "0"}], "cv::detail::SeamFinder::VORONOI_SEAM": [{"name": "cv.detail.SeamFinder_VORONOI_SEAM", "value": "1"}], "cv::detail::SeamFinder::DP_SEAM": [{"name": "cv.detail.SeamFinder_DP_SEAM", "value": "2"}], "cv::detail::NoSeamFinder": [{"name": "cv.detail_NoSeamFinder"}], "cv::detail::PairwiseSeamFinder": [{"name": "cv.detail_PairwiseSeamFinder"}], "cv::detail::VoronoiSeamFinder": [{"name": "cv.detail_VoronoiSeamFinder"}], "cv::detail::DpSeamFinder": [{"name": "cv.detail_DpSeamFinder"}], "cv::detail::DpSeamFinder::COLOR": [{"name": "cv.detail.DpSeamFinder_COLOR", "value": "0"}], "cv::detail::DpSeamFinder::COLOR_GRAD": [{"name": "cv.detail.DpSeamFinder_COLOR_GRAD", "value": "1"}], "cv::detail::GraphCutSeamFinderBase::COST_COLOR": [{"name": "cv.detail.GraphCutSeamFinderBase_COST_COLOR", "value": "0"}], "cv::detail::GraphCutSeamFinderBase::COST_COLOR_GRAD": [{"name": "cv.detail.GraphCutSeamFinderBase_COST_COLOR_GRAD", "value": "1"}], "cv::detail::GraphCutSeamFinder": [{"name": "cv.detail_GraphCutSeamFinder"}], "cv::detail::Timelapser": [{"name": "cv.detail_Timelapser"}], "cv::detail::Timelapser::AS_IS": [{"name": "cv.detail.Timelapser_AS_IS", "value": "0"}], "cv::detail::Timelapser::CROP": [{"name": "cv.detail.Timelapser_CROP", "value": "1"}], "cv::detail::TimelapserCrop": [{"name": "cv.detail_TimelapserCrop"}], "cv::detail::ProjectorBase": [{"name": "cv.detail_ProjectorBase"}], "cv::detail::SphericalProjector": [{"name": "cv.detail_SphericalProjector"}], "cv::CvFeatureParams::HAAR": [{"name": "cv.CvFeatureParams_HAAR", "value": "0"}], "cv::CvFeatureParams::LBP": [{"name": "cv.CvFeatureParams_LBP", "value": "1"}], "cv::CvFeatureParams::HOG": [{"name": "cv.CvFeatureParams_HOG", "value": "2"}], "cv::Tracker": [{"name": "cv.Tracker"}], "cv::TrackerSamplerCSC::MODE_INIT_POS": [{"name": "cv.TrackerSamplerCSC_MODE_INIT_POS", "value": "1"}], "cv::TrackerSamplerCSC::MODE_INIT_NEG": [{"name": "cv.TrackerSamplerCSC_MODE_INIT_NEG", "value": "2"}], "cv::TrackerSamplerCSC::MODE_TRACK_POS": [{"name": "cv.TrackerSamplerCSC_MODE_TRACK_POS", "value": "3"}], "cv::TrackerSamplerCSC::MODE_TRACK_NEG": [{"name": "cv.TrackerSamplerCSC_MODE_TRACK_NEG", "value": "4"}], "cv::TrackerSamplerCSC::MODE_DETECT": [{"name": "cv.TrackerSamplerCSC_MODE_DETECT", "value": "5"}], "cv::TrackerSamplerCS::MODE_POSITIVE": [{"name": "cv.TrackerSamplerCS_MODE_POSITIVE", "value": "1"}], "cv::TrackerSamplerCS::MODE_NEGATIVE": [{"name": "cv.TrackerSamplerCS_MODE_NEGATIVE", "value": "2"}], "cv::TrackerSamplerCS::MODE_CLASSIFY": [{"name": "cv.TrackerSamplerCS_MODE_CLASSIFY", "value": "3"}], "cv::TrackerMIL": [{"name": "cv.TrackerMIL"}], "cv::TrackerBoosting": [{"name": "cv.TrackerBoosting"}], "cv::TrackerMedianFlow": [{"name": "cv.TrackerMedianFlow"}], "cv::TrackerTLD": [{"name": "cv.TrackerTLD"}], "cv::TrackerKCF": [{"name": "cv.TrackerKCF"}], "cv::TrackerKCF::GRAY": [{"name": "cv.TrackerKCF_GRAY", "value": "(1 << 0)"}], "cv::TrackerKCF::CN": [{"name": "cv.TrackerKCF_CN", "value": "(1 << 1)"}], "cv::TrackerKCF::CUSTOM": [{"name": "cv.TrackerKCF_CUSTOM", "value": "(1 << 2)"}], "cv::TrackerGOTURN": [{"name": "cv.TrackerGOTURN"}], "cv::TrackerMOSSE": [{"name": "cv.TrackerMOSSE"}], "cv::MultiTracker": [{"name": "cv.MultiTracker"}], "cv::TrackerCSRT": [{"name": "cv.TrackerCSRT"}], "cv::AKAZE::create": [{"name": "cv.AKAZE_create", "arg": "[, descriptor_type[, descriptor_size[, descriptor_channels[, threshold[, nOctaves[, nOctaveLayers[, diffusivity]]]]]]]", "ret": "retval"}], "cv::AKAZE::getDefaultName": [{"name": "cv.AKAZE.getDefaultName", "arg": "", "ret": "retval"}], "cv::AKAZE::getDescriptorChannels": [{"name": "cv.AKAZE.getDescriptorChannels", "arg": "", "ret": "retval"}], "cv::AKAZE::getDescriptorSize": [{"name": "cv.AKAZE.getDescriptorSize", "arg": "", "ret": "retval"}], "cv::AKAZE::getDescriptorType": [{"name": "cv.AKAZE.getDescriptorType", "arg": "", "ret": "retval"}], "cv::AKAZE::getDiffusivity": [{"name": "cv.AKAZE.getDiffusivity", "arg": "", "ret": "retval"}], "cv::AKAZE::getNOctaveLayers": [{"name": "cv.AKAZE.getNOctaveLayers", "arg": "", "ret": "retval"}], "cv::AKAZE::getNOctaves": [{"name": "cv.AKAZE.getNOctaves", "arg": "", "ret": "retval"}], "cv::AKAZE::getThreshold": [{"name": "cv.AKAZE.getThreshold", "arg": "", "ret": "retval"}], "cv::AKAZE::setDescriptorChannels": [{"name": "cv.AKAZE.setDescriptorChannels", "arg": "dch", "ret": "None"}], "cv::AKAZE::setDescriptorSize": [{"name": "cv.AKAZE.setDescriptorSize", "arg": "dsize", "ret": "None"}], "cv::AKAZE::setDescriptorType": [{"name": "cv.AKAZE.setDescriptorType", "arg": "dtype", "ret": "None"}], "cv::AKAZE::setDiffusivity": [{"name": "cv.AKAZE.setDiffusivity", "arg": "diff", "ret": "None"}], "cv::AKAZE::setNOctaveLayers": [{"name": "cv.AKAZE.setNOctaveLayers", "arg": "octaveLayers", "ret": "None"}], "cv::AKAZE::setNOctaves": [{"name": "cv.AKAZE.setNOctaves", "arg": "octaves", "ret": "None"}], "cv::AKAZE::setThreshold": [{"name": "cv.AKAZE.setThreshold", "arg": "threshold", "ret": "None"}], "cv::AffineFeature::create": [{"name": "cv.AffineFeature_create", "arg": "backend[, maxTilt[, minTilt[, tiltStep[, rotateStepBase]]]]", "ret": "retval"}], "cv::AffineFeature::getDefaultName": [{"name": "cv.AffineFeature.getDefaultName", "arg": "", "ret": "retval"}], "cv::AffineFeature::getViewParams": [{"name": "cv.AffineFeature.getViewParams", "arg": "tilts, rolls", "ret": "None"}], "cv::AffineFeature::setViewParams": [{"name": "cv.AffineFeature.setViewParams", "arg": "tilts, rolls", "ret": "None"}], "cv::AffineTransformer::getFullAffine": [{"name": "cv.AffineTransformer.getFullAffine", "arg": "", "ret": "retval"}], "cv::AffineTransformer::setFullAffine": [{"name": "cv.AffineTransformer.setFullAffine", "arg": "fullAffine", "ret": "None"}], "cv::AgastFeatureDetector::create": [{"name": "cv.AgastFeatureDetector_create", "arg": "[, threshold[, nonmaxSuppression[, type]]]", "ret": "retval"}], "cv::AgastFeatureDetector::getDefaultName": [{"name": "cv.AgastFeatureDetector.getDefaultName", "arg": "", "ret": "retval"}], "cv::AgastFeatureDetector::getNonmaxSuppression": [{"name": "cv.AgastFeatureDetector.getNonmaxSuppression", "arg": "", "ret": "retval"}], "cv::AgastFeatureDetector::getThreshold": [{"name": "cv.AgastFeatureDetector.getThreshold", "arg": "", "ret": "retval"}], "cv::AgastFeatureDetector::getType": [{"name": "cv.AgastFeatureDetector.getType", "arg": "", "ret": "retval"}], "cv::AgastFeatureDetector::setNonmaxSuppression": [{"name": "cv.AgastFeatureDetector.setNonmaxSuppression", "arg": "f", "ret": "None"}], "cv::AgastFeatureDetector::setThreshold": [{"name": "cv.AgastFeatureDetector.setThreshold", "arg": "threshold", "ret": "None"}], "cv::AgastFeatureDetector::setType": [{"name": "cv.AgastFeatureDetector.setType", "arg": "type", "ret": "None"}], "cv::Algorithm::clear": [{"name": "cv.Algorithm.clear", "arg": "", "ret": "None"}], "cv::Algorithm::empty": [{"name": "cv.Algorithm.empty", "arg": "", "ret": "retval"}], "cv::Algorithm::getDefaultName": [{"name": "cv.Algorithm.getDefaultName", "arg": "", "ret": "retval"}], "cv::Algorithm::read": [{"name": "cv.Algorithm.read", "arg": "fn", "ret": "None"}], "cv::Algorithm::save": [{"name": "cv.Algorithm.save", "arg": "filename", "ret": "None"}], "cv::Algorithm::write": [{"name": "cv.Algorithm.write", "arg": "fs[, name]", "ret": "None"}], "cv::AlignExposures::process": [{"name": "cv.AlignExposures.process", "arg": "src, dst, times, response", "ret": "None"}], "cv::AlignMTB::calculateShift": [{"name": "cv.AlignMTB.calculateShift", "arg": "img0, img1", "ret": "retval"}], "cv::AlignMTB::computeBitmaps": [{"name": "cv.AlignMTB.computeBitmaps", "arg": "img[, tb[, eb]]", "ret": "tb, eb"}], "cv::AlignMTB::getCut": [{"name": "cv.AlignMTB.getCut", "arg": "", "ret": "retval"}], "cv::AlignMTB::getExcludeRange": [{"name": "cv.AlignMTB.getExcludeRange", "arg": "", "ret": "retval"}], "cv::AlignMTB::getMaxBits": [{"name": "cv.AlignMTB.getMaxBits", "arg": "", "ret": "retval"}], "cv::AlignMTB::process": [{"name": "cv.AlignMTB.process", "arg": "src, dst, times, response", "ret": "None"}, {"name": "cv.AlignMTB.process", "arg": "src, dst", "ret": "None"}], "cv::AlignMTB::setCut": [{"name": "cv.AlignMTB.setCut", "arg": "value", "ret": "None"}], "cv::AlignMTB::setExcludeRange": [{"name": "cv.AlignMTB.setExcludeRange", "arg": "exclude_range", "ret": "None"}], "cv::AlignMTB::setMaxBits": [{"name": "cv.AlignMTB.setMaxBits", "arg": "max_bits", "ret": "None"}], "cv::AlignMTB::shiftMat": [{"name": "cv.AlignMTB.shiftMat", "arg": "src, shift[, dst]", "ret": "dst"}], "cv::AsyncArray::AsyncArray": [{"name": "cv.AsyncArray", "arg": "", "ret": "<AsyncArray object>"}], "cv::AsyncArray::get": [{"name": "cv.AsyncArray.get", "arg": "[, dst]", "ret": "dst"}, {"name": "cv.AsyncArray.get", "arg": "timeoutNs[, dst]", "ret": "retval, dst"}], "cv::AsyncArray::release": [{"name": "cv.AsyncArray.release", "arg": "", "ret": "None"}], "cv::AsyncArray::valid": [{"name": "cv.AsyncArray.valid", "arg": "", "ret": "retval"}], "cv::AsyncArray::wait_for": [{"name": "cv.AsyncArray.wait_for", "arg": "timeoutNs", "ret": "retval"}], "cv::BFMatcher::BFMatcher": [{"name": "cv.BFMatcher", "arg": "[, normType[, crossCheck]]", "ret": "<BFMatcher object>"}], "cv::BFMatcher::create": [{"name": "cv.BFMatcher_create", "arg": "[, normType[, crossCheck]]", "ret": "retval"}], "cv::BOWImgDescriptorExtractor::BOWImgDescriptorExtractor": [{"name": "cv.BOWImgDescriptorExtractor", "arg": "dextractor, dmatcher", "ret": "<BOWImgDescriptorExtractor object>"}], "cv::BOWImgDescriptorExtractor::compute2": [{"name": "cv.BOWImgDescriptorExtractor.compute", "arg": "image, keypoints[, imgDescriptor]", "ret": "imgDescriptor"}], "cv::BOWImgDescriptorExtractor::descriptorSize": [{"name": "cv.BOWImgDescriptorExtractor.descriptorSize", "arg": "", "ret": "retval"}], "cv::BOWImgDescriptorExtractor::descriptorType": [{"name": "cv.BOWImgDescriptorExtractor.descriptorType", "arg": "", "ret": "retval"}], "cv::BOWImgDescriptorExtractor::getVocabulary": [{"name": "cv.BOWImgDescriptorExtractor.getVocabulary", "arg": "", "ret": "retval"}], "cv::BOWImgDescriptorExtractor::setVocabulary": [{"name": "cv.BOWImgDescriptorExtractor.setVocabulary", "arg": "vocabulary", "ret": "None"}], "cv::BOWKMeansTrainer::BOWKMeansTrainer": [{"name": "cv.BOWKMeansTrainer", "arg": "clusterCount[, termcrit[, attempts[, flags]]]", "ret": "<BOWKMeansTrainer object>"}], "cv::BOWKMeansTrainer::cluster": [{"name": "cv.BOWKMeansTrainer.cluster", "arg": "", "ret": "retval"}, {"name": "cv.BOWKMeansTrainer.cluster", "arg": "descriptors", "ret": "retval"}], "cv::BOWTrainer::add": [{"name": "cv.BOWTrainer.add", "arg": "descriptors", "ret": "None"}], "cv::BOWTrainer::clear": [{"name": "cv.BOWTrainer.clear", "arg": "", "ret": "None"}], "cv::BOWTrainer::cluster": [{"name": "cv.BOWTrainer.cluster", "arg": "", "ret": "retval"}, {"name": "cv.BOWTrainer.cluster", "arg": "descriptors", "ret": "retval"}], "cv::BOWTrainer::descriptorsCount": [{"name": "cv.BOWTrainer.descriptorsCount", "arg": "", "ret": "retval"}], "cv::BOWTrainer::getDescriptors": [{"name": "cv.BOWTrainer.getDescriptors", "arg": "", "ret": "retval"}], "cv::BRISK::create": [{"name": "cv.BRISK_create", "arg": "[, thresh[, octaves[, patternScale]]]", "ret": "retval"}, {"name": "cv.BRISK_create", "arg": "radiusList, numberList[, dMax[, dMin[, indexChange]]]", "ret": "retval"}, {"name": "cv.BRISK_create", "arg": "thresh, octaves, radiusList, numberList[, dMax[, dMin[, indexChange]]]", "ret": "retval"}], "cv::BRISK::getDefaultName": [{"name": "cv.BRISK.getDefaultName", "arg": "", "ret": "retval"}], "cv::BRISK::getOctaves": [{"name": "cv.BRISK.getOctaves", "arg": "", "ret": "retval"}], "cv::BRISK::getThreshold": [{"name": "cv.BRISK.getThreshold", "arg": "", "ret": "retval"}], "cv::BRISK::setOctaves": [{"name": "cv.BRISK.setOctaves", "arg": "octaves", "ret": "None"}], "cv::BRISK::setThreshold": [{"name": "cv.BRISK.setThreshold", "arg": "threshold", "ret": "None"}], "cv::BackgroundSubtractor::apply": [{"name": "cv.BackgroundSubtractor.apply", "arg": "image[, fgmask[, learningRate]]", "ret": "fgmask"}], "cv::BackgroundSubtractor::getBackgroundImage": [{"name": "cv.BackgroundSubtractor.getBackgroundImage", "arg": "[, backgroundImage]", "ret": "backgroundImage"}], "cv::BackgroundSubtractorKNN::getDetectShadows": [{"name": "cv.BackgroundSubtractorKNN.getDetectShadows", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorKNN::getDist2Threshold": [{"name": "cv.BackgroundSubtractorKNN.getDist2Threshold", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorKNN::getHistory": [{"name": "cv.BackgroundSubtractorKNN.getHistory", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorKNN::getNSamples": [{"name": "cv.BackgroundSubtractorKNN.getNSamples", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorKNN::getShadowThreshold": [{"name": "cv.BackgroundSubtractorKNN.getShadowThreshold", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorKNN::getShadowValue": [{"name": "cv.BackgroundSubtractorKNN.getShadowValue", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorKNN::getkNNSamples": [{"name": "cv.BackgroundSubtractorKNN.getkNNSamples", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorKNN::setDetectShadows": [{"name": "cv.BackgroundSubtractorKNN.setDetectShadows", "arg": "detectShadows", "ret": "None"}], "cv::BackgroundSubtractorKNN::setDist2Threshold": [{"name": "cv.BackgroundSubtractorKNN.setDist2Threshold", "arg": "_dist2Threshold", "ret": "None"}], "cv::BackgroundSubtractorKNN::setHistory": [{"name": "cv.BackgroundSubtractorKNN.setHistory", "arg": "history", "ret": "None"}], "cv::BackgroundSubtractorKNN::setNSamples": [{"name": "cv.BackgroundSubtractorKNN.setNSamples", "arg": "_nN", "ret": "None"}], "cv::BackgroundSubtractorKNN::setShadowThreshold": [{"name": "cv.BackgroundSubtractorKNN.setShadowThreshold", "arg": "threshold", "ret": "None"}], "cv::BackgroundSubtractorKNN::setShadowValue": [{"name": "cv.BackgroundSubtractorKNN.setShadowValue", "arg": "value", "ret": "None"}], "cv::BackgroundSubtractorKNN::setkNNSamples": [{"name": "cv.BackgroundSubtractorKNN.setkNNSamples", "arg": "_nkNN", "ret": "None"}], "cv::BackgroundSubtractorMOG2::apply": [{"name": "cv.BackgroundSubtractorMOG2.apply", "arg": "image[, fgmask[, learningRate]]", "ret": "fgmask"}], "cv::BackgroundSubtractorMOG2::getBackgroundRatio": [{"name": "cv.BackgroundSubtractorMOG2.getBackgroundRatio", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorMOG2::getComplexityReductionThreshold": [{"name": "cv.BackgroundSubtractorMOG2.getComplexityReductionThreshold", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorMOG2::getDetectShadows": [{"name": "cv.BackgroundSubtractorMOG2.getDetectShadows", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorMOG2::getHistory": [{"name": "cv.BackgroundSubtractorMOG2.getHistory", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorMOG2::getNMixtures": [{"name": "cv.BackgroundSubtractorMOG2.getNMixtures", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorMOG2::getShadowThreshold": [{"name": "cv.BackgroundSubtractorMOG2.getShadowThreshold", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorMOG2::getShadowValue": [{"name": "cv.BackgroundSubtractorMOG2.getShadowValue", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorMOG2::getVarInit": [{"name": "cv.BackgroundSubtractorMOG2.getVarInit", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorMOG2::getVarMax": [{"name": "cv.BackgroundSubtractorMOG2.getVarMax", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorMOG2::getVarMin": [{"name": "cv.BackgroundSubtractorMOG2.getVarMin", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorMOG2::getVarThreshold": [{"name": "cv.BackgroundSubtractorMOG2.getVarThreshold", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorMOG2::getVarThresholdGen": [{"name": "cv.BackgroundSubtractorMOG2.getVarThresholdGen", "arg": "", "ret": "retval"}], "cv::BackgroundSubtractorMOG2::setBackgroundRatio": [{"name": "cv.BackgroundSubtractorMOG2.setBackgroundRatio", "arg": "ratio", "ret": "None"}], "cv::BackgroundSubtractorMOG2::setComplexityReductionThreshold": [{"name": "cv.BackgroundSubtractorMOG2.setComplexityReductionThreshold", "arg": "ct", "ret": "None"}], "cv::BackgroundSubtractorMOG2::setDetectShadows": [{"name": "cv.BackgroundSubtractorMOG2.setDetectShadows", "arg": "detectShadows", "ret": "None"}], "cv::BackgroundSubtractorMOG2::setHistory": [{"name": "cv.BackgroundSubtractorMOG2.setHistory", "arg": "history", "ret": "None"}], "cv::BackgroundSubtractorMOG2::setNMixtures": [{"name": "cv.BackgroundSubtractorMOG2.setNMixtures", "arg": "nmixtures", "ret": "None"}], "cv::BackgroundSubtractorMOG2::setShadowThreshold": [{"name": "cv.BackgroundSubtractorMOG2.setShadowThreshold", "arg": "threshold", "ret": "None"}], "cv::BackgroundSubtractorMOG2::setShadowValue": [{"name": "cv.BackgroundSubtractorMOG2.setShadowValue", "arg": "value", "ret": "None"}], "cv::BackgroundSubtractorMOG2::setVarInit": [{"name": "cv.BackgroundSubtractorMOG2.setVarInit", "arg": "varInit", "ret": "None"}], "cv::BackgroundSubtractorMOG2::setVarMax": [{"name": "cv.BackgroundSubtractorMOG2.setVarMax", "arg": "varMax", "ret": "None"}], "cv::BackgroundSubtractorMOG2::setVarMin": [{"name": "cv.BackgroundSubtractorMOG2.setVarMin", "arg": "varMin", "ret": "None"}], "cv::BackgroundSubtractorMOG2::setVarThreshold": [{"name": "cv.BackgroundSubtractorMOG2.setVarThreshold", "arg": "varThreshold", "ret": "None"}], "cv::BackgroundSubtractorMOG2::setVarThresholdGen": [{"name": "cv.BackgroundSubtractorMOG2.setVarThresholdGen", "arg": "varThresholdGen", "ret": "None"}], "cv::CLAHE::apply": [{"name": "cv.CLAHE.apply", "arg": "src[, dst]", "ret": "dst"}], "cv::CLAHE::collectGarbage": [{"name": "cv.CLAHE.collectGarbage", "arg": "", "ret": "None"}], "cv::CLAHE::getClipLimit": [{"name": "cv.CLAHE.getClipLimit", "arg": "", "ret": "retval"}], "cv::CLAHE::getTilesGridSize": [{"name": "cv.CLAHE.getTilesGridSize", "arg": "", "ret": "retval"}], "cv::CLAHE::setClipLimit": [{"name": "cv.CLAHE.setClipLimit", "arg": "clipLimit", "ret": "None"}], "cv::CLAHE::setTilesGridSize": [{"name": "cv.CLAHE.setTilesGridSize", "arg": "tileGridSize", "ret": "None"}], "cv::CalibrateCRF::process": [{"name": "cv.CalibrateCRF.process", "arg": "src, times[, dst]", "ret": "dst"}], "cv::CalibrateDebevec::getLambda": [{"name": "cv.CalibrateDebevec.getLambda", "arg": "", "ret": "retval"}], "cv::CalibrateDebevec::getRandom": [{"name": "cv.CalibrateDebevec.getRandom", "arg": "", "ret": "retval"}], "cv::CalibrateDebevec::getSamples": [{"name": "cv.CalibrateDebevec.getSamples", "arg": "", "ret": "retval"}], "cv::CalibrateDebevec::setLambda": [{"name": "cv.CalibrateDebevec.setLambda", "arg": "lambda", "ret": "None"}], "cv::CalibrateDebevec::setRandom": [{"name": "cv.CalibrateDebevec.setRandom", "arg": "random", "ret": "None"}], "cv::CalibrateDebevec::setSamples": [{"name": "cv.CalibrateDebevec.setSamples", "arg": "samples", "ret": "None"}], "cv::CalibrateRobertson::getMaxIter": [{"name": "cv.CalibrateRobertson.getMaxIter", "arg": "", "ret": "retval"}], "cv::CalibrateRobertson::getRadiance": [{"name": "cv.CalibrateRobertson.getRadiance", "arg": "", "ret": "retval"}], "cv::CalibrateRobertson::getThreshold": [{"name": "cv.CalibrateRobertson.getThreshold", "arg": "", "ret": "retval"}], "cv::CalibrateRobertson::setMaxIter": [{"name": "cv.CalibrateRobertson.setMaxIter", "arg": "max_iter", "ret": "None"}], "cv::CalibrateRobertson::setThreshold": [{"name": "cv.CalibrateRobertson.setThreshold", "arg": "threshold", "ret": "None"}], "cv::CascadeClassifier::CascadeClassifier": [{"name": "cv.CascadeClassifier", "arg": "", "ret": "<CascadeClassifier object>"}, {"name": "cv.CascadeClassifier", "arg": "filename", "ret": "<CascadeClassifier object>"}], "cv::CascadeClassifier::convert": [{"name": "cv.CascadeClassifier_convert", "arg": "oldcascade, newcascade", "ret": "retval"}], "cv::CascadeClassifier::detectMultiScale": [{"name": "cv.CascadeClassifier.detectMultiScale", "arg": "image[, scaleFactor[, minNeighbors[, flags[, minSize[, maxSize]]]]]", "ret": "objects"}, {"name": "cv.CascadeClassifier.detectMultiScale2", "arg": "image[, scaleFactor[, minNeighbors[, flags[, minSize[, maxSize]]]]]", "ret": "objects, numDetections"}, {"name": "cv.CascadeClassifier.detectMultiScale3", "arg": "image[, scaleFactor[, minNeighbors[, flags[, minSize[, maxSize[, outputRejectLevels]]]]]]", "ret": "objects, rejectLevels, levelWeights"}], "cv::CascadeClassifier::empty": [{"name": "cv.CascadeClassifier.empty", "arg": "", "ret": "retval"}], "cv::CascadeClassifier::getFeatureType": [{"name": "cv.CascadeClassifier.getFeatureType", "arg": "", "ret": "retval"}], "cv::CascadeClassifier::getOriginalWindowSize": [{"name": "cv.CascadeClassifier.getOriginalWindowSize", "arg": "", "ret": "retval"}], "cv::CascadeClassifier::isOldFormatCascade": [{"name": "cv.CascadeClassifier.isOldFormatCascade", "arg": "", "ret": "retval"}], "cv::CascadeClassifier::load": [{"name": "cv.CascadeClassifier.load", "arg": "filename", "ret": "retval"}], "cv::CascadeClassifier::read": [{"name": "cv.CascadeClassifier.read", "arg": "node", "ret": "retval"}], "cv::CirclesGridFinderParameters::CirclesGridFinderParameters": [{"name": "cv.CirclesGridFinderParameters", "arg": "", "ret": "<CirclesGridFinderParameters object>"}], "cv::DISOpticalFlow::create": [{"name": "cv.DISOpticalFlow_create", "arg": "[, preset]", "ret": "retval"}], "cv::DISOpticalFlow::getFinestScale": [{"name": "cv.DISOpticalFlow.getFinestScale", "arg": "", "ret": "retval"}], "cv::DISOpticalFlow::getGradientDescentIterations": [{"name": "cv.DISOpticalFlow.getGradientDescentIterations", "arg": "", "ret": "retval"}], "cv::DISOpticalFlow::getPatchSize": [{"name": "cv.DISOpticalFlow.getPatchSize", "arg": "", "ret": "retval"}], "cv::DISOpticalFlow::getPatchStride": [{"name": "cv.DISOpticalFlow.getPatchStride", "arg": "", "ret": "retval"}], "cv::DISOpticalFlow::getUseMeanNormalization": [{"name": "cv.DISOpticalFlow.getUseMeanNormalization", "arg": "", "ret": "retval"}], "cv::DISOpticalFlow::getUseSpatialPropagation": [{"name": "cv.DISOpticalFlow.getUseSpatialPropagation", "arg": "", "ret": "retval"}], "cv::DISOpticalFlow::getVariationalRefinementAlpha": [{"name": "cv.DISOpticalFlow.getVariationalRefinementAlpha", "arg": "", "ret": "retval"}], "cv::DISOpticalFlow::getVariationalRefinementDelta": [{"name": "cv.DISOpticalFlow.getVariationalRefinementDelta", "arg": "", "ret": "retval"}], "cv::DISOpticalFlow::getVariationalRefinementGamma": [{"name": "cv.DISOpticalFlow.getVariationalRefinementGamma", "arg": "", "ret": "retval"}], "cv::DISOpticalFlow::getVariationalRefinementIterations": [{"name": "cv.DISOpticalFlow.getVariationalRefinementIterations", "arg": "", "ret": "retval"}], "cv::DISOpticalFlow::setFinestScale": [{"name": "cv.DISOpticalFlow.setFinestScale", "arg": "val", "ret": "None"}], "cv::DISOpticalFlow::setGradientDescentIterations": [{"name": "cv.DISOpticalFlow.setGradientDescentIterations", "arg": "val", "ret": "None"}], "cv::DISOpticalFlow::setPatchSize": [{"name": "cv.DISOpticalFlow.setPatchSize", "arg": "val", "ret": "None"}], "cv::DISOpticalFlow::setPatchStride": [{"name": "cv.DISOpticalFlow.setPatchStride", "arg": "val", "ret": "None"}], "cv::DISOpticalFlow::setUseMeanNormalization": [{"name": "cv.DISOpticalFlow.setUseMeanNormalization", "arg": "val", "ret": "None"}], "cv::DISOpticalFlow::setUseSpatialPropagation": [{"name": "cv.DISOpticalFlow.setUseSpatialPropagation", "arg": "val", "ret": "None"}], "cv::DISOpticalFlow::setVariationalRefinementAlpha": [{"name": "cv.DISOpticalFlow.setVariationalRefinementAlpha", "arg": "val", "ret": "None"}], "cv::DISOpticalFlow::setVariationalRefinementDelta": [{"name": "cv.DISOpticalFlow.setVariationalRefinementDelta", "arg": "val", "ret": "None"}], "cv::DISOpticalFlow::setVariationalRefinementGamma": [{"name": "cv.DISOpticalFlow.setVariationalRefinementGamma", "arg": "val", "ret": "None"}], "cv::DISOpticalFlow::setVariationalRefinementIterations": [{"name": "cv.DISOpticalFlow.setVariationalRefinementIterations", "arg": "val", "ret": "None"}], "cv::DMatch::DMatch": [{"name": "cv.DMatch", "arg": "", "ret": "<DMatch object>"}, {"name": "cv.DMatch", "arg": "_queryIdx, _trainIdx, _distance", "ret": "<DMatch object>"}, {"name": "cv.DMatch", "arg": "_queryIdx, _trainIdx, _imgIdx, _distance", "ret": "<DMatch object>"}], "cv::DenseOpticalFlow::calc": [{"name": "cv.DenseOpticalFlow.calc", "arg": "I0, I1, flow", "ret": "flow"}], "cv::DenseOpticalFlow::collectGarbage": [{"name": "cv.DenseOpticalFlow.collectGarbage", "arg": "", "ret": "None"}], "cv::DescriptorMatcher::add": [{"name": "cv.DescriptorMatcher.add", "arg": "descriptors", "ret": "None"}], "cv::DescriptorMatcher::clear": [{"name": "cv.DescriptorMatcher.clear", "arg": "", "ret": "None"}], "cv::DescriptorMatcher::clone": [{"name": "cv.DescriptorMatcher.clone", "arg": "[, emptyTrainData]", "ret": "retval"}], "cv::DescriptorMatcher::create": [{"name": "cv.DescriptorMatcher_create", "arg": "descriptorMatcherType", "ret": "retval"}, {"name": "cv.DescriptorMatcher_create", "arg": "matcherType", "ret": "retval"}], "cv::DescriptorMatcher::empty": [{"name": "cv.DescriptorMatcher.empty", "arg": "", "ret": "retval"}], "cv::DescriptorMatcher::getTrainDescriptors": [{"name": "cv.DescriptorMatcher.getTrainDescriptors", "arg": "", "ret": "retval"}], "cv::DescriptorMatcher::isMaskSupported": [{"name": "cv.DescriptorMatcher.isMaskSupported", "arg": "", "ret": "retval"}], "cv::DescriptorMatcher::knnMatch": [{"name": "cv.DescriptorMatcher.knnMatch", "arg": "queryDescriptors, trainDescriptors, k[, mask[, compactResult]]", "ret": "matches"}, {"name": "cv.DescriptorMatcher.knnMatch", "arg": "queryDescriptors, k[, masks[, compactResult]]", "ret": "matches"}], "cv::DescriptorMatcher::match": [{"name": "cv.DescriptorMatcher.match", "arg": "queryDescriptors, trainDescriptors[, mask]", "ret": "matches"}, {"name": "cv.DescriptorMatcher.match", "arg": "queryDescriptors[, masks]", "ret": "matches"}], "cv::DescriptorMatcher::radiusMatch": [{"name": "cv.DescriptorMatcher.radiusMatch", "arg": "queryDescriptors, trainDescriptors, maxDistance[, mask[, compactResult]]", "ret": "matches"}, {"name": "cv.DescriptorMatcher.radiusMatch", "arg": "queryDescriptors, maxDistance[, masks[, compactResult]]", "ret": "matches"}], "cv::DescriptorMatcher::read": [{"name": "cv.DescriptorMatcher.read", "arg": "fileName", "ret": "None"}, {"name": "cv.DescriptorMatcher.read", "arg": "arg1", "ret": "None"}], "cv::DescriptorMatcher::train": [{"name": "cv.DescriptorMatcher.train", "arg": "", "ret": "None"}], "cv::DescriptorMatcher::write": [{"name": "cv.DescriptorMatcher.write", "arg": "fileName", "ret": "None"}, {"name": "cv.DescriptorMatcher.write", "arg": "fs[, name]", "ret": "None"}], "cv::EMDHistogramCostExtractor::getNormFlag": [{"name": "cv.EMDHistogramCostExtractor.getNormFlag", "arg": "", "ret": "retval"}], "cv::EMDHistogramCostExtractor::setNormFlag": [{"name": "cv.EMDHistogramCostExtractor.setNormFlag", "arg": "flag", "ret": "None"}], "cv::FarnebackOpticalFlow::create": [{"name": "cv.FarnebackOpticalFlow_create", "arg": "[, numLevels[, pyrScale[, fastPyramids[, winSize[, numIters[, polyN[, polySigma[, flags]]]]]]]]", "ret": "retval"}], "cv::FarnebackOpticalFlow::getFastPyramids": [{"name": "cv.FarnebackOpticalFlow.getFastPyramids", "arg": "", "ret": "retval"}], "cv::FarnebackOpticalFlow::getFlags": [{"name": "cv.FarnebackOpticalFlow.getFlags", "arg": "", "ret": "retval"}], "cv::FarnebackOpticalFlow::getNumIters": [{"name": "cv.FarnebackOpticalFlow.getNumIters", "arg": "", "ret": "retval"}], "cv::FarnebackOpticalFlow::getNumLevels": [{"name": "cv.FarnebackOpticalFlow.getNumLevels", "arg": "", "ret": "retval"}], "cv::FarnebackOpticalFlow::getPolyN": [{"name": "cv.FarnebackOpticalFlow.getPolyN", "arg": "", "ret": "retval"}], "cv::FarnebackOpticalFlow::getPolySigma": [{"name": "cv.FarnebackOpticalFlow.getPolySigma", "arg": "", "ret": "retval"}], "cv::FarnebackOpticalFlow::getPyrScale": [{"name": "cv.FarnebackOpticalFlow.getPyrScale", "arg": "", "ret": "retval"}], "cv::FarnebackOpticalFlow::getWinSize": [{"name": "cv.FarnebackOpticalFlow.getWinSize", "arg": "", "ret": "retval"}], "cv::FarnebackOpticalFlow::setFastPyramids": [{"name": "cv.FarnebackOpticalFlow.setFastPyramids", "arg": "fastPyramids", "ret": "None"}], "cv::FarnebackOpticalFlow::setFlags": [{"name": "cv.FarnebackOpticalFlow.setFlags", "arg": "flags", "ret": "None"}], "cv::FarnebackOpticalFlow::setNumIters": [{"name": "cv.FarnebackOpticalFlow.setNumIters", "arg": "numIters", "ret": "None"}], "cv::FarnebackOpticalFlow::setNumLevels": [{"name": "cv.FarnebackOpticalFlow.setNumLevels", "arg": "numLevels", "ret": "None"}], "cv::FarnebackOpticalFlow::setPolyN": [{"name": "cv.FarnebackOpticalFlow.setPolyN", "arg": "polyN", "ret": "None"}], "cv::FarnebackOpticalFlow::setPolySigma": [{"name": "cv.FarnebackOpticalFlow.setPolySigma", "arg": "polySigma", "ret": "None"}], "cv::FarnebackOpticalFlow::setPyrScale": [{"name": "cv.FarnebackOpticalFlow.setPyrScale", "arg": "pyrScale", "ret": "None"}], "cv::FarnebackOpticalFlow::setWinSize": [{"name": "cv.FarnebackOpticalFlow.setWinSize", "arg": "winSize", "ret": "None"}], "cv::FastFeatureDetector::create": [{"name": "cv.FastFeatureDetector_create", "arg": "[, threshold[, nonmaxSuppression[, type]]]", "ret": "retval"}], "cv::FastFeatureDetector::getDefaultName": [{"name": "cv.FastFeatureDetector.getDefaultName", "arg": "", "ret": "retval"}], "cv::FastFeatureDetector::getNonmaxSuppression": [{"name": "cv.FastFeatureDetector.getNonmaxSuppression", "arg": "", "ret": "retval"}], "cv::FastFeatureDetector::getThreshold": [{"name": "cv.FastFeatureDetector.getThreshold", "arg": "", "ret": "retval"}], "cv::FastFeatureDetector::getType": [{"name": "cv.FastFeatureDetector.getType", "arg": "", "ret": "retval"}], "cv::FastFeatureDetector::setNonmaxSuppression": [{"name": "cv.FastFeatureDetector.setNonmaxSuppression", "arg": "f", "ret": "None"}], "cv::FastFeatureDetector::setThreshold": [{"name": "cv.FastFeatureDetector.setThreshold", "arg": "threshold", "ret": "None"}], "cv::FastFeatureDetector::setType": [{"name": "cv.FastFeatureDetector.setType", "arg": "type", "ret": "None"}], "cv::Feature2D::compute": [{"name": "cv.Feature2D.compute", "arg": "image, keypoints[, descriptors]", "ret": "keypoints, descriptors"}, {"name": "cv.Feature2D.compute", "arg": "images, keypoints[, descriptors]", "ret": "keypoints, descriptors"}], "cv::Feature2D::defaultNorm": [{"name": "cv.Feature2D.defaultNorm", "arg": "", "ret": "retval"}], "cv::Feature2D::descriptorSize": [{"name": "cv.Feature2D.descriptorSize", "arg": "", "ret": "retval"}], "cv::Feature2D::descriptorType": [{"name": "cv.Feature2D.descriptorType", "arg": "", "ret": "retval"}], "cv::Feature2D::detect": [{"name": "cv.Feature2D.detect", "arg": "image[, mask]", "ret": "keypoints"}, {"name": "cv.Feature2D.detect", "arg": "images[, masks]", "ret": "keypoints"}], "cv::Feature2D::detectAndCompute": [{"name": "cv.Feature2D.detectAndCompute", "arg": "image, mask[, descriptors[, useProvidedKeypoints]]", "ret": "keypoints, descriptors"}], "cv::Feature2D::empty": [{"name": "cv.Feature2D.empty", "arg": "", "ret": "retval"}], "cv::Feature2D::getDefaultName": [{"name": "cv.Feature2D.getDefaultName", "arg": "", "ret": "retval"}], "cv::Feature2D::read": [{"name": "cv.Feature2D.read", "arg": "fileName", "ret": "None"}, {"name": "cv.Feature2D.read", "arg": "arg1", "ret": "None"}], "cv::Feature2D::write": [{"name": "cv.Feature2D.write", "arg": "fileName", "ret": "None"}, {"name": "cv.Feature2D.write", "arg": "fs[, name]", "ret": "None"}], "cv::FileNode::FileNode": [{"name": "cv.FileNode", "arg": "", "ret": "<FileNode object>"}], "cv::FileNode::operator[]": [{"name": "cv.FileNode.at", "arg": "i", "ret": "retval"}, {"name": "cv.FileNode.getNode", "arg": "nodename", "ret": "retval"}], "cv::FileNode::empty": [{"name": "cv.FileNode.empty", "arg": "", "ret": "retval"}], "cv::FileNode::isInt": [{"name": "cv.FileNode.isInt", "arg": "", "ret": "retval"}], "cv::FileNode::isMap": [{"name": "cv.FileNode.isMap", "arg": "", "ret": "retval"}], "cv::FileNode::isNamed": [{"name": "cv.FileNode.isNamed", "arg": "", "ret": "retval"}], "cv::FileNode::isNone": [{"name": "cv.FileNode.isNone", "arg": "", "ret": "retval"}], "cv::FileNode::isReal": [{"name": "cv.FileNode.isReal", "arg": "", "ret": "retval"}], "cv::FileNode::isSeq": [{"name": "cv.FileNode.isSeq", "arg": "", "ret": "retval"}], "cv::FileNode::isString": [{"name": "cv.FileNode.isString", "arg": "", "ret": "retval"}], "cv::FileNode::keys": [{"name": "cv.FileNode.keys", "arg": "", "ret": "retval"}], "cv::FileNode::mat": [{"name": "cv.FileNode.mat", "arg": "", "ret": "retval"}], "cv::FileNode::name": [{"name": "cv.FileNode.name", "arg": "", "ret": "retval"}], "cv::FileNode::rawSize": [{"name": "cv.FileNode.rawSize", "arg": "", "ret": "retval"}], "cv::FileNode::real": [{"name": "cv.FileNode.real", "arg": "", "ret": "retval"}], "cv::FileNode::size": [{"name": "cv.FileNode.size", "arg": "", "ret": "retval"}], "cv::FileNode::string": [{"name": "cv.FileNode.string", "arg": "", "ret": "retval"}], "cv::FileNode::type": [{"name": "cv.FileNode.type", "arg": "", "ret": "retval"}], "cv::FileStorage::FileStorage": [{"name": "cv.FileStorage", "arg": "", "ret": "<FileStorage object>"}, {"name": "cv.FileStorage", "arg": "filename, flags[, encoding]", "ret": "<FileStorage object>"}], "cv::FileStorage::endWriteStruct": [{"name": "cv.FileStorage.endWriteStruct", "arg": "", "ret": "None"}], "cv::FileStorage::getFirstTopLevelNode": [{"name": "cv.FileStorage.getFirstTopLevelNode", "arg": "", "ret": "retval"}], "cv::FileStorage::getFormat": [{"name": "cv.FileStorage.getFormat", "arg": "", "ret": "retval"}], "cv::FileStorage::operator[]": [{"name": "cv.FileStorage.getNode", "arg": "nodename", "ret": "retval"}], "cv::FileStorage::isOpened": [{"name": "cv.FileStorage.isOpened", "arg": "", "ret": "retval"}], "cv::FileStorage::open": [{"name": "cv.FileStorage.open", "arg": "filename, flags[, encoding]", "ret": "retval"}], "cv::FileStorage::release": [{"name": "cv.FileStorage.release", "arg": "", "ret": "None"}], "cv::FileStorage::releaseAndGetString": [{"name": "cv.FileStorage.releaseAndGetString", "arg": "", "ret": "retval"}], "cv::FileStorage::root": [{"name": "cv.FileStorage.root", "arg": "[, streamidx]", "ret": "retval"}], "cv::FileStorage::startWriteStruct": [{"name": "cv.FileStorage.startWriteStruct", "arg": "name, flags[, typeName]", "ret": "None"}], "cv::FileStorage::write": [{"name": "cv.FileStorage.write", "arg": "name, val", "ret": "None"}], "cv::FileStorage::writeComment": [{"name": "cv.FileStorage.writeComment", "arg": "comment[, append]", "ret": "None"}], "cv::FlannBasedMatcher::FlannBasedMatcher": [{"name": "cv.FlannBasedMatcher", "arg": "[, indexParams[, searchParams]]", "ret": "<FlannBasedMatcher object>"}], "cv::FlannBasedMatcher::create": [{"name": "cv.FlannBasedMatcher_create", "arg": "", "ret": "retval"}], "cv::GFTTDetector::create": [{"name": "cv.GFTTDetector_create", "arg": "[, maxCorners[, qualityLevel[, minDistance[, blockSize[, useHarrisDetector[, k]]]]]]", "ret": "retval"}, {"name": "cv.GFTTDetector_create", "arg": "maxCorners, qualityLevel, minDistance, blockSize, gradiantSize[, useHarrisDetector[, k]]", "ret": "retval"}], "cv::GFTTDetector::getBlockSize": [{"name": "cv.GFTTDetector.getBlockSize", "arg": "", "ret": "retval"}], "cv::GFTTDetector::getDefaultName": [{"name": "cv.GFTTDetector.getDefaultName", "arg": "", "ret": "retval"}], "cv::GFTTDetector::getHarrisDetector": [{"name": "cv.GFTTDetector.getHarrisDetector", "arg": "", "ret": "retval"}], "cv::GFTTDetector::getK": [{"name": "cv.GFTTDetector.getK", "arg": "", "ret": "retval"}], "cv::GFTTDetector::getMaxFeatures": [{"name": "cv.GFTTDetector.getMaxFeatures", "arg": "", "ret": "retval"}], "cv::GFTTDetector::getMinDistance": [{"name": "cv.GFTTDetector.getMinDistance", "arg": "", "ret": "retval"}], "cv::GFTTDetector::getQualityLevel": [{"name": "cv.GFTTDetector.getQualityLevel", "arg": "", "ret": "retval"}], "cv::GFTTDetector::setBlockSize": [{"name": "cv.GFTTDetector.setBlockSize", "arg": "blockSize", "ret": "None"}], "cv::GFTTDetector::setHarrisDetector": [{"name": "cv.GFTTDetector.setHarrisDetector", "arg": "val", "ret": "None"}], "cv::GFTTDetector::setK": [{"name": "cv.GFTTDetector.setK", "arg": "k", "ret": "None"}], "cv::GFTTDetector::setMaxFeatures": [{"name": "cv.GFTTDetector.setMaxFeatures", "arg": "maxFeatures", "ret": "None"}], "cv::GFTTDetector::setMinDistance": [{"name": "cv.GFTTDetector.setMinDistance", "arg": "minDistance", "ret": "None"}], "cv::GFTTDetector::setQualityLevel": [{"name": "cv.GFTTDetector.setQualityLevel", "arg": "qlevel", "ret": "None"}], "cv::GeneralizedHough::detect": [{"name": "cv.GeneralizedHough.detect", "arg": "image[, positions[, votes]]", "ret": "positions, votes"}, {"name": "cv.GeneralizedHough.detect", "arg": "edges, dx, dy[, positions[, votes]]", "ret": "positions, votes"}], "cv::GeneralizedHough::getCannyHighThresh": [{"name": "cv.GeneralizedHough.getCannyHighThresh", "arg": "", "ret": "retval"}], "cv::GeneralizedHough::getCannyLowThresh": [{"name": "cv.GeneralizedHough.getCannyLowThresh", "arg": "", "ret": "retval"}], "cv::GeneralizedHough::getDp": [{"name": "cv.GeneralizedHough.getDp", "arg": "", "ret": "retval"}], "cv::GeneralizedHough::getMaxBufferSize": [{"name": "cv.GeneralizedHough.getMaxBufferSize", "arg": "", "ret": "retval"}], "cv::GeneralizedHough::getMinDist": [{"name": "cv.GeneralizedHough.getMinDist", "arg": "", "ret": "retval"}], "cv::GeneralizedHough::setCannyHighThresh": [{"name": "cv.GeneralizedHough.setCannyHighThresh", "arg": "cannyHighThresh", "ret": "None"}], "cv::GeneralizedHough::setCannyLowThresh": [{"name": "cv.GeneralizedHough.setCannyLowThresh", "arg": "cannyLowThresh", "ret": "None"}], "cv::GeneralizedHough::setDp": [{"name": "cv.GeneralizedHough.setDp", "arg": "dp", "ret": "None"}], "cv::GeneralizedHough::setMaxBufferSize": [{"name": "cv.GeneralizedHough.setMaxBufferSize", "arg": "maxBufferSize", "ret": "None"}], "cv::GeneralizedHough::setMinDist": [{"name": "cv.GeneralizedHough.setMinDist", "arg": "minDist", "ret": "None"}], "cv::GeneralizedHough::setTemplate": [{"name": "cv.GeneralizedHough.setTemplate", "arg": "templ[, templCenter]", "ret": "None"}, {"name": "cv.GeneralizedHough.setTemplate", "arg": "edges, dx, dy[, templCenter]", "ret": "None"}], "cv::GeneralizedHoughBallard::getLevels": [{"name": "cv.GeneralizedHoughBallard.getLevels", "arg": "", "ret": "retval"}], "cv::GeneralizedHoughBallard::getVotesThreshold": [{"name": "cv.GeneralizedHoughBallard.getVotesThreshold", "arg": "", "ret": "retval"}], "cv::GeneralizedHoughBallard::setLevels": [{"name": "cv.GeneralizedHoughBallard.setLevels", "arg": "levels", "ret": "None"}], "cv::GeneralizedHoughBallard::setVotesThreshold": [{"name": "cv.GeneralizedHoughBallard.setVotesThreshold", "arg": "votesThreshold", "ret": "None"}], "cv::GeneralizedHoughGuil::getAngleEpsilon": [{"name": "cv.GeneralizedHoughGuil.getAngleEpsilon", "arg": "", "ret": "retval"}], "cv::GeneralizedHoughGuil::getAngleStep": [{"name": "cv.GeneralizedHoughGuil.getAngleStep", "arg": "", "ret": "retval"}], "cv::GeneralizedHoughGuil::getAngleThresh": [{"name": "cv.GeneralizedHoughGuil.getAngleThresh", "arg": "", "ret": "retval"}], "cv::GeneralizedHoughGuil::getLevels": [{"name": "cv.GeneralizedHoughGuil.getLevels", "arg": "", "ret": "retval"}], "cv::GeneralizedHoughGuil::getMaxAngle": [{"name": "cv.GeneralizedHoughGuil.getMaxAngle", "arg": "", "ret": "retval"}], "cv::GeneralizedHoughGuil::getMaxScale": [{"name": "cv.GeneralizedHoughGuil.getMaxScale", "arg": "", "ret": "retval"}], "cv::GeneralizedHoughGuil::getMinAngle": [{"name": "cv.GeneralizedHoughGuil.getMinAngle", "arg": "", "ret": "retval"}], "cv::GeneralizedHoughGuil::getMinScale": [{"name": "cv.GeneralizedHoughGuil.getMinScale", "arg": "", "ret": "retval"}], "cv::GeneralizedHoughGuil::getPosThresh": [{"name": "cv.GeneralizedHoughGuil.getPosThresh", "arg": "", "ret": "retval"}], "cv::GeneralizedHoughGuil::getScaleStep": [{"name": "cv.GeneralizedHoughGuil.getScaleStep", "arg": "", "ret": "retval"}], "cv::GeneralizedHoughGuil::getScaleThresh": [{"name": "cv.GeneralizedHoughGuil.getScaleThresh", "arg": "", "ret": "retval"}], "cv::GeneralizedHoughGuil::getXi": [{"name": "cv.GeneralizedHoughGuil.getXi", "arg": "", "ret": "retval"}], "cv::GeneralizedHoughGuil::setAngleEpsilon": [{"name": "cv.GeneralizedHoughGuil.setAngleEpsilon", "arg": "angleEpsilon", "ret": "None"}], "cv::GeneralizedHoughGuil::setAngleStep": [{"name": "cv.GeneralizedHoughGuil.setAngleStep", "arg": "angleStep", "ret": "None"}], "cv::GeneralizedHoughGuil::setAngleThresh": [{"name": "cv.GeneralizedHoughGuil.setAngleThresh", "arg": "angleThresh", "ret": "None"}], "cv::GeneralizedHoughGuil::setLevels": [{"name": "cv.GeneralizedHoughGuil.setLevels", "arg": "levels", "ret": "None"}], "cv::GeneralizedHoughGuil::setMaxAngle": [{"name": "cv.GeneralizedHoughGuil.setMaxAngle", "arg": "maxAngle", "ret": "None"}], "cv::GeneralizedHoughGuil::setMaxScale": [{"name": "cv.GeneralizedHoughGuil.setMaxScale", "arg": "maxScale", "ret": "None"}], "cv::GeneralizedHoughGuil::setMinAngle": [{"name": "cv.GeneralizedHoughGuil.setMinAngle", "arg": "minAngle", "ret": "None"}], "cv::GeneralizedHoughGuil::setMinScale": [{"name": "cv.GeneralizedHoughGuil.setMinScale", "arg": "minScale", "ret": "None"}], "cv::GeneralizedHoughGuil::setPosThresh": [{"name": "cv.GeneralizedHoughGuil.setPosThresh", "arg": "posThresh", "ret": "None"}], "cv::GeneralizedHoughGuil::setScaleStep": [{"name": "cv.GeneralizedHoughGuil.setScaleStep", "arg": "scaleStep", "ret": "None"}], "cv::GeneralizedHoughGuil::setScaleThresh": [{"name": "cv.GeneralizedHoughGuil.setScaleThresh", "arg": "scaleThresh", "ret": "None"}], "cv::GeneralizedHoughGuil::setXi": [{"name": "cv.GeneralizedHoughGuil.setXi", "arg": "xi", "ret": "None"}], "cv::HOGDescriptor::HOGDescriptor": [{"name": "cv.HOGDescriptor", "arg": "", "ret": "<HOGDescriptor object>"}, {"name": "cv.HOGDescriptor", "arg": "_winSize, _blockSize, _blockStride, _cellSize, _nbins[, _derivAperture[, _winSigma[, _histogramNormType[, _L2HysThreshold[, _gammaCorrection[, _nlevels[, _signedGradient]]]]]]]", "ret": "<HOGDescriptor object>"}, {"name": "cv.HOGDescriptor", "arg": "filename", "ret": "<HOGDescriptor object>"}], "cv::HOGDescriptor::checkDetectorSize": [{"name": "cv.HOGDescriptor.checkDetectorSize", "arg": "", "ret": "retval"}], "cv::HOGDescriptor::compute": [{"name": "cv.HOGDescriptor.compute", "arg": "img[, winStride[, padding[, locations]]]", "ret": "descriptors"}], "cv::HOGDescriptor::computeGradient": [{"name": "cv.HOGDescriptor.computeGradient", "arg": "img, grad, angleOfs[, paddingTL[, paddingBR]]", "ret": "grad, angleOfs"}], "cv::HOGDescriptor::detect": [{"name": "cv.HOGDescriptor.detect", "arg": "img[, hitThreshold[, winStride[, padding[, searchLocations]]]]", "ret": "foundLocations, weights"}], "cv::HOGDescriptor::detectMultiScale": [{"name": "cv.HOGDescriptor.detectMultiScale", "arg": "img[, hitThreshold[, winStride[, padding[, scale[, finalThreshold[, useMeanshiftGrouping]]]]]]", "ret": "foundLocations, foundWeights"}], "cv::HOGDescriptor::getDaimlerPeopleDetector": [{"name": "cv.HOGDescriptor_getDaimlerPeopleDetector", "arg": "", "ret": "retval"}], "cv::HOGDescriptor::getDefaultPeopleDetector": [{"name": "cv.HOGDescriptor_getDefaultPeopleDetector", "arg": "", "ret": "retval"}], "cv::HOGDescriptor::getDescriptorSize": [{"name": "cv.HOGDescriptor.getDescriptorSize", "arg": "", "ret": "retval"}], "cv::HOGDescriptor::getWinSigma": [{"name": "cv.HOGDescriptor.getWinSigma", "arg": "", "ret": "retval"}], "cv::HOGDescriptor::load": [{"name": "cv.HOGDescriptor.load", "arg": "filename[, objname]", "ret": "retval"}], "cv::HOGDescriptor::save": [{"name": "cv.HOGDescriptor.save", "arg": "filename[, objname]", "ret": "None"}], "cv::HOGDescriptor::setSVMDetector": [{"name": "cv.HOGDescriptor.setSVMDetector", "arg": "svmdetector", "ret": "None"}], "cv::HausdorffDistanceExtractor::getDistanceFlag": [{"name": "cv.HausdorffDistanceExtractor.getDistanceFlag", "arg": "", "ret": "retval"}], "cv::HausdorffDistanceExtractor::getRankProportion": [{"name": "cv.HausdorffDistanceExtractor.getRankProportion", "arg": "", "ret": "retval"}], "cv::HausdorffDistanceExtractor::setDistanceFlag": [{"name": "cv.HausdorffDistanceExtractor.setDistanceFlag", "arg": "distanceFlag", "ret": "None"}], "cv::HausdorffDistanceExtractor::setRankProportion": [{"name": "cv.HausdorffDistanceExtractor.setRankProportion", "arg": "rankProportion", "ret": "None"}], "cv::HistogramCostExtractor::buildCostMatrix": [{"name": "cv.HistogramCostExtractor.buildCostMatrix", "arg": "descriptors1, descriptors2[, costMatrix]", "ret": "costMatrix"}], "cv::HistogramCostExtractor::getDefaultCost": [{"name": "cv.HistogramCostExtractor.getDefaultCost", "arg": "", "ret": "retval"}], "cv::HistogramCostExtractor::getNDummies": [{"name": "cv.HistogramCostExtractor.getNDummies", "arg": "", "ret": "retval"}], "cv::HistogramCostExtractor::setDefaultCost": [{"name": "cv.HistogramCostExtractor.setDefaultCost", "arg": "defaultCost", "ret": "None"}], "cv::HistogramCostExtractor::setNDummies": [{"name": "cv.HistogramCostExtractor.setNDummies", "arg": "nDummies", "ret": "None"}], "cv::KAZE::create": [{"name": "cv.KAZE_create", "arg": "[, extended[, upright[, threshold[, nOctaves[, nOctaveLayers[, diffusivity]]]]]]", "ret": "retval"}], "cv::KAZE::getDefaultName": [{"name": "cv.KAZE.getDefaultName", "arg": "", "ret": "retval"}], "cv::KAZE::getDiffusivity": [{"name": "cv.KAZE.getDiffusivity", "arg": "", "ret": "retval"}], "cv::KAZE::getExtended": [{"name": "cv.KAZE.getExtended", "arg": "", "ret": "retval"}], "cv::KAZE::getNOctaveLayers": [{"name": "cv.KAZE.getNOctaveLayers", "arg": "", "ret": "retval"}], "cv::KAZE::getNOctaves": [{"name": "cv.KAZE.getNOctaves", "arg": "", "ret": "retval"}], "cv::KAZE::getThreshold": [{"name": "cv.KAZE.getThreshold", "arg": "", "ret": "retval"}], "cv::KAZE::getUpright": [{"name": "cv.KAZE.getUpright", "arg": "", "ret": "retval"}], "cv::KAZE::setDiffusivity": [{"name": "cv.KAZE.setDiffusivity", "arg": "diff", "ret": "None"}], "cv::KAZE::setExtended": [{"name": "cv.KAZE.setExtended", "arg": "extended", "ret": "None"}], "cv::KAZE::setNOctaveLayers": [{"name": "cv.KAZE.setNOctaveLayers", "arg": "octaveLayers", "ret": "None"}], "cv::KAZE::setNOctaves": [{"name": "cv.KAZE.setNOctaves", "arg": "octaves", "ret": "None"}], "cv::KAZE::setThreshold": [{"name": "cv.KAZE.setThreshold", "arg": "threshold", "ret": "None"}], "cv::KAZE::setUpright": [{"name": "cv.KAZE.setUpright", "arg": "upright", "ret": "None"}], "cv::KalmanFilter::KalmanFilter": [{"name": "cv.KalmanFilter", "arg": "", "ret": "<KalmanFilter object>"}, {"name": "cv.KalmanFilter", "arg": "dynamParams, measureParams[, controlParams[, type]]", "ret": "<KalmanFilter object>"}], "cv::KalmanFilter::correct": [{"name": "cv.KalmanFilter.correct", "arg": "measurement", "ret": "retval"}], "cv::KalmanFilter::predict": [{"name": "cv.KalmanFilter.predict", "arg": "[, control]", "ret": "retval"}], "cv::KeyPoint::KeyPoint": [{"name": "cv.KeyPoint", "arg": "", "ret": "<KeyPoint object>"}, {"name": "cv.KeyPoint", "arg": "x, y, _size[, _angle[, _response[, _octave[, _class_id]]]]", "ret": "<KeyPoint object>"}], "cv::KeyPoint::convert": [{"name": "cv.KeyPoint_convert", "arg": "keypoints[, keypointIndexes]", "ret": "points2f"}, {"name": "cv.KeyPoint_convert", "arg": "points2f[, size[, response[, octave[, class_id]]]]", "ret": "keypoints"}], "cv::KeyPoint::overlap": [{"name": "cv.KeyPoint_overlap", "arg": "kp1, kp2", "ret": "retval"}], "cv::LineSegmentDetector::compareSegments": [{"name": "cv.LineSegmentDetector.compareSegments", "arg": "size, lines1, lines2[, _image]", "ret": "retval, _image"}], "cv::LineSegmentDetector::detect": [{"name": "cv.LineSegmentDetector.detect", "arg": "_image[, _lines[, width[, prec[, nfa]]]]", "ret": "_lines, width, prec, nfa"}], "cv::LineSegmentDetector::drawSegments": [{"name": "cv.LineSegmentDetector.drawSegments", "arg": "_image, lines", "ret": "_image"}], "cv::MSER::create": [{"name": "cv.MSER_create", "arg": "[, _delta[, _min_area[, _max_area[, _max_variation[, _min_diversity[, _max_evolution[, _area_threshold[, _min_margin[, _edge_blur_size]]]]]]]]]", "ret": "retval"}], "cv::MSER::detectRegions": [{"name": "cv.MSER.detectRegions", "arg": "image", "ret": "msers, bboxes"}], "cv::MSER::getDefaultName": [{"name": "cv.MSER.getDefaultName", "arg": "", "ret": "retval"}], "cv::MSER::getDelta": [{"name": "cv.MSER.getDelta", "arg": "", "ret": "retval"}], "cv::MSER::getMaxArea": [{"name": "cv.MSER.getMaxArea", "arg": "", "ret": "retval"}], "cv::MSER::getMinArea": [{"name": "cv.MSER.getMinArea", "arg": "", "ret": "retval"}], "cv::MSER::getPass2Only": [{"name": "cv.MSER.getPass2Only", "arg": "", "ret": "retval"}], "cv::MSER::setDelta": [{"name": "cv.MSER.setDelta", "arg": "delta", "ret": "None"}], "cv::MSER::setMaxArea": [{"name": "cv.MSER.setMaxArea", "arg": "maxArea", "ret": "None"}], "cv::MSER::setMinArea": [{"name": "cv.MSER.setMinArea", "arg": "minArea", "ret": "None"}], "cv::MSER::setPass2Only": [{"name": "cv.MSER.setPass2Only", "arg": "f", "ret": "None"}], "cv::MergeDebevec::process": [{"name": "cv.MergeDebevec.process", "arg": "src, times, response[, dst]", "ret": "dst"}, {"name": "cv.MergeDebevec.process", "arg": "src, times[, dst]", "ret": "dst"}], "cv::MergeExposures::process": [{"name": "cv.MergeExposures.process", "arg": "src, times, response[, dst]", "ret": "dst"}], "cv::MergeMertens::getContrastWeight": [{"name": "cv.MergeMertens.getContrastWeight", "arg": "", "ret": "retval"}], "cv::MergeMertens::getExposureWeight": [{"name": "cv.MergeMertens.getExposureWeight", "arg": "", "ret": "retval"}], "cv::MergeMertens::getSaturationWeight": [{"name": "cv.MergeMertens.getSaturationWeight", "arg": "", "ret": "retval"}], "cv::MergeMertens::process": [{"name": "cv.MergeMertens.process", "arg": "src, times, response[, dst]", "ret": "dst"}, {"name": "cv.MergeMertens.process", "arg": "src[, dst]", "ret": "dst"}], "cv::MergeMertens::setContrastWeight": [{"name": "cv.MergeMertens.setContrastWeight", "arg": "contrast_weiht", "ret": "None"}], "cv::MergeMertens::setExposureWeight": [{"name": "cv.MergeMertens.setExposureWeight", "arg": "exposure_weight", "ret": "None"}], "cv::MergeMertens::setSaturationWeight": [{"name": "cv.MergeMertens.setSaturationWeight", "arg": "saturation_weight", "ret": "None"}], "cv::MergeRobertson::process": [{"name": "cv.MergeRobertson.process", "arg": "src, times, response[, dst]", "ret": "dst"}, {"name": "cv.MergeRobertson.process", "arg": "src, times[, dst]", "ret": "dst"}], "cv::MultiTracker::MultiTracker": [{"name": "cv.MultiTracker", "arg": "", "ret": "<MultiTracker object>"}], "cv::MultiTracker::add": [{"name": "cv.MultiTracker.add", "arg": "newTracker, image, boundingBox", "ret": "retval"}], "cv::MultiTracker::create": [{"name": "cv.MultiTracker_create", "arg": "", "ret": "retval"}], "cv::MultiTracker::getObjects": [{"name": "cv.MultiTracker.getObjects", "arg": "", "ret": "retval"}], "cv::MultiTracker::update": [{"name": "cv.MultiTracker.update", "arg": "image", "ret": "retval, boundingBox"}], "cv::NormHistogramCostExtractor::getNormFlag": [{"name": "cv.NormHistogramCostExtractor.getNormFlag", "arg": "", "ret": "retval"}], "cv::NormHistogramCostExtractor::setNormFlag": [{"name": "cv.NormHistogramCostExtractor.setNormFlag", "arg": "flag", "ret": "None"}], "cv::ORB::create": [{"name": "cv.ORB_create", "arg": "[, nfeatures[, scaleFactor[, nlevels[, edgeThreshold[, firstLevel[, WTA_K[, scoreType[, patchSize[, fastThreshold]]]]]]]]]", "ret": "retval"}], "cv::ORB::getDefaultName": [{"name": "cv.ORB.getDefaultName", "arg": "", "ret": "retval"}], "cv::ORB::getEdgeThreshold": [{"name": "cv.ORB.getEdgeThreshold", "arg": "", "ret": "retval"}], "cv::ORB::getFastThreshold": [{"name": "cv.ORB.getFastThreshold", "arg": "", "ret": "retval"}], "cv::ORB::getFirstLevel": [{"name": "cv.ORB.getFirstLevel", "arg": "", "ret": "retval"}], "cv::ORB::getMaxFeatures": [{"name": "cv.ORB.getMaxFeatures", "arg": "", "ret": "retval"}], "cv::ORB::getNLevels": [{"name": "cv.ORB.getNLevels", "arg": "", "ret": "retval"}], "cv::ORB::getPatchSize": [{"name": "cv.ORB.getPatchSize", "arg": "", "ret": "retval"}], "cv::ORB::getScaleFactor": [{"name": "cv.ORB.getScaleFactor", "arg": "", "ret": "retval"}], "cv::ORB::getScoreType": [{"name": "cv.ORB.getScoreType", "arg": "", "ret": "retval"}], "cv::ORB::getWTA_K": [{"name": "cv.ORB.getWTA_K", "arg": "", "ret": "retval"}], "cv::ORB::setEdgeThreshold": [{"name": "cv.ORB.setEdgeThreshold", "arg": "edgeThreshold", "ret": "None"}], "cv::ORB::setFastThreshold": [{"name": "cv.ORB.setFastThreshold", "arg": "fastThreshold", "ret": "None"}], "cv::ORB::setFirstLevel": [{"name": "cv.ORB.setFirstLevel", "arg": "firstLevel", "ret": "None"}], "cv::ORB::setMaxFeatures": [{"name": "cv.ORB.setMaxFeatures", "arg": "maxFeatures", "ret": "None"}], "cv::ORB::setNLevels": [{"name": "cv.ORB.setNLevels", "arg": "nlevels", "ret": "None"}], "cv::ORB::setPatchSize": [{"name": "cv.ORB.setPatchSize", "arg": "patchSize", "ret": "None"}], "cv::ORB::setScaleFactor": [{"name": "cv.ORB.setScaleFactor", "arg": "scaleFactor", "ret": "None"}], "cv::ORB::setScoreType": [{"name": "cv.ORB.setScoreType", "arg": "scoreType", "ret": "None"}], "cv::ORB::setWTA_K": [{"name": "cv.ORB.setWTA_K", "arg": "wta_k", "ret": "None"}], "cv::PyRotationWarper::PyRotationWarper": [{"name": "cv.PyRotationWarper", "arg": "type, scale", "ret": "<PyRotationWarper object>"}, {"name": "cv.PyRotationWarper", "arg": "", "ret": "<PyRotationWarper object>"}], "cv::PyRotationWarper::buildMaps": [{"name": "cv.PyRotationWarper.buildMaps", "arg": "src_size, K, R[, xmap[, ymap]]", "ret": "retval, xmap, ymap"}], "cv::PyRotationWarper::getScale": [{"name": "cv.PyRotationWarper.getScale", "arg": "", "ret": "retval"}], "cv::PyRotationWarper::setScale": [{"name": "cv.PyRotationWarper.setScale", "arg": "arg1", "ret": "None"}], "cv::PyRotationWarper::warp": [{"name": "cv.PyRotationWarper.warp", "arg": "src, K, R, interp_mode, border_mode[, dst]", "ret": "retval, dst"}], "cv::PyRotationWarper::warpBackward": [{"name": "cv.PyRotationWarper.warpBackward", "arg": "src, K, R, interp_mode, border_mode, dst_size[, dst]", "ret": "dst"}], "cv::PyRotationWarper::warpPoint": [{"name": "cv.PyRotationWarper.warpPoint", "arg": "pt, K, R", "ret": "retval"}], "cv::PyRotationWarper::warpRoi": [{"name": "cv.PyRotationWarper.warpRoi", "arg": "src_size, K, R", "ret": "retval"}], "cv::QRCodeDetector::QRCodeDetector": [{"name": "cv.QRCodeDetector", "arg": "", "ret": "<QRCodeDetector object>"}], "cv::QRCodeDetector::decode": [{"name": "cv.QRCodeDetector.decode", "arg": "img, points[, straight_qrcode]", "ret": "retval, straight_qrcode"}], "cv::QRCodeDetector::decodeMulti": [{"name": "cv.QRCodeDetector.decodeMulti", "arg": "img, points[, straight_qrcode]", "ret": "retval, decoded_info, straight_qrcode"}], "cv::QRCodeDetector::detect": [{"name": "cv.QRCodeDetector.detect", "arg": "img[, points]", "ret": "retval, points"}], "cv::QRCodeDetector::detectAndDecode": [{"name": "cv.QRCodeDetector.detectAndDecode", "arg": "img[, points[, straight_qrcode]]", "ret": "retval, points, straight_qrcode"}], "cv::QRCodeDetector::detectAndDecodeMulti": [{"name": "cv.QRCodeDetector.detectAndDecodeMulti", "arg": "img[, points[, straight_qrcode]]", "ret": "retval, decoded_info, points, straight_qrcode"}], "cv::QRCodeDetector::detectMulti": [{"name": "cv.QRCodeDetector.detectMulti", "arg": "img[, points]", "ret": "retval, points"}], "cv::QRCodeDetector::setEpsX": [{"name": "cv.QRCodeDetector.setEpsX", "arg": "epsX", "ret": "None"}], "cv::QRCodeDetector::setEpsY": [{"name": "cv.QRCodeDetector.setEpsY", "arg": "epsY", "ret": "None"}], "cv::SIFT::create": [{"name": "cv.SIFT_create", "arg": "[, nfeatures[, nOctaveLayers[, contrastThreshold[, edgeThreshold[, sigma]]]]]", "ret": "retval"}, {"name": "cv.SIFT_create", "arg": "nfeatures, nOctaveLayers, contrastThreshold, edgeThreshold, sigma, descriptorType", "ret": "retval"}], "cv::SIFT::getDefaultName": [{"name": "cv.SIFT.getDefaultName", "arg": "", "ret": "retval"}], "cv::ShapeContextDistanceExtractor::getAngularBins": [{"name": "cv.ShapeContextDistanceExtractor.getAngularBins", "arg": "", "ret": "retval"}], "cv::ShapeContextDistanceExtractor::getBendingEnergyWeight": [{"name": "cv.ShapeContextDistanceExtractor.getBendingEnergyWeight", "arg": "", "ret": "retval"}], "cv::ShapeContextDistanceExtractor::getCostExtractor": [{"name": "cv.ShapeContextDistanceExtractor.getCostExtractor", "arg": "", "ret": "retval"}], "cv::ShapeContextDistanceExtractor::getImageAppearanceWeight": [{"name": "cv.ShapeContextDistanceExtractor.getImageAppearanceWeight", "arg": "", "ret": "retval"}], "cv::ShapeContextDistanceExtractor::getImages": [{"name": "cv.ShapeContextDistanceExtractor.getImages", "arg": "[, image1[, image2]]", "ret": "image1, image2"}], "cv::ShapeContextDistanceExtractor::getInnerRadius": [{"name": "cv.ShapeContextDistanceExtractor.getInnerRadius", "arg": "", "ret": "retval"}], "cv::ShapeContextDistanceExtractor::getIterations": [{"name": "cv.ShapeContextDistanceExtractor.getIterations", "arg": "", "ret": "retval"}], "cv::ShapeContextDistanceExtractor::getOuterRadius": [{"name": "cv.ShapeContextDistanceExtractor.getOuterRadius", "arg": "", "ret": "retval"}], "cv::ShapeContextDistanceExtractor::getRadialBins": [{"name": "cv.ShapeContextDistanceExtractor.getRadialBins", "arg": "", "ret": "retval"}], "cv::ShapeContextDistanceExtractor::getRotationInvariant": [{"name": "cv.ShapeContextDistanceExtractor.getRotationInvariant", "arg": "", "ret": "retval"}], "cv::ShapeContextDistanceExtractor::getShapeContextWeight": [{"name": "cv.ShapeContextDistanceExtractor.getShapeContextWeight", "arg": "", "ret": "retval"}], "cv::ShapeContextDistanceExtractor::getStdDev": [{"name": "cv.ShapeContextDistanceExtractor.getStdDev", "arg": "", "ret": "retval"}], "cv::ShapeContextDistanceExtractor::getTransformAlgorithm": [{"name": "cv.ShapeContextDistanceExtractor.getTransformAlgorithm", "arg": "", "ret": "retval"}], "cv::ShapeContextDistanceExtractor::setAngularBins": [{"name": "cv.ShapeContextDistanceExtractor.setAngularBins", "arg": "nAngularBins", "ret": "None"}], "cv::ShapeContextDistanceExtractor::setBendingEnergyWeight": [{"name": "cv.ShapeContextDistanceExtractor.setBendingEnergyWeight", "arg": "bendingEnergyWeight", "ret": "None"}], "cv::ShapeContextDistanceExtractor::setCostExtractor": [{"name": "cv.ShapeContextDistanceExtractor.setCostExtractor", "arg": "comparer", "ret": "None"}], "cv::ShapeContextDistanceExtractor::setImageAppearanceWeight": [{"name": "cv.ShapeContextDistanceExtractor.setImageAppearanceWeight", "arg": "imageAppearanceWeight", "ret": "None"}], "cv::ShapeContextDistanceExtractor::setImages": [{"name": "cv.ShapeContextDistanceExtractor.setImages", "arg": "image1, image2", "ret": "None"}], "cv::ShapeContextDistanceExtractor::setInnerRadius": [{"name": "cv.ShapeContextDistanceExtractor.setInnerRadius", "arg": "innerRadius", "ret": "None"}], "cv::ShapeContextDistanceExtractor::setIterations": [{"name": "cv.ShapeContextDistanceExtractor.setIterations", "arg": "iterations", "ret": "None"}], "cv::ShapeContextDistanceExtractor::setOuterRadius": [{"name": "cv.ShapeContextDistanceExtractor.setOuterRadius", "arg": "outerRadius", "ret": "None"}], "cv::ShapeContextDistanceExtractor::setRadialBins": [{"name": "cv.ShapeContextDistanceExtractor.setRadialBins", "arg": "nRadialBins", "ret": "None"}], "cv::ShapeContextDistanceExtractor::setRotationInvariant": [{"name": "cv.ShapeContextDistanceExtractor.setRotationInvariant", "arg": "rotationInvariant", "ret": "None"}], "cv::ShapeContextDistanceExtractor::setShapeContextWeight": [{"name": "cv.ShapeContextDistanceExtractor.setShapeContextWeight", "arg": "shapeContextWeight", "ret": "None"}], "cv::ShapeContextDistanceExtractor::setStdDev": [{"name": "cv.ShapeContextDistanceExtractor.setStdDev", "arg": "sigma", "ret": "None"}], "cv::ShapeContextDistanceExtractor::setTransformAlgorithm": [{"name": "cv.ShapeContextDistanceExtractor.setTransformAlgorithm", "arg": "transformer", "ret": "None"}], "cv::ShapeDistanceExtractor::computeDistance": [{"name": "cv.ShapeDistanceExtractor.computeDistance", "arg": "contour1, contour2", "ret": "retval"}], "cv::ShapeTransformer::applyTransformation": [{"name": "cv.ShapeTransformer.applyTransformation", "arg": "input[, output]", "ret": "retval, output"}], "cv::ShapeTransformer::estimateTransformation": [{"name": "cv.ShapeTransformer.estimateTransformation", "arg": "transformingShape, targetShape, matches", "ret": "None"}], "cv::ShapeTransformer::warpImage": [{"name": "cv.ShapeTransformer.warpImage", "arg": "transformingImage[, output[, flags[, borderMode[, borderValue]]]]", "ret": "output"}], "cv::SimpleBlobDetector::create": [{"name": "cv.SimpleBlobDetector_create", "arg": "[, parameters]", "ret": "retval"}], "cv::SimpleBlobDetector::getDefaultName": [{"name": "cv.SimpleBlobDetector.getDefaultName", "arg": "", "ret": "retval"}], "cv::SimpleBlobDetector::Params::Params": [{"name": "cv.SimpleBlobDetector_Params", "arg": "", "ret": "<SimpleBlobDetector_Params object>"}], "cv::SparseOpticalFlow::calc": [{"name": "cv.SparseOpticalFlow.calc", "arg": "prevImg, nextImg, prevPts, nextPts[, status[, err]]", "ret": "nextPts, status, err"}], "cv::SparsePyrLKOpticalFlow::create": [{"name": "cv.SparsePyrLKOpticalFlow_create", "arg": "[, winSize[, maxLevel[, crit[, flags[, minEigThreshold]]]]]", "ret": "retval"}], "cv::SparsePyrLKOpticalFlow::getFlags": [{"name": "cv.SparsePyrLKOpticalFlow.getFlags", "arg": "", "ret": "retval"}], "cv::SparsePyrLKOpticalFlow::getMaxLevel": [{"name": "cv.SparsePyrLKOpticalFlow.getMaxLevel", "arg": "", "ret": "retval"}], "cv::SparsePyrLKOpticalFlow::getMinEigThreshold": [{"name": "cv.SparsePyrLKOpticalFlow.getMinEigThreshold", "arg": "", "ret": "retval"}], "cv::SparsePyrLKOpticalFlow::getTermCriteria": [{"name": "cv.SparsePyrLKOpticalFlow.getTermCriteria", "arg": "", "ret": "retval"}], "cv::SparsePyrLKOpticalFlow::getWinSize": [{"name": "cv.SparsePyrLKOpticalFlow.getWinSize", "arg": "", "ret": "retval"}], "cv::SparsePyrLKOpticalFlow::setFlags": [{"name": "cv.SparsePyrLKOpticalFlow.setFlags", "arg": "flags", "ret": "None"}], "cv::SparsePyrLKOpticalFlow::setMaxLevel": [{"name": "cv.SparsePyrLKOpticalFlow.setMaxLevel", "arg": "maxLevel", "ret": "None"}], "cv::SparsePyrLKOpticalFlow::setMinEigThreshold": [{"name": "cv.SparsePyrLKOpticalFlow.setMinEigThreshold", "arg": "minEigThreshold", "ret": "None"}], "cv::SparsePyrLKOpticalFlow::setTermCriteria": [{"name": "cv.SparsePyrLKOpticalFlow.setTermCriteria", "arg": "crit", "ret": "None"}], "cv::SparsePyrLKOpticalFlow::setWinSize": [{"name": "cv.SparsePyrLKOpticalFlow.setWinSize", "arg": "winSize", "ret": "None"}], "cv::StereoBM::create": [{"name": "cv.StereoBM_create", "arg": "[, numDisparities[, blockSize]]", "ret": "retval"}], "cv::StereoBM::getPreFilterCap": [{"name": "cv.StereoBM.getPreFilterCap", "arg": "", "ret": "retval"}], "cv::StereoBM::getPreFilterSize": [{"name": "cv.StereoBM.getPreFilterSize", "arg": "", "ret": "retval"}], "cv::StereoBM::getPreFilterType": [{"name": "cv.StereoBM.getPreFilterType", "arg": "", "ret": "retval"}], "cv::StereoBM::getROI1": [{"name": "cv.StereoBM.getROI1", "arg": "", "ret": "retval"}], "cv::StereoBM::getROI2": [{"name": "cv.StereoBM.getROI2", "arg": "", "ret": "retval"}], "cv::StereoBM::getSmallerBlockSize": [{"name": "cv.StereoBM.getSmallerBlockSize", "arg": "", "ret": "retval"}], "cv::StereoBM::getTextureThreshold": [{"name": "cv.StereoBM.getTextureThreshold", "arg": "", "ret": "retval"}], "cv::StereoBM::getUniquenessRatio": [{"name": "cv.StereoBM.getUniquenessRatio", "arg": "", "ret": "retval"}], "cv::StereoBM::setPreFilterCap": [{"name": "cv.StereoBM.setPreFilterCap", "arg": "preFilterCap", "ret": "None"}], "cv::StereoBM::setPreFilterSize": [{"name": "cv.StereoBM.setPreFilterSize", "arg": "preFilterSize", "ret": "None"}], "cv::StereoBM::setPreFilterType": [{"name": "cv.StereoBM.setPreFilterType", "arg": "preFilterType", "ret": "None"}], "cv::StereoBM::setROI1": [{"name": "cv.StereoBM.setROI1", "arg": "roi1", "ret": "None"}], "cv::StereoBM::setROI2": [{"name": "cv.StereoBM.setROI2", "arg": "roi2", "ret": "None"}], "cv::StereoBM::setSmallerBlockSize": [{"name": "cv.StereoBM.setSmallerBlockSize", "arg": "blockSize", "ret": "None"}], "cv::StereoBM::setTextureThreshold": [{"name": "cv.StereoBM.setTextureThreshold", "arg": "textureThreshold", "ret": "None"}], "cv::StereoBM::setUniquenessRatio": [{"name": "cv.StereoBM.setUniquenessRatio", "arg": "uniquenessRatio", "ret": "None"}], "cv::StereoMatcher::compute": [{"name": "cv.StereoMatcher.compute", "arg": "left, right[, disparity]", "ret": "disparity"}], "cv::StereoMatcher::getBlockSize": [{"name": "cv.StereoMatcher.getBlockSize", "arg": "", "ret": "retval"}], "cv::StereoMatcher::getDisp12MaxDiff": [{"name": "cv.StereoMatcher.getDisp12MaxDiff", "arg": "", "ret": "retval"}], "cv::StereoMatcher::getMinDisparity": [{"name": "cv.StereoMatcher.getMinDisparity", "arg": "", "ret": "retval"}], "cv::StereoMatcher::getNumDisparities": [{"name": "cv.StereoMatcher.getNumDisparities", "arg": "", "ret": "retval"}], "cv::StereoMatcher::getSpeckleRange": [{"name": "cv.StereoMatcher.getSpeckleRange", "arg": "", "ret": "retval"}], "cv::StereoMatcher::getSpeckleWindowSize": [{"name": "cv.StereoMatcher.getSpeckleWindowSize", "arg": "", "ret": "retval"}], "cv::StereoMatcher::setBlockSize": [{"name": "cv.StereoMatcher.setBlockSize", "arg": "blockSize", "ret": "None"}], "cv::StereoMatcher::setDisp12MaxDiff": [{"name": "cv.StereoMatcher.setDisp12MaxDiff", "arg": "disp12MaxDiff", "ret": "None"}], "cv::StereoMatcher::setMinDisparity": [{"name": "cv.StereoMatcher.setMinDisparity", "arg": "minDisparity", "ret": "None"}], "cv::StereoMatcher::setNumDisparities": [{"name": "cv.StereoMatcher.setNumDisparities", "arg": "numDisparities", "ret": "None"}], "cv::StereoMatcher::setSpeckleRange": [{"name": "cv.StereoMatcher.setSpeckleRange", "arg": "speckleRange", "ret": "None"}], "cv::StereoMatcher::setSpeckleWindowSize": [{"name": "cv.StereoMatcher.setSpeckleWindowSize", "arg": "speckleWindowSize", "ret": "None"}], "cv::StereoSGBM::create": [{"name": "cv.StereoSGBM_create", "arg": "[, minDisparity[, numDisparities[, blockSize[, P1[, P2[, disp12MaxDiff[, preFilterCap[, uniquenessRatio[, speckleWindowSize[, speckleRange[, mode]]]]]]]]]]]", "ret": "retval"}], "cv::StereoSGBM::getMode": [{"name": "cv.StereoSGBM.getMode", "arg": "", "ret": "retval"}], "cv::StereoSGBM::getP1": [{"name": "cv.StereoSGBM.getP1", "arg": "", "ret": "retval"}], "cv::StereoSGBM::getP2": [{"name": "cv.StereoSGBM.getP2", "arg": "", "ret": "retval"}], "cv::StereoSGBM::getPreFilterCap": [{"name": "cv.StereoSGBM.getPreFilterCap", "arg": "", "ret": "retval"}], "cv::StereoSGBM::getUniquenessRatio": [{"name": "cv.StereoSGBM.getUniquenessRatio", "arg": "", "ret": "retval"}], "cv::StereoSGBM::setMode": [{"name": "cv.StereoSGBM.setMode", "arg": "mode", "ret": "None"}], "cv::StereoSGBM::setP1": [{"name": "cv.StereoSGBM.setP1", "arg": "P1", "ret": "None"}], "cv::StereoSGBM::setP2": [{"name": "cv.StereoSGBM.setP2", "arg": "P2", "ret": "None"}], "cv::StereoSGBM::setPreFilterCap": [{"name": "cv.StereoSGBM.setPreFilterCap", "arg": "preFilterCap", "ret": "None"}], "cv::StereoSGBM::setUniquenessRatio": [{"name": "cv.StereoSGBM.setUniquenessRatio", "arg": "uniquenessRatio", "ret": "None"}], "cv::Stitcher::composePanorama": [{"name": "cv.Stitcher.composePanorama", "arg": "[, pano]", "ret": "retval, pano"}, {"name": "cv.Stitcher.composePanorama", "arg": "images[, pano]", "ret": "retval, pano"}], "cv::Stitcher::compositingResol": [{"name": "cv.Stitcher.compositingResol", "arg": "", "ret": "retval"}], "cv::Stitcher::create": [{"name": "cv.Stitcher_create", "arg": "[, mode]", "ret": "retval"}], "cv::Stitcher::estimateTransform": [{"name": "cv.Stitcher.estimateTransform", "arg": "images[, masks]", "ret": "retval"}], "cv::Stitcher::interpolationFlags": [{"name": "cv.Stitcher.interpolationFlags", "arg": "", "ret": "retval"}], "cv::Stitcher::panoConfidenceThresh": [{"name": "cv.Stitcher.panoConfidenceThresh", "arg": "", "ret": "retval"}], "cv::Stitcher::registrationResol": [{"name": "cv.Stitcher.registrationResol", "arg": "", "ret": "retval"}], "cv::Stitcher::seamEstimationResol": [{"name": "cv.Stitcher.seamEstimationResol", "arg": "", "ret": "retval"}], "cv::Stitcher::setCompositingResol": [{"name": "cv.Stitcher.setCompositingResol", "arg": "resol_mpx", "ret": "None"}], "cv::Stitcher::setInterpolationFlags": [{"name": "cv.Stitcher.setInterpolationFlags", "arg": "interp_flags", "ret": "None"}], "cv::Stitcher::setPanoConfidenceThresh": [{"name": "cv.Stitcher.setPanoConfidenceThresh", "arg": "conf_thresh", "ret": "None"}], "cv::Stitcher::setRegistrationResol": [{"name": "cv.Stitcher.setRegistrationResol", "arg": "resol_mpx", "ret": "None"}], "cv::Stitcher::setSeamEstimationResol": [{"name": "cv.Stitcher.setSeamEstimationResol", "arg": "resol_mpx", "ret": "None"}], "cv::Stitcher::setWaveCorrection": [{"name": "cv.Stitcher.setWaveCorrection", "arg": "flag", "ret": "None"}], "cv::Stitcher::stitch": [{"name": "cv.Stitcher.stitch", "arg": "images[, pano]", "ret": "retval, pano"}, {"name": "cv.Stitcher.stitch", "arg": "images, masks[, pano]", "ret": "retval, pano"}], "cv::Stitcher::waveCorrection": [{"name": "cv.Stitcher.waveCorrection", "arg": "", "ret": "retval"}], "cv::Stitcher::workScale": [{"name": "cv.Stitcher.workScale", "arg": "", "ret": "retval"}], "cv::Subdiv2D::Subdiv2D": [{"name": "cv.Subdiv2D", "arg": "", "ret": "<Subdiv2D object>"}, {"name": "cv.Subdiv2D", "arg": "rect", "ret": "<Subdiv2D object>"}], "cv::Subdiv2D::edgeDst": [{"name": "cv.Subdiv2D.edgeDst", "arg": "edge", "ret": "retval, dstpt"}], "cv::Subdiv2D::edgeOrg": [{"name": "cv.Subdiv2D.edgeOrg", "arg": "edge", "ret": "retval, orgpt"}], "cv::Subdiv2D::findNearest": [{"name": "cv.Subdiv2D.findNearest", "arg": "pt", "ret": "retval, nearestPt"}], "cv::Subdiv2D::getEdge": [{"name": "cv.Subdiv2D.getEdge", "arg": "edge, nextEdgeType", "ret": "retval"}], "cv::Subdiv2D::getEdgeList": [{"name": "cv.Subdiv2D.getEdgeList", "arg": "", "ret": "edgeList"}], "cv::Subdiv2D::getLeadingEdgeList": [{"name": "cv.Subdiv2D.getLeadingEdgeList", "arg": "", "ret": "leadingEdgeList"}], "cv::Subdiv2D::getTriangleList": [{"name": "cv.Subdiv2D.getTriangleList", "arg": "", "ret": "triangleList"}], "cv::Subdiv2D::getVertex": [{"name": "cv.Subdiv2D.getVertex", "arg": "vertex", "ret": "retval, firstEdge"}], "cv::Subdiv2D::getVoronoiFacetList": [{"name": "cv.Subdiv2D.getVoronoiFacetList", "arg": "idx", "ret": "facetList, facetCenters"}], "cv::Subdiv2D::initDelaunay": [{"name": "cv.Subdiv2D.initDelaunay", "arg": "rect", "ret": "None"}], "cv::Subdiv2D::insert": [{"name": "cv.Subdiv2D.insert", "arg": "pt", "ret": "retval"}, {"name": "cv.Subdiv2D.insert", "arg": "ptvec", "ret": "None"}], "cv::Subdiv2D::locate": [{"name": "cv.Subdiv2D.locate", "arg": "pt", "ret": "retval, edge, vertex"}], "cv::Subdiv2D::nextEdge": [{"name": "cv.Subdiv2D.nextEdge", "arg": "edge", "ret": "retval"}], "cv::Subdiv2D::rotateEdge": [{"name": "cv.Subdiv2D.rotateEdge", "arg": "edge, rotate", "ret": "retval"}], "cv::Subdiv2D::symEdge": [{"name": "cv.Subdiv2D.symEdge", "arg": "edge", "ret": "retval"}], "cv::ThinPlateSplineShapeTransformer::getRegularizationParameter": [{"name": "cv.ThinPlateSplineShapeTransformer.getRegularizationParameter", "arg": "", "ret": "retval"}], "cv::ThinPlateSplineShapeTransformer::setRegularizationParameter": [{"name": "cv.ThinPlateSplineShapeTransformer.setRegularizationParameter", "arg": "beta", "ret": "None"}], "cv::TickMeter::TickMeter": [{"name": "cv.TickMeter", "arg": "", "ret": "<TickMeter object>"}], "cv::TickMeter::getAvgTimeMilli": [{"name": "cv.TickMeter.getAvgTimeMilli", "arg": "", "ret": "retval"}], "cv::TickMeter::getAvgTimeSec": [{"name": "cv.TickMeter.getAvgTimeSec", "arg": "", "ret": "retval"}], "cv::TickMeter::getCounter": [{"name": "cv.TickMeter.getCounter", "arg": "", "ret": "retval"}], "cv::TickMeter::getFPS": [{"name": "cv.TickMeter.getFPS", "arg": "", "ret": "retval"}], "cv::TickMeter::getTimeMicro": [{"name": "cv.TickMeter.getTimeMicro", "arg": "", "ret": "retval"}], "cv::TickMeter::getTimeMilli": [{"name": "cv.TickMeter.getTimeMilli", "arg": "", "ret": "retval"}], "cv::TickMeter::getTimeSec": [{"name": "cv.TickMeter.getTimeSec", "arg": "", "ret": "retval"}], "cv::TickMeter::getTimeTicks": [{"name": "cv.TickMeter.getTimeTicks", "arg": "", "ret": "retval"}], "cv::TickMeter::reset": [{"name": "cv.TickMeter.reset", "arg": "", "ret": "None"}], "cv::TickMeter::start": [{"name": "cv.TickMeter.start", "arg": "", "ret": "None"}], "cv::TickMeter::stop": [{"name": "cv.TickMeter.stop", "arg": "", "ret": "None"}], "cv::Tonemap::getGamma": [{"name": "cv.Tonemap.getGamma", "arg": "", "ret": "retval"}], "cv::Tonemap::process": [{"name": "cv.Tonemap.process", "arg": "src[, dst]", "ret": "dst"}], "cv::Tonemap::setGamma": [{"name": "cv.Tonemap.setGamma", "arg": "gamma", "ret": "None"}], "cv::TonemapDrago::getBias": [{"name": "cv.TonemapDrago.getBias", "arg": "", "ret": "retval"}], "cv::TonemapDrago::getSaturation": [{"name": "cv.TonemapDrago.getSaturation", "arg": "", "ret": "retval"}], "cv::TonemapDrago::setBias": [{"name": "cv.TonemapDrago.setBias", "arg": "bias", "ret": "None"}], "cv::TonemapDrago::setSaturation": [{"name": "cv.TonemapDrago.setSaturation", "arg": "saturation", "ret": "None"}], "cv::TonemapMantiuk::getSaturation": [{"name": "cv.TonemapMantiuk.getSaturation", "arg": "", "ret": "retval"}], "cv::TonemapMantiuk::getScale": [{"name": "cv.TonemapMantiuk.getScale", "arg": "", "ret": "retval"}], "cv::TonemapMantiuk::setSaturation": [{"name": "cv.TonemapMantiuk.setSaturation", "arg": "saturation", "ret": "None"}], "cv::TonemapMantiuk::setScale": [{"name": "cv.TonemapMantiuk.setScale", "arg": "scale", "ret": "None"}], "cv::TonemapReinhard::getColorAdaptation": [{"name": "cv.TonemapReinhard.getColorAdaptation", "arg": "", "ret": "retval"}], "cv::TonemapReinhard::getIntensity": [{"name": "cv.TonemapReinhard.getIntensity", "arg": "", "ret": "retval"}], "cv::TonemapReinhard::getLightAdaptation": [{"name": "cv.TonemapReinhard.getLightAdaptation", "arg": "", "ret": "retval"}], "cv::TonemapReinhard::setColorAdaptation": [{"name": "cv.TonemapReinhard.setColorAdaptation", "arg": "color_adapt", "ret": "None"}], "cv::TonemapReinhard::setIntensity": [{"name": "cv.TonemapReinhard.setIntensity", "arg": "intensity", "ret": "None"}], "cv::TonemapReinhard::setLightAdaptation": [{"name": "cv.TonemapReinhard.setLightAdaptation", "arg": "light_adapt", "ret": "None"}], "cv::Tracker::init": [{"name": "cv.Tracker.init", "arg": "image, boundingBox", "ret": "retval"}], "cv::Tracker::update": [{"name": "cv.Tracker.update", "arg": "image", "ret": "retval, boundingBox"}], "cv::TrackerBoosting::create": [{"name": "cv.TrackerBoosting_create", "arg": "", "ret": "retval"}], "cv::TrackerCSRT::create": [{"name": "cv.TrackerCSRT_create", "arg": "", "ret": "retval"}], "cv::TrackerCSRT::setInitialMask": [{"name": "cv.TrackerCSRT.setInitialMask", "arg": "mask", "ret": "None"}], "cv::TrackerGOTURN::create": [{"name": "cv.TrackerGOTURN_create", "arg": "", "ret": "retval"}], "cv::TrackerKCF::create": [{"name": "cv.TrackerKCF_create", "arg": "", "ret": "retval"}], "cv::TrackerMIL::create": [{"name": "cv.TrackerMIL_create", "arg": "", "ret": "retval"}], "cv::TrackerMOSSE::create": [{"name": "cv.TrackerMOSSE_create", "arg": "", "ret": "retval"}], "cv::TrackerMedianFlow::create": [{"name": "cv.TrackerMedianFlow_create", "arg": "", "ret": "retval"}], "cv::TrackerTLD::create": [{"name": "cv.TrackerTLD_create", "arg": "", "ret": "retval"}], "cv::UMat::UMat": [{"name": "cv.UMat", "arg": "[, usageFlags]", "ret": "<UMat object>"}, {"name": "cv.UMat", "arg": "rows, cols, type[, usageFlags]", "ret": "<UMat object>"}, {"name": "cv.UMat", "arg": "size, type[, usageFlags]", "ret": "<UMat object>"}, {"name": "cv.UMat", "arg": "rows, cols, type, s[, usageFlags]", "ret": "<UMat object>"}, {"name": "cv.UMat", "arg": "size, type, s[, usageFlags]", "ret": "<UMat object>"}, {"name": "cv.UMat", "arg": "m", "ret": "<UMat object>"}, {"name": "cv.UMat", "arg": "m, rowRange[, colRange]", "ret": "<UMat object>"}, {"name": "cv.UMat", "arg": "m, roi", "ret": "<UMat object>"}, {"name": "cv.UMat", "arg": "m, ranges", "ret": "<UMat object>"}], "cv_UMat_context": [{"name": "cv.UMat_context", "arg": "", "ret": "retval"}], "cv::UMat::cv_UMat_get": [{"name": "cv.UMat.get", "arg": "", "ret": "retval"}], "cv::UMat::handle": [{"name": "cv.UMat.handle", "arg": "accessFlags", "ret": "retval"}], "cv::UMat::isContinuous": [{"name": "cv.UMat.isContinuous", "arg": "", "ret": "retval"}], "cv::UMat::isSubmatrix": [{"name": "cv.UMat.isSubmatrix", "arg": "", "ret": "retval"}], "cv_UMat_queue": [{"name": "cv.UMat_queue", "arg": "", "ret": "retval"}], "cv::VariationalRefinement::calcUV": [{"name": "cv.VariationalRefinement.calcUV", "arg": "I0, I1, flow_u, flow_v", "ret": "flow_u, flow_v"}], "cv::VariationalRefinement::create": [{"name": "cv.VariationalRefinement_create", "arg": "", "ret": "retval"}], "cv::VariationalRefinement::getAlpha": [{"name": "cv.VariationalRefinement.getAlpha", "arg": "", "ret": "retval"}], "cv::VariationalRefinement::getDelta": [{"name": "cv.VariationalRefinement.getDelta", "arg": "", "ret": "retval"}], "cv::VariationalRefinement::getFixedPointIterations": [{"name": "cv.VariationalRefinement.getFixedPointIterations", "arg": "", "ret": "retval"}], "cv::VariationalRefinement::getGamma": [{"name": "cv.VariationalRefinement.getGamma", "arg": "", "ret": "retval"}], "cv::VariationalRefinement::getOmega": [{"name": "cv.VariationalRefinement.getOmega", "arg": "", "ret": "retval"}], "cv::VariationalRefinement::getSorIterations": [{"name": "cv.VariationalRefinement.getSorIterations", "arg": "", "ret": "retval"}], "cv::VariationalRefinement::setAlpha": [{"name": "cv.VariationalRefinement.setAlpha", "arg": "val", "ret": "None"}], "cv::VariationalRefinement::setDelta": [{"name": "cv.VariationalRefinement.setDelta", "arg": "val", "ret": "None"}], "cv::VariationalRefinement::setFixedPointIterations": [{"name": "cv.VariationalRefinement.setFixedPointIterations", "arg": "val", "ret": "None"}], "cv::VariationalRefinement::setGamma": [{"name": "cv.VariationalRefinement.setGamma", "arg": "val", "ret": "None"}], "cv::VariationalRefinement::setOmega": [{"name": "cv.VariationalRefinement.setOmega", "arg": "val", "ret": "None"}], "cv::VariationalRefinement::setSorIterations": [{"name": "cv.VariationalRefinement.setSorIterations", "arg": "val", "ret": "None"}], "cv::VideoCapture::VideoCapture": [{"name": "cv.VideoCapture", "arg": "", "ret": "<VideoCapture object>"}, {"name": "cv.VideoCapture", "arg": "filename[, apiPreference]", "ret": "<VideoCapture object>"}, {"name": "cv.VideoCapture", "arg": "index[, apiPreference]", "ret": "<VideoCapture object>"}], "cv::VideoCapture::get": [{"name": "cv.VideoCapture.get", "arg": "propId", "ret": "retval"}], "cv::VideoCapture::getBackendName": [{"name": "cv.VideoCapture.getBackendName", "arg": "", "ret": "retval"}], "cv::VideoCapture::getExceptionMode": [{"name": "cv.VideoCapture.getExceptionMode", "arg": "", "ret": "retval"}], "cv::VideoCapture::grab": [{"name": "cv.VideoCapture.grab", "arg": "", "ret": "retval"}], "cv::VideoCapture::isOpened": [{"name": "cv.VideoCapture.isOpened", "arg": "", "ret": "retval"}], "cv::VideoCapture::open": [{"name": "cv.VideoCapture.open", "arg": "filename[, apiPreference]", "ret": "retval"}, {"name": "cv.VideoCapture.open", "arg": "index[, apiPreference]", "ret": "retval"}], "cv::VideoCapture::read": [{"name": "cv.VideoCapture.read", "arg": "[, image]", "ret": "retval, image"}], "cv::VideoCapture::release": [{"name": "cv.VideoCapture.release", "arg": "", "ret": "None"}], "cv::VideoCapture::retrieve": [{"name": "cv.VideoCapture.retrieve", "arg": "[, image[, flag]]", "ret": "retval, image"}], "cv::VideoCapture::set": [{"name": "cv.VideoCapture.set", "arg": "propId, value", "ret": "retval"}], "cv::VideoCapture::setExceptionMode": [{"name": "cv.VideoCapture.setExceptionMode", "arg": "enable", "ret": "None"}], "cv::VideoWriter::VideoWriter": [{"name": "cv.VideoWriter", "arg": "", "ret": "<VideoWriter object>"}, {"name": "cv.VideoWriter", "arg": "filename, fourcc, fps, frameSize[, isColor]", "ret": "<VideoWriter object>"}, {"name": "cv.VideoWriter", "arg": "filename, apiPreference, fourcc, fps, frameSize[, isColor]", "ret": "<VideoWriter object>"}, {"name": "cv.VideoWriter", "arg": "filename, fourcc, fps, frameSize, params", "ret": "<VideoWriter object>"}, {"name": "cv.VideoWriter", "arg": "filename, apiPreference, fourcc, fps, frameSize, params", "ret": "<VideoWriter object>"}], "cv::VideoWriter::fourcc": [{"name": "cv.VideoWriter_fourcc", "arg": "c1, c2, c3, c4", "ret": "retval"}], "cv::VideoWriter::get": [{"name": "cv.VideoWriter.get", "arg": "propId", "ret": "retval"}], "cv::VideoWriter::getBackendName": [{"name": "cv.VideoWriter.getBackendName", "arg": "", "ret": "retval"}], "cv::VideoWriter::isOpened": [{"name": "cv.VideoWriter.isOpened", "arg": "", "ret": "retval"}], "cv::VideoWriter::open": [{"name": "cv.VideoWriter.open", "arg": "filename, fourcc, fps, frameSize[, isColor]", "ret": "retval"}, {"name": "cv.VideoWriter.open", "arg": "filename, apiPreference, fourcc, fps, frameSize[, isColor]", "ret": "retval"}, {"name": "cv.VideoWriter.open", "arg": "filename, fourcc, fps, frameSize, params", "ret": "retval"}, {"name": "cv.VideoWriter.open", "arg": "filename, apiPreference, fourcc, fps, frameSize, params", "ret": "retval"}], "cv::VideoWriter::release": [{"name": "cv.VideoWriter.release", "arg": "", "ret": "None"}], "cv::VideoWriter::set": [{"name": "cv.VideoWriter.set", "arg": "propId, value", "ret": "retval"}], "cv::VideoWriter::write": [{"name": "cv.VideoWriter.write", "arg": "image", "ret": "None"}], "cv::aruco::Board::create": [{"name": "cv.aruco.Board_create", "arg": "objPoints, dictionary, ids", "ret": "retval"}], "cv::aruco::CharucoBoard::create": [{"name": "cv.aruco.CharucoBoard_create", "arg": "squaresX, squaresY, squareLength, markerLength, dictionary", "ret": "retval"}], "cv::aruco::CharucoBoard::draw": [{"name": "cv.aruco_CharucoBoard.draw", "arg": "outSize[, img[, marginSize[, borderBits]]]", "ret": "img"}], "cv::aruco::CharucoBoard::getChessboardSize": [{"name": "cv.aruco_CharucoBoard.getChessboardSize", "arg": "", "ret": "retval"}], "cv::aruco::CharucoBoard::getMarkerLength": [{"name": "cv.aruco_CharucoBoard.getMarkerLength", "arg": "", "ret": "retval"}], "cv::aruco::CharucoBoard::getSquareLength": [{"name": "cv.aruco_CharucoBoard.getSquareLength", "arg": "", "ret": "retval"}], "cv::aruco::DetectorParameters::create": [{"name": "cv.aruco.DetectorParameters_create", "arg": "", "ret": "retval"}], "cv::aruco::Dictionary::create": [{"name": "cv.aruco.Dictionary_create", "arg": "nMarkers, markerSize[, randomSeed]", "ret": "retval"}, {"name": "cv.aruco.Dictionary_create_from", "arg": "nMarkers, markerSize, baseDictionary[, randomSeed]", "ret": "retval"}], "cv::aruco::Dictionary::drawMarker": [{"name": "cv.aruco_Dictionary.drawMarker", "arg": "id, sidePixels[, _img[, borderBits]]", "ret": "_img"}], "cv::aruco::Dictionary::get": [{"name": "cv.aruco.Dictionary_get", "arg": "dict", "ret": "retval"}], "cv::aruco::Dictionary::getBitsFromByteList": [{"name": "cv.aruco.Dictionary_getBitsFromByteList", "arg": "byteList, markerSize", "ret": "retval"}], "cv::aruco::Dictionary::getByteListFromBits": [{"name": "cv.aruco.Dictionary_getByteListFromBits", "arg": "bits", "ret": "retval"}], "cv::aruco::GridBoard::create": [{"name": "cv.aruco.GridBoard_create", "arg": "markersX, markersY, markerLength, markerSeparation, dictionary[, firstMarker]", "ret": "retval"}], "cv::aruco::GridBoard::draw": [{"name": "cv.aruco_GridBoard.draw", "arg": "outSize[, img[, marginSize[, borderBits]]]", "ret": "img"}], "cv::aruco::GridBoard::getGridSize": [{"name": "cv.aruco_GridBoard.getGridSize", "arg": "", "ret": "retval"}], "cv::aruco::GridBoard::getMarkerLength": [{"name": "cv.aruco_GridBoard.getMarkerLength", "arg": "", "ret": "retval"}], "cv::aruco::GridBoard::getMarkerSeparation": [{"name": "cv.aruco_GridBoard.getMarkerSeparation", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorCNT::apply": [{"name": "cv.bgsegm_BackgroundSubtractorCNT.apply", "arg": "image[, fgmask[, learningRate]]", "ret": "fgmask"}], "cv::bgsegm::BackgroundSubtractorCNT::getBackgroundImage": [{"name": "cv.bgsegm_BackgroundSubtractorCNT.getBackgroundImage", "arg": "[, backgroundImage]", "ret": "backgroundImage"}], "cv::bgsegm::BackgroundSubtractorCNT::getIsParallel": [{"name": "cv.bgsegm_BackgroundSubtractorCNT.getIsParallel", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorCNT::getMaxPixelStability": [{"name": "cv.bgsegm_BackgroundSubtractorCNT.getMaxPixelStability", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorCNT::getMinPixelStability": [{"name": "cv.bgsegm_BackgroundSubtractorCNT.getMinPixelStability", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorCNT::getUseHistory": [{"name": "cv.bgsegm_BackgroundSubtractorCNT.getUseHistory", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorCNT::setIsParallel": [{"name": "cv.bgsegm_BackgroundSubtractorCNT.setIsParallel", "arg": "value", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorCNT::setMaxPixelStability": [{"name": "cv.bgsegm_BackgroundSubtractorCNT.setMaxPixelStability", "arg": "value", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorCNT::setMinPixelStability": [{"name": "cv.bgsegm_BackgroundSubtractorCNT.setMinPixelStability", "arg": "value", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorCNT::setUseHistory": [{"name": "cv.bgsegm_BackgroundSubtractorCNT.setUseHistory", "arg": "value", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorGMG::getBackgroundPrior": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.getBackgroundPrior", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorGMG::getDecisionThreshold": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.getDecisionThreshold", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorGMG::getDefaultLearningRate": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.getDefaultLearningRate", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorGMG::getMaxFeatures": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.getMaxFeatures", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorGMG::getMaxVal": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.getMaxVal", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorGMG::getMinVal": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.getMinVal", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorGMG::getNumFrames": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.getNumFrames", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorGMG::getQuantizationLevels": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.getQuantizationLevels", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorGMG::getSmoothingRadius": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.getSmoothingRadius", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorGMG::getUpdateBackgroundModel": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.getUpdateBackgroundModel", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorGMG::setBackgroundPrior": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.setBackgroundPrior", "arg": "bgprior", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorGMG::setDecisionThreshold": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.setDecisionThreshold", "arg": "thresh", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorGMG::setDefaultLearningRate": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.setDefaultLearningRate", "arg": "lr", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorGMG::setMaxFeatures": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.setMaxFeatures", "arg": "maxFeatures", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorGMG::setMaxVal": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.setMaxVal", "arg": "val", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorGMG::setMinVal": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.setMinVal", "arg": "val", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorGMG::setNumFrames": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.setNumFrames", "arg": "nframes", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorGMG::setQuantizationLevels": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.setQuantizationLevels", "arg": "nlevels", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorGMG::setSmoothingRadius": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.setSmoothingRadius", "arg": "radius", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorGMG::setUpdateBackgroundModel": [{"name": "cv.bgsegm_BackgroundSubtractorGMG.setUpdateBackgroundModel", "arg": "update", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorGSOC::apply": [{"name": "cv.bgsegm_BackgroundSubtractorGSOC.apply", "arg": "image[, fgmask[, learningRate]]", "ret": "fgmask"}], "cv::bgsegm::BackgroundSubtractorGSOC::getBackgroundImage": [{"name": "cv.bgsegm_BackgroundSubtractorGSOC.getBackgroundImage", "arg": "[, backgroundImage]", "ret": "backgroundImage"}], "cv::bgsegm::BackgroundSubtractorLSBP::apply": [{"name": "cv.bgsegm_BackgroundSubtractorLSBP.apply", "arg": "image[, fgmask[, learningRate]]", "ret": "fgmask"}], "cv::bgsegm::BackgroundSubtractorLSBP::getBackgroundImage": [{"name": "cv.bgsegm_BackgroundSubtractorLSBP.getBackgroundImage", "arg": "[, backgroundImage]", "ret": "backgroundImage"}], "cv::bgsegm::BackgroundSubtractorMOG::getBackgroundRatio": [{"name": "cv.bgsegm_BackgroundSubtractorMOG.getBackgroundRatio", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorMOG::getHistory": [{"name": "cv.bgsegm_BackgroundSubtractorMOG.getHistory", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorMOG::getNMixtures": [{"name": "cv.bgsegm_BackgroundSubtractorMOG.getNMixtures", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorMOG::getNoiseSigma": [{"name": "cv.bgsegm_BackgroundSubtractorMOG.getNoiseSigma", "arg": "", "ret": "retval"}], "cv::bgsegm::BackgroundSubtractorMOG::setBackgroundRatio": [{"name": "cv.bgsegm_BackgroundSubtractorMOG.setBackgroundRatio", "arg": "backgroundRatio", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorMOG::setHistory": [{"name": "cv.bgsegm_BackgroundSubtractorMOG.setHistory", "arg": "nframes", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorMOG::setNMixtures": [{"name": "cv.bgsegm_BackgroundSubtractorMOG.setNMixtures", "arg": "nmix", "ret": "None"}], "cv::bgsegm::BackgroundSubtractorMOG::setNoiseSigma": [{"name": "cv.bgsegm_BackgroundSubtractorMOG.setNoiseSigma", "arg": "noiseSigma", "ret": "None"}], "cv::bgsegm::SyntheticSequenceGenerator::SyntheticSequenceGenerator": [{"name": "cv.bgsegm_SyntheticSequenceGenerator", "arg": "background, object, amplitude, wavelength, wavespeed, objspeed", "ret": "<bgsegm_SyntheticSequenceGenerator object>"}], "cv::bgsegm::SyntheticSequenceGenerator::getNextFrame": [{"name": "cv.bgsegm_SyntheticSequenceGenerator.getNextFrame", "arg": "[, frame[, gtMask]]", "ret": "frame, gtMask"}], "cv::bioinspired::Retina::activateContoursProcessing": [{"name": "cv.bioinspired_Retina.activateContoursProcessing", "arg": "activate", "ret": "None"}], "cv::bioinspired::Retina::activateMovingContoursProcessing": [{"name": "cv.bioinspired_Retina.activateMovingContoursProcessing", "arg": "activate", "ret": "None"}], "cv::bioinspired::Retina::applyFastToneMapping": [{"name": "cv.bioinspired_Retina.applyFastToneMapping", "arg": "inputImage[, outputToneMappedImage]", "ret": "outputToneMappedImage"}], "cv::bioinspired::Retina::clearBuffers": [{"name": "cv.bioinspired_Retina.clearBuffers", "arg": "", "ret": "None"}], "cv::bioinspired::Retina::create": [{"name": "cv.bioinspired.Retina_create", "arg": "inputSize", "ret": "retval"}, {"name": "cv.bioinspired.Retina_create", "arg": "inputSize, colorMode[, colorSamplingMethod[, useRetinaLogSampling[, reductionFactor[, samplingStrength]]]]", "ret": "retval"}], "cv::bioinspired::Retina::getInputSize": [{"name": "cv.bioinspired_Retina.getInputSize", "arg": "", "ret": "retval"}], "cv::bioinspired::Retina::getMagno": [{"name": "cv.bioinspired_Retina.getMagno", "arg": "[, retinaOutput_magno]", "ret": "retinaOutput_magno"}], "cv::bioinspired::Retina::getMagnoRAW": [{"name": "cv.bioinspired_Retina.getMagnoRAW", "arg": "[, retinaOutput_magno]", "ret": "retinaOutput_magno"}, {"name": "cv.bioinspired_Retina.getMagnoRAW", "arg": "", "ret": "retval"}], "cv::bioinspired::Retina::getOutputSize": [{"name": "cv.bioinspired_Retina.getOutputSize", "arg": "", "ret": "retval"}], "cv::bioinspired::Retina::getParvo": [{"name": "cv.bioinspired_Retina.getParvo", "arg": "[, retinaOutput_parvo]", "ret": "retinaOutput_parvo"}], "cv::bioinspired::Retina::getParvoRAW": [{"name": "cv.bioinspired_Retina.getParvoRAW", "arg": "[, retinaOutput_parvo]", "ret": "retinaOutput_parvo"}, {"name": "cv.bioinspired_Retina.getParvoRAW", "arg": "", "ret": "retval"}], "cv::bioinspired::Retina::printSetup": [{"name": "cv.bioinspired_Retina.printSetup", "arg": "", "ret": "retval"}], "cv::bioinspired::Retina::run": [{"name": "cv.bioinspired_Retina.run", "arg": "inputImage", "ret": "None"}], "cv::bioinspired::Retina::setColorSaturation": [{"name": "cv.bioinspired_Retina.setColorSaturation", "arg": "[, saturateColors[, colorSaturationValue]]", "ret": "None"}], "cv::bioinspired::Retina::setup": [{"name": "cv.bioinspired_Retina.setup", "arg": "[, retinaParameterFile[, applyDefaultSetupOnFailure]]", "ret": "None"}], "cv::bioinspired::Retina::setupIPLMagnoChannel": [{"name": "cv.bioinspired_Retina.setupIPLMagnoChannel", "arg": "[, normaliseOutput[, parasolCells_beta[, parasolCells_tau[, parasolCells_k[, amacrinCellsTemporalCutFrequency[, V0CompressionParameter[, localAdaptintegration_tau[, localAdaptintegration_k]]]]]]]]", "ret": "None"}], "cv::bioinspired::Retina::setupOPLandIPLParvoChannel": [{"name": "cv.bioinspired_Retina.setupOPLandIPLParvoChannel", "arg": "[, colorMode[, normaliseOutput[, photoreceptorsLocalAdaptationSensitivity[, photoreceptorsTemporalConstant[, photoreceptorsSpatialConstant[, horizontalCellsGain[, HcellsTemporalConstant[, HcellsSpatialConstant[, ganglionCellsSensitivity]]]]]]]]]", "ret": "None"}], "cv::bioinspired::Retina::write": [{"name": "cv.bioinspired_Retina.write", "arg": "fs", "ret": "None"}], "cv::bioinspired::RetinaFastToneMapping::applyFastToneMapping": [{"name": "cv.bioinspired_RetinaFastToneMapping.applyFastToneMapping", "arg": "inputImage[, outputToneMappedImage]", "ret": "outputToneMappedImage"}], "cv::bioinspired::RetinaFastToneMapping::create": [{"name": "cv.bioinspired.RetinaFastToneMapping_create", "arg": "inputSize", "ret": "retval"}], "cv::bioinspired::RetinaFastToneMapping::setup": [{"name": "cv.bioinspired_RetinaFastToneMapping.setup", "arg": "[, photoreceptorsNeighborhoodRadius[, ganglioncellsNeighborhoodRadius[, meanLuminanceModulatorK]]]", "ret": "None"}], "cv::bioinspired::TransientAreasSegmentationModule::clearAllBuffers": [{"name": "cv.bioinspired_TransientAreasSegmentationModule.clearAllBuffers", "arg": "", "ret": "None"}], "cv::bioinspired::TransientAreasSegmentationModule::create": [{"name": "cv.bioinspired.TransientAreasSegmentationModule_create", "arg": "inputSize", "ret": "retval"}], "cv::bioinspired::TransientAreasSegmentationModule::getSegmentationPicture": [{"name": "cv.bioinspired_TransientAreasSegmentationModule.getSegmentationPicture", "arg": "[, transientAreas]", "ret": "transientAreas"}], "cv::bioinspired::TransientAreasSegmentationModule::getSize": [{"name": "cv.bioinspired_TransientAreasSegmentationModule.getSize", "arg": "", "ret": "retval"}], "cv::bioinspired::TransientAreasSegmentationModule::printSetup": [{"name": "cv.bioinspired_TransientAreasSegmentationModule.printSetup", "arg": "", "ret": "retval"}], "cv::bioinspired::TransientAreasSegmentationModule::run": [{"name": "cv.bioinspired_TransientAreasSegmentationModule.run", "arg": "inputToSegment[, channelIndex]", "ret": "None"}], "cv::bioinspired::TransientAreasSegmentationModule::setup": [{"name": "cv.bioinspired_TransientAreasSegmentationModule.setup", "arg": "[, segmentationParameterFile[, applyDefaultSetupOnFailure]]", "ret": "None"}], "cv::bioinspired::TransientAreasSegmentationModule::write": [{"name": "cv.bioinspired_TransientAreasSegmentationModule.write", "arg": "fs", "ret": "None"}], "cv::cuda::BufferPool::getAllocator": [{"name": "cv.cuda_BufferPool.getAllocator", "arg": "", "ret": "retval"}], "cv::cuda::BufferPool::getBuffer": [{"name": "cv.cuda_BufferPool.getBuffer", "arg": "rows, cols, type", "ret": "retval"}, {"name": "cv.cuda_BufferPool.getBuffer", "arg": "size, type", "ret": "retval"}], "cv::cuda::DeviceInfo::DeviceInfo": [{"name": "cv.cuda_DeviceInfo", "arg": "", "ret": "<cuda_DeviceInfo object>"}, {"name": "cv.cuda_DeviceInfo", "arg": "device_id", "ret": "<cuda_DeviceInfo object>"}], "cv::cuda::DeviceInfo::ECCEnabled": [{"name": "cv.cuda_DeviceInfo.ECCEnabled", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::asyncEngineCount": [{"name": "cv.cuda_DeviceInfo.asyncEngineCount", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::canMapHostMemory": [{"name": "cv.cuda_DeviceInfo.canMapHostMemory", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::clockRate": [{"name": "cv.cuda_DeviceInfo.clockRate", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::computeMode": [{"name": "cv.cuda_DeviceInfo.computeMode", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::concurrentKernels": [{"name": "cv.cuda_DeviceInfo.concurrentKernels", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::deviceID": [{"name": "cv.cuda_DeviceInfo.deviceID", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::freeMemory": [{"name": "cv.cuda_DeviceInfo.freeMemory", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::integrated": [{"name": "cv.cuda_DeviceInfo.integrated", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::isCompatible": [{"name": "cv.cuda_DeviceInfo.isCompatible", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::kernelExecTimeoutEnabled": [{"name": "cv.cuda_DeviceInfo.kernelExecTimeoutEnabled", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::l2CacheSize": [{"name": "cv.cuda_DeviceInfo.l2CacheSize", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::majorVersion": [{"name": "cv.cuda_DeviceInfo.majorVersion", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxGridSize": [{"name": "cv.cuda_DeviceInfo.maxGridSize", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxSurface1D": [{"name": "cv.cuda_DeviceInfo.maxSurface1D", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxSurface1DLayered": [{"name": "cv.cuda_DeviceInfo.maxSurface1DLayered", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxSurface2D": [{"name": "cv.cuda_DeviceInfo.maxSurface2D", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxSurface2DLayered": [{"name": "cv.cuda_DeviceInfo.maxSurface2DLayered", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxSurface3D": [{"name": "cv.cuda_DeviceInfo.maxSurface3D", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxSurfaceCubemap": [{"name": "cv.cuda_DeviceInfo.maxSurfaceCubemap", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxSurfaceCubemapLayered": [{"name": "cv.cuda_DeviceInfo.maxSurfaceCubemapLayered", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxTexture1D": [{"name": "cv.cuda_DeviceInfo.maxTexture1D", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxTexture1DLayered": [{"name": "cv.cuda_DeviceInfo.maxTexture1DLayered", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxTexture1DLinear": [{"name": "cv.cuda_DeviceInfo.maxTexture1DLinear", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxTexture1DMipmap": [{"name": "cv.cuda_DeviceInfo.maxTexture1DMipmap", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxTexture2D": [{"name": "cv.cuda_DeviceInfo.maxTexture2D", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxTexture2DGather": [{"name": "cv.cuda_DeviceInfo.maxTexture2DGather", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxTexture2DLayered": [{"name": "cv.cuda_DeviceInfo.maxTexture2DLayered", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxTexture2DLinear": [{"name": "cv.cuda_DeviceInfo.maxTexture2DLinear", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxTexture2DMipmap": [{"name": "cv.cuda_DeviceInfo.maxTexture2DMipmap", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxTexture3D": [{"name": "cv.cuda_DeviceInfo.maxTexture3D", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxTextureCubemap": [{"name": "cv.cuda_DeviceInfo.maxTextureCubemap", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxTextureCubemapLayered": [{"name": "cv.cuda_DeviceInfo.maxTextureCubemapLayered", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxThreadsDim": [{"name": "cv.cuda_DeviceInfo.maxThreadsDim", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxThreadsPerBlock": [{"name": "cv.cuda_DeviceInfo.maxThreadsPerBlock", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::maxThreadsPerMultiProcessor": [{"name": "cv.cuda_DeviceInfo.maxThreadsPerMultiProcessor", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::memPitch": [{"name": "cv.cuda_DeviceInfo.memPitch", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::memoryBusWidth": [{"name": "cv.cuda_DeviceInfo.memoryBusWidth", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::memoryClockRate": [{"name": "cv.cuda_DeviceInfo.memoryClockRate", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::minorVersion": [{"name": "cv.cuda_DeviceInfo.minorVersion", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::multiProcessorCount": [{"name": "cv.cuda_DeviceInfo.multiProcessorCount", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::pciBusID": [{"name": "cv.cuda_DeviceInfo.pciBusID", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::pciDeviceID": [{"name": "cv.cuda_DeviceInfo.pciDeviceID", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::pciDomainID": [{"name": "cv.cuda_DeviceInfo.pciDomainID", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::queryMemory": [{"name": "cv.cuda_DeviceInfo.queryMemory", "arg": "totalMemory, freeMemory", "ret": "None"}], "cv::cuda::DeviceInfo::regsPerBlock": [{"name": "cv.cuda_DeviceInfo.regsPerBlock", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::sharedMemPerBlock": [{"name": "cv.cuda_DeviceInfo.sharedMemPerBlock", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::surfaceAlignment": [{"name": "cv.cuda_DeviceInfo.surfaceAlignment", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::tccDriver": [{"name": "cv.cuda_DeviceInfo.tccDriver", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::textureAlignment": [{"name": "cv.cuda_DeviceInfo.textureAlignment", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::texturePitchAlignment": [{"name": "cv.cuda_DeviceInfo.texturePitchAlignment", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::totalConstMem": [{"name": "cv.cuda_DeviceInfo.totalConstMem", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::totalGlobalMem": [{"name": "cv.cuda_DeviceInfo.totalGlobalMem", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::totalMemory": [{"name": "cv.cuda_DeviceInfo.totalMemory", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::unifiedAddressing": [{"name": "cv.cuda_DeviceInfo.unifiedAddressing", "arg": "", "ret": "retval"}], "cv::cuda::DeviceInfo::warpSize": [{"name": "cv.cuda_DeviceInfo.warpSize", "arg": "", "ret": "retval"}], "cv::cuda::Event::Event": [{"name": "cv.cuda_Event", "arg": "[, flags]", "ret": "<cuda_Event object>"}], "cv::cuda::Event::elapsedTime": [{"name": "cv.cuda.Event_elapsedTime", "arg": "start, end", "ret": "retval"}], "cv::cuda::Event::queryIfComplete": [{"name": "cv.cuda_Event.queryIfComplete", "arg": "", "ret": "retval"}], "cv::cuda::Event::record": [{"name": "cv.cuda_Event.record", "arg": "[, stream]", "ret": "None"}], "cv::cuda::Event::waitForCompletion": [{"name": "cv.cuda_Event.waitForCompletion", "arg": "", "ret": "None"}], "cv::cuda::GpuMat::GpuMat": [{"name": "cv.cuda_GpuMat", "arg": "[, allocator]", "ret": "<cuda_GpuMat object>"}, {"name": "cv.cuda_GpuMat", "arg": "rows, cols, type[, allocator]", "ret": "<cuda_GpuMat object>"}, {"name": "cv.cuda_GpuMat", "arg": "size, type[, allocator]", "ret": "<cuda_GpuMat object>"}, {"name": "cv.cuda_GpuMat", "arg": "rows, cols, type, s[, allocator]", "ret": "<cuda_GpuMat object>"}, {"name": "cv.cuda_GpuMat", "arg": "size, type, s[, allocator]", "ret": "<cuda_GpuMat object>"}, {"name": "cv.cuda_GpuMat", "arg": "m", "ret": "<cuda_GpuMat object>"}, {"name": "cv.cuda_GpuMat", "arg": "m, rowRange, colRange", "ret": "<cuda_GpuMat object>"}, {"name": "cv.cuda_GpuMat", "arg": "m, roi", "ret": "<cuda_GpuMat object>"}, {"name": "cv.cuda_GpuMat", "arg": "arr[, allocator]", "ret": "<cuda_GpuMat object>"}], "cv::cuda::GpuMat::adjustROI": [{"name": "cv.cuda_GpuMat.adjustROI", "arg": "dtop, dbottom, dleft, dright", "ret": "retval"}], "cv::cuda::GpuMat::assignTo": [{"name": "cv.cuda_GpuMat.assignTo", "arg": "m[, type]", "ret": "None"}], "cv::cuda::GpuMat::channels": [{"name": "cv.cuda_GpuMat.channels", "arg": "", "ret": "retval"}], "cv::cuda::GpuMat::clone": [{"name": "cv.cuda_GpuMat.clone", "arg": "", "ret": "retval"}], "cv::cuda::GpuMat::col": [{"name": "cv.cuda_GpuMat.col", "arg": "x", "ret": "retval"}], "cv::cuda::GpuMat::colRange": [{"name": "cv.cuda_GpuMat.colRange", "arg": "startcol, endcol", "ret": "retval"}, {"name": "cv.cuda_GpuMat.colRange", "arg": "r", "ret": "retval"}], "cv::cuda::GpuMat::convertTo": [{"name": "cv.cuda_GpuMat.convertTo", "arg": "rtype[, dst]", "ret": "dst"}, {"name": "cv.cuda_GpuMat.convertTo", "arg": "rtype, stream[, dst]", "ret": "dst"}, {"name": "cv.cuda_GpuMat.convertTo", "arg": "rtype, alpha[, dst[, beta]]", "ret": "dst"}, {"name": "cv.cuda_GpuMat.convertTo", "arg": "rtype, alpha, stream[, dst]", "ret": "dst"}, {"name": "cv.cuda_GpuMat.convertTo", "arg": "rtype, alpha, beta, stream[, dst]", "ret": "dst"}], "cv::cuda::GpuMat::copyTo": [{"name": "cv.cuda_GpuMat.copyTo", "arg": "[, dst]", "ret": "dst"}, {"name": "cv.cuda_GpuMat.copyTo", "arg": "stream[, dst]", "ret": "dst"}, {"name": "cv.cuda_GpuMat.copyTo", "arg": "mask[, dst]", "ret": "dst"}, {"name": "cv.cuda_GpuMat.copyTo", "arg": "mask, stream[, dst]", "ret": "dst"}], "cv::cuda::GpuMat::create": [{"name": "cv.cuda_GpuMat.create", "arg": "rows, cols, type", "ret": "None"}, {"name": "cv.cuda_GpuMat.create", "arg": "size, type", "ret": "None"}], "cv::cuda::GpuMat::cudaPtr": [{"name": "cv.cuda_GpuMat.cudaPtr", "arg": "", "ret": "retval"}], "cv::cuda::GpuMat::defaultAllocator": [{"name": "cv.cuda.GpuMat_defaultAllocator", "arg": "", "ret": "retval"}], "cv::cuda::GpuMat::depth": [{"name": "cv.cuda_GpuMat.depth", "arg": "", "ret": "retval"}], "cv::cuda::GpuMat::download": [{"name": "cv.cuda_GpuMat.download", "arg": "[, dst]", "ret": "dst"}, {"name": "cv.cuda_GpuMat.download", "arg": "stream[, dst]", "ret": "dst"}], "cv::cuda::GpuMat::elemSize": [{"name": "cv.cuda_GpuMat.elemSize", "arg": "", "ret": "retval"}], "cv::cuda::GpuMat::elemSize1": [{"name": "cv.cuda_GpuMat.elemSize1", "arg": "", "ret": "retval"}], "cv::cuda::GpuMat::empty": [{"name": "cv.cuda_GpuMat.empty", "arg": "", "ret": "retval"}], "cv::cuda::GpuMat::isContinuous": [{"name": "cv.cuda_GpuMat.isContinuous", "arg": "", "ret": "retval"}], "cv::cuda::GpuMat::locateROI": [{"name": "cv.cuda_GpuMat.locateROI", "arg": "wholeSize, ofs", "ret": "None"}], "cv::cuda::GpuMat::reshape": [{"name": "cv.cuda_GpuMat.reshape", "arg": "cn[, rows]", "ret": "retval"}], "cv::cuda::GpuMat::row": [{"name": "cv.cuda_GpuMat.row", "arg": "y", "ret": "retval"}], "cv::cuda::GpuMat::rowRange": [{"name": "cv.cuda_GpuMat.rowRange", "arg": "startrow, endrow", "ret": "retval"}, {"name": "cv.cuda_GpuMat.rowRange", "arg": "r", "ret": "retval"}], "cv::cuda::GpuMat::setDefaultAllocator": [{"name": "cv.cuda.GpuMat_setDefaultAllocator", "arg": "allocator", "ret": "None"}], "cv::cuda::GpuMat::setTo": [{"name": "cv.cuda_GpuMat.setTo", "arg": "s", "ret": "retval"}, {"name": "cv.cuda_GpuMat.setTo", "arg": "s, stream", "ret": "retval"}, {"name": "cv.cuda_GpuMat.setTo", "arg": "s, mask", "ret": "retval"}, {"name": "cv.cuda_GpuMat.setTo", "arg": "s, mask, stream", "ret": "retval"}], "cv::cuda::GpuMat::size": [{"name": "cv.cuda_GpuMat.size", "arg": "", "ret": "retval"}], "cv::cuda::GpuMat::step1": [{"name": "cv.cuda_GpuMat.step1", "arg": "", "ret": "retval"}], "cv::cuda::GpuMat::swap": [{"name": "cv.cuda_GpuMat.swap", "arg": "mat", "ret": "None"}], "cv::cuda::GpuMat::type": [{"name": "cv.cuda_GpuMat.type", "arg": "", "ret": "retval"}], "cv::cuda::GpuMat::updateContinuityFlag": [{"name": "cv.cuda_GpuMat.updateContinuityFlag", "arg": "", "ret": "None"}], "cv::cuda::GpuMat::upload": [{"name": "cv.cuda_GpuMat.upload", "arg": "arr", "ret": "None"}, {"name": "cv.cuda_GpuMat.upload", "arg": "arr, stream", "ret": "None"}], "cv::cuda::HostMem::HostMem": [{"name": "cv.cuda_HostMem", "arg": "[, alloc_type]", "ret": "<cuda_HostMem object>"}, {"name": "cv.cuda_HostMem", "arg": "rows, cols, type[, alloc_type]", "ret": "<cuda_HostMem object>"}, {"name": "cv.cuda_HostMem", "arg": "size, type[, alloc_type]", "ret": "<cuda_HostMem object>"}, {"name": "cv.cuda_HostMem", "arg": "arr[, alloc_type]", "ret": "<cuda_HostMem object>"}], "cv::cuda::HostMem::channels": [{"name": "cv.cuda_HostMem.channels", "arg": "", "ret": "retval"}], "cv::cuda::HostMem::clone": [{"name": "cv.cuda_HostMem.clone", "arg": "", "ret": "retval"}], "cv::cuda::HostMem::create": [{"name": "cv.cuda_HostMem.create", "arg": "rows, cols, type", "ret": "None"}], "cv::cuda::HostMem::createMatHeader": [{"name": "cv.cuda_HostMem.createMatHeader", "arg": "", "ret": "retval"}], "cv::cuda::HostMem::depth": [{"name": "cv.cuda_HostMem.depth", "arg": "", "ret": "retval"}], "cv::cuda::HostMem::elemSize": [{"name": "cv.cuda_HostMem.elemSize", "arg": "", "ret": "retval"}], "cv::cuda::HostMem::elemSize1": [{"name": "cv.cuda_HostMem.elemSize1", "arg": "", "ret": "retval"}], "cv::cuda::HostMem::empty": [{"name": "cv.cuda_HostMem.empty", "arg": "", "ret": "retval"}], "cv::cuda::HostMem::isContinuous": [{"name": "cv.cuda_HostMem.isContinuous", "arg": "", "ret": "retval"}], "cv::cuda::HostMem::reshape": [{"name": "cv.cuda_HostMem.reshape", "arg": "cn[, rows]", "ret": "retval"}], "cv::cuda::HostMem::size": [{"name": "cv.cuda_HostMem.size", "arg": "", "ret": "retval"}], "cv::cuda::HostMem::step1": [{"name": "cv.cuda_HostMem.step1", "arg": "", "ret": "retval"}], "cv::cuda::HostMem::swap": [{"name": "cv.cuda_HostMem.swap", "arg": "b", "ret": "None"}], "cv::cuda::HostMem::type": [{"name": "cv.cuda_HostMem.type", "arg": "", "ret": "retval"}], "cv::cuda::SURF_CUDA::create": [{"name": "cv.cuda.SURF_CUDA_create", "arg": "_hessianThreshold[, _nOctaves[, _nOctaveLayers[, _extended[, _keypointsRatio[, _upright]]]]]", "ret": "retval"}], "cv::cuda::SURF_CUDA::defaultNorm": [{"name": "cv.cuda_SURF_CUDA.defaultNorm", "arg": "", "ret": "retval"}], "cv::cuda::SURF_CUDA::descriptorSize": [{"name": "cv.cuda_SURF_CUDA.descriptorSize", "arg": "", "ret": "retval"}], "cv::cuda::SURF_CUDA::detect": [{"name": "cv.cuda_SURF_CUDA.detect", "arg": "img, mask[, keypoints]", "ret": "keypoints"}], "cv::cuda::SURF_CUDA::detectWithDescriptors": [{"name": "cv.cuda_SURF_CUDA.detectWithDescriptors", "arg": "img, mask[, keypoints[, descriptors[, useProvidedKeypoints]]]", "ret": "keypoints, descriptors"}], "cv::cuda::SURF_CUDA::downloadKeypoints": [{"name": "cv.cuda_SURF_CUDA.downloadKeypoints", "arg": "keypointsGPU", "ret": "keypoints"}], "cv::cuda::Stream::Stream": [{"name": "cv.cuda_Stream", "arg": "", "ret": "<cuda_Stream object>"}, {"name": "cv.cuda_Stream", "arg": "allocator", "ret": "<cuda_Stream object>"}], "cv::cuda::Stream::Null": [{"name": "cv.cuda.Stream_Null", "arg": "", "ret": "retval"}], "cv::cuda::Stream::cudaPtr": [{"name": "cv.cuda_Stream.cudaPtr", "arg": "", "ret": "retval"}], "cv::cuda::Stream::queryIfComplete": [{"name": "cv.cuda_Stream.queryIfComplete", "arg": "", "ret": "retval"}], "cv::cuda::Stream::waitEvent": [{"name": "cv.cuda_Stream.waitEvent", "arg": "event", "ret": "None"}], "cv::cuda::Stream::waitForCompletion": [{"name": "cv.cuda_Stream.waitForCompletion", "arg": "", "ret": "None"}], "cv::cuda::TargetArchs::has": [{"name": "cv.cuda.TargetArchs_has", "arg": "major, minor", "ret": "retval"}], "cv::cuda::TargetArchs::hasBin": [{"name": "cv.cuda.TargetArchs_hasBin", "arg": "major, minor", "ret": "retval"}], "cv::cuda::TargetArchs::hasEqualOrGreater": [{"name": "cv.cuda.TargetArchs_hasEqualOrGreater", "arg": "major, minor", "ret": "retval"}], "cv::cuda::TargetArchs::hasEqualOrGreaterBin": [{"name": "cv.cuda.TargetArchs_hasEqualOrGreaterBin", "arg": "major, minor", "ret": "retval"}], "cv::cuda::TargetArchs::hasEqualOrGreaterPtx": [{"name": "cv.cuda.TargetArchs_hasEqualOrGreaterPtx", "arg": "major, minor", "ret": "retval"}], "cv::cuda::TargetArchs::hasEqualOrLessPtx": [{"name": "cv.cuda.TargetArchs_hasEqualOrLessPtx", "arg": "major, minor", "ret": "retval"}], "cv::cuda::TargetArchs::hasPtx": [{"name": "cv.cuda.TargetArchs_hasPtx", "arg": "major, minor", "ret": "retval"}], "cv::detail::AffineBasedEstimator::AffineBasedEstimator": [{"name": "cv.detail_AffineBasedEstimator", "arg": "", "ret": "<detail_AffineBasedEstimator object>"}], "cv::detail::AffineBestOf2NearestMatcher::AffineBestOf2NearestMatcher": [{"name": "cv.detail_AffineBestOf2NearestMatcher", "arg": "[, full_affine[, try_use_gpu[, match_conf[, num_matches_thresh1]]]]", "ret": "<detail_AffineBestOf2NearestMatcher object>"}], "cv::detail::BestOf2NearestMatcher::BestOf2NearestMatcher": [{"name": "cv.detail_BestOf2NearestMatcher", "arg": "[, try_use_gpu[, match_conf[, num_matches_thresh1[, num_matches_thresh2]]]]", "ret": "<detail_BestOf2NearestMatcher object>"}], "cv::detail::BestOf2NearestMatcher::collectGarbage": [{"name": "cv.detail_BestOf2NearestMatcher.collectGarbage", "arg": "", "ret": "None"}], "cv::detail::BestOf2NearestMatcher::create": [{"name": "cv.detail.BestOf2NearestMatcher_create", "arg": "[, try_use_gpu[, match_conf[, num_matches_thresh1[, num_matches_thresh2]]]]", "ret": "retval"}], "cv::detail::BestOf2NearestRangeMatcher::BestOf2NearestRangeMatcher": [{"name": "cv.detail_BestOf2NearestRangeMatcher", "arg": "[, range_width[, try_use_gpu[, match_conf[, num_matches_thresh1[, num_matches_thresh2]]]]]", "ret": "<detail_BestOf2NearestRangeMatcher object>"}], "cv::detail::Blender::blend": [{"name": "cv.detail_Blender.blend", "arg": "dst, dst_mask", "ret": "dst, dst_mask"}], "cv::detail::Blender::createDefault": [{"name": "cv.detail.Blender_createDefault", "arg": "type[, try_gpu]", "ret": "retval"}], "cv::detail::Blender::feed": [{"name": "cv.detail_Blender.feed", "arg": "img, mask, tl", "ret": "None"}], "cv::detail::Blender::prepare": [{"name": "cv.detail_Blender.prepare", "arg": "corners, sizes", "ret": "None"}, {"name": "cv.detail_Blender.prepare", "arg": "dst_roi", "ret": "None"}], "cv::detail::BlocksChannelsCompensator::BlocksChannelsCompensator": [{"name": "cv.detail_BlocksChannelsCompensator", "arg": "[, bl_width[, bl_height[, nr_feeds]]]", "ret": "<detail_BlocksChannelsCompensator object>"}], "cv::detail::BlocksCompensator::apply": [{"name": "cv.detail_BlocksCompensator.apply", "arg": "index, corner, image, mask", "ret": "image"}], "cv::detail::BlocksCompensator::getBlockSize": [{"name": "cv.detail_BlocksCompensator.getBlockSize", "arg": "", "ret": "retval"}], "cv::detail::BlocksCompensator::getMatGains": [{"name": "cv.detail_BlocksCompensator.getMatGains", "arg": "[, umv]", "ret": "umv"}], "cv::detail::BlocksCompensator::getNrFeeds": [{"name": "cv.detail_BlocksCompensator.getNrFeeds", "arg": "", "ret": "retval"}], "cv::detail::BlocksCompensator::getNrGainsFilteringIterations": [{"name": "cv.detail_BlocksCompensator.getNrGainsFilteringIterations", "arg": "", "ret": "retval"}], "cv::detail::BlocksCompensator::setBlockSize": [{"name": "cv.detail_BlocksCompensator.setBlockSize", "arg": "width, height", "ret": "None"}, {"name": "cv.detail_BlocksCompensator.setBlockSize", "arg": "size", "ret": "None"}], "cv::detail::BlocksCompensator::setMatGains": [{"name": "cv.detail_BlocksCompensator.setMatGains", "arg": "umv", "ret": "None"}], "cv::detail::BlocksCompensator::setNrFeeds": [{"name": "cv.detail_BlocksCompensator.setNrFeeds", "arg": "nr_feeds", "ret": "None"}], "cv::detail::BlocksCompensator::setNrGainsFilteringIterations": [{"name": "cv.detail_BlocksCompensator.setNrGainsFilteringIterations", "arg": "nr_iterations", "ret": "None"}], "cv::detail::BlocksGainCompensator::BlocksGainCompensator": [{"name": "cv.detail_BlocksGainCompensator", "arg": "[, bl_width[, bl_height]]", "ret": "<detail_BlocksGainCompensator object>"}, {"name": "cv.detail_BlocksGainCompensator", "arg": "bl_width, bl_height, nr_feeds", "ret": "<detail_BlocksGainCompensator object>"}], "cv::detail::BlocksGainCompensator::apply": [{"name": "cv.detail_BlocksGainCompensator.apply", "arg": "index, corner, image, mask", "ret": "image"}], "cv::detail::BlocksGainCompensator::getMatGains": [{"name": "cv.detail_BlocksGainCompensator.getMatGains", "arg": "[, umv]", "ret": "umv"}], "cv::detail::BlocksGainCompensator::setMatGains": [{"name": "cv.detail_BlocksGainCompensator.setMatGains", "arg": "umv", "ret": "None"}], "cv::detail::BundleAdjusterAffine::BundleAdjusterAffine": [{"name": "cv.detail_BundleAdjusterAffine", "arg": "", "ret": "<detail_BundleAdjusterAffine object>"}], "cv::detail::BundleAdjusterAffinePartial::BundleAdjusterAffinePartial": [{"name": "cv.detail_BundleAdjusterAffinePartial", "arg": "", "ret": "<detail_BundleAdjusterAffinePartial object>"}], "cv::detail::BundleAdjusterBase::confThresh": [{"name": "cv.detail_BundleAdjusterBase.confThresh", "arg": "", "ret": "retval"}], "cv::detail::BundleAdjusterBase::refinementMask": [{"name": "cv.detail_BundleAdjusterBase.refinementMask", "arg": "", "ret": "retval"}], "cv::detail::BundleAdjusterBase::setConfThresh": [{"name": "cv.detail_BundleAdjusterBase.setConfThresh", "arg": "conf_thresh", "ret": "None"}], "cv::detail::BundleAdjusterBase::setRefinementMask": [{"name": "cv.detail_BundleAdjusterBase.setRefinementMask", "arg": "mask", "ret": "None"}], "cv::detail::BundleAdjusterBase::setTermCriteria": [{"name": "cv.detail_BundleAdjusterBase.setTermCriteria", "arg": "term_criteria", "ret": "None"}], "cv::detail::BundleAdjusterBase::termCriteria": [{"name": "cv.detail_BundleAdjusterBase.termCriteria", "arg": "", "ret": "retval"}], "cv::detail::BundleAdjusterRay::BundleAdjusterRay": [{"name": "cv.detail_BundleAdjusterRay", "arg": "", "ret": "<detail_BundleAdjusterRay object>"}], "cv::detail::BundleAdjusterReproj::BundleAdjusterReproj": [{"name": "cv.detail_BundleAdjusterReproj", "arg": "", "ret": "<detail_BundleAdjusterReproj object>"}], "cv::detail::CameraParams::K": [{"name": "cv.detail_CameraParams.K", "arg": "", "ret": "retval"}], "cv::detail::ChannelsCompensator::ChannelsCompensator": [{"name": "cv.detail_ChannelsCompensator", "arg": "[, nr_feeds]", "ret": "<detail_ChannelsCompensator object>"}], "cv::detail::ChannelsCompensator::apply": [{"name": "cv.detail_ChannelsCompensator.apply", "arg": "index, corner, image, mask", "ret": "image"}], "cv::detail::ChannelsCompensator::getMatGains": [{"name": "cv.detail_ChannelsCompensator.getMatGains", "arg": "[, umv]", "ret": "umv"}], "cv::detail::ChannelsCompensator::getNrFeeds": [{"name": "cv.detail_ChannelsCompensator.getNrFeeds", "arg": "", "ret": "retval"}], "cv::detail::ChannelsCompensator::setMatGains": [{"name": "cv.detail_ChannelsCompensator.setMatGains", "arg": "umv", "ret": "None"}], "cv::detail::ChannelsCompensator::setNrFeeds": [{"name": "cv.detail_ChannelsCompensator.setNrFeeds", "arg": "nr_feeds", "ret": "None"}], "cv::detail::DpSeamFinder::DpSeamFinder": [{"name": "cv.detail_DpSeamFinder", "arg": "costFunc", "ret": "<detail_DpSeamFinder object>"}], "cv::detail::DpSeamFinder::setCostFunction": [{"name": "cv.detail_DpSeamFinder.setCostFunction", "arg": "val", "ret": "None"}], "cv::detail::Estimator::operator ()": [{"name": "cv.detail_Estimator.apply", "arg": "features, pairwise_matches, cameras", "ret": "retval, cameras"}], "cv::detail::ExposureCompensator::apply": [{"name": "cv.detail_ExposureCompensator.apply", "arg": "index, corner, image, mask", "ret": "image"}], "cv::detail::ExposureCompensator::createDefault": [{"name": "cv.detail.ExposureCompensator_createDefault", "arg": "type", "ret": "retval"}], "cv::detail::ExposureCompensator::feed": [{"name": "cv.detail_ExposureCompensator.feed", "arg": "corners, images, masks", "ret": "None"}], "cv::detail::ExposureCompensator::getMatGains": [{"name": "cv.detail_ExposureCompensator.getMatGains", "arg": "[, arg1]", "ret": "arg1"}], "cv::detail::ExposureCompensator::getUpdateGain": [{"name": "cv.detail_ExposureCompensator.getUpdateGain", "arg": "", "ret": "retval"}], "cv::detail::ExposureCompensator::setMatGains": [{"name": "cv.detail_ExposureCompensator.setMatGains", "arg": "arg1", "ret": "None"}], "cv::detail::ExposureCompensator::setUpdateGain": [{"name": "cv.detail_ExposureCompensator.setUpdateGain", "arg": "b", "ret": "None"}], "cv::detail::FeatherBlender::FeatherBlender": [{"name": "cv.detail_FeatherBlender", "arg": "[, sharpness]", "ret": "<detail_FeatherBlender object>"}], "cv::detail::FeatherBlender::blend": [{"name": "cv.detail_FeatherBlender.blend", "arg": "dst, dst_mask", "ret": "dst, dst_mask"}], "cv::detail::FeatherBlender::createWeightMaps": [{"name": "cv.detail_FeatherBlender.createWeightMaps", "arg": "masks, corners, weight_maps", "ret": "retval, weight_maps"}], "cv::detail::FeatherBlender::feed": [{"name": "cv.detail_FeatherBlender.feed", "arg": "img, mask, tl", "ret": "None"}], "cv::detail::FeatherBlender::prepare": [{"name": "cv.detail_FeatherBlender.prepare", "arg": "dst_roi", "ret": "None"}], "cv::detail::FeatherBlender::setSharpness": [{"name": "cv.detail_FeatherBlender.setSharpness", "arg": "val", "ret": "None"}], "cv::detail::FeatherBlender::sharpness": [{"name": "cv.detail_FeatherBlender.sharpness", "arg": "", "ret": "retval"}], "cv::detail::FeaturesMatcher::operator ()": [{"name": "cv.detail_FeaturesMatcher.apply", "arg": "features1, features2", "ret": "matches_info"}, {"name": "cv.detail_FeaturesMatcher.apply2", "arg": "features[, mask]", "ret": "pairwise_matches"}], "cv::detail::FeaturesMatcher::collectGarbage": [{"name": "cv.detail_FeaturesMatcher.collectGarbage", "arg": "", "ret": "None"}], "cv::detail::FeaturesMatcher::isThreadSafe": [{"name": "cv.detail_FeaturesMatcher.isThreadSafe", "arg": "", "ret": "retval"}], "cv::detail::GainCompensator::GainCompensator": [{"name": "cv.detail_GainCompensator", "arg": "", "ret": "<detail_GainCompensator object>"}, {"name": "cv.detail_GainCompensator", "arg": "nr_feeds", "ret": "<detail_GainCompensator object>"}], "cv::detail::GainCompensator::apply": [{"name": "cv.detail_GainCompensator.apply", "arg": "index, corner, image, mask", "ret": "image"}], "cv::detail::GainCompensator::getMatGains": [{"name": "cv.detail_GainCompensator.getMatGains", "arg": "[, umv]", "ret": "umv"}], "cv::detail::GainCompensator::getNrFeeds": [{"name": "cv.detail_GainCompensator.getNrFeeds", "arg": "", "ret": "retval"}], "cv::detail::GainCompensator::setMatGains": [{"name": "cv.detail_GainCompensator.setMatGains", "arg": "umv", "ret": "None"}], "cv::detail::GainCompensator::setNrFeeds": [{"name": "cv.detail_GainCompensator.setNrFeeds", "arg": "nr_feeds", "ret": "None"}], "cv::detail::GraphCutSeamFinder::GraphCutSeamFinder": [{"name": "cv.detail_GraphCutSeamFinder", "arg": "cost_type[, terminal_cost[, bad_region_penalty]]", "ret": "<detail_GraphCutSeamFinder object>"}], "cv::detail::GraphCutSeamFinder::find": [{"name": "cv.detail_GraphCutSeamFinder.find", "arg": "src, corners, masks", "ret": "None"}], "cv::detail::HomographyBasedEstimator::HomographyBasedEstimator": [{"name": "cv.detail_HomographyBasedEstimator", "arg": "[, is_focals_estimated]", "ret": "<detail_HomographyBasedEstimator object>"}], "cv::detail::ImageFeatures::getKeypoints": [{"name": "cv.detail_ImageFeatures.getKeypoints", "arg": "", "ret": "retval"}], "cv::detail::MatchesInfo::getInliers": [{"name": "cv.detail_MatchesInfo.getInliers", "arg": "", "ret": "retval"}], "cv::detail::MatchesInfo::getMatches": [{"name": "cv.detail_MatchesInfo.getMatches", "arg": "", "ret": "retval"}], "cv::detail::MultiBandBlender::MultiBandBlender": [{"name": "cv.detail_MultiBandBlender", "arg": "[, try_gpu[, num_bands[, weight_type]]]", "ret": "<detail_MultiBandBlender object>"}], "cv::detail::MultiBandBlender::blend": [{"name": "cv.detail_MultiBandBlender.blend", "arg": "dst, dst_mask", "ret": "dst, dst_mask"}], "cv::detail::MultiBandBlender::feed": [{"name": "cv.detail_MultiBandBlender.feed", "arg": "img, mask, tl", "ret": "None"}], "cv::detail::MultiBandBlender::numBands": [{"name": "cv.detail_MultiBandBlender.numBands", "arg": "", "ret": "retval"}], "cv::detail::MultiBandBlender::prepare": [{"name": "cv.detail_MultiBandBlender.prepare", "arg": "dst_roi", "ret": "None"}], "cv::detail::MultiBandBlender::setNumBands": [{"name": "cv.detail_MultiBandBlender.setNumBands", "arg": "val", "ret": "None"}], "cv::detail::NoBundleAdjuster::NoBundleAdjuster": [{"name": "cv.detail_NoBundleAdjuster", "arg": "", "ret": "<detail_NoBundleAdjuster object>"}], "cv::detail::NoExposureCompensator::apply": [{"name": "cv.detail_NoExposureCompensator.apply", "arg": "arg1, arg2, arg3, arg4", "ret": "arg3"}], "cv::detail::NoExposureCompensator::getMatGains": [{"name": "cv.detail_NoExposureCompensator.getMatGains", "arg": "[, umv]", "ret": "umv"}], "cv::detail::NoExposureCompensator::setMatGains": [{"name": "cv.detail_NoExposureCompensator.setMatGains", "arg": "umv", "ret": "None"}], "cv::detail::NoSeamFinder::find": [{"name": "cv.detail_NoSeamFinder.find", "arg": "arg1, arg2, arg3", "ret": "arg3"}], "cv::detail::PairwiseSeamFinder::find": [{"name": "cv.detail_PairwiseSeamFinder.find", "arg": "src, corners, masks", "ret": "masks"}], "cv::detail::SeamFinder::createDefault": [{"name": "cv.detail.SeamFinder_createDefault", "arg": "type", "ret": "retval"}], "cv::detail::SeamFinder::find": [{"name": "cv.detail_SeamFinder.find", "arg": "src, corners, masks", "ret": "masks"}], "cv::detail::SphericalProjector::mapBackward": [{"name": "cv.detail_SphericalProjector.mapBackward", "arg": "u, v, x, y", "ret": "None"}], "cv::detail::SphericalProjector::mapForward": [{"name": "cv.detail_SphericalProjector.mapForward", "arg": "x, y, u, v", "ret": "None"}], "cv::detail::Timelapser::createDefault": [{"name": "cv.detail.Timelapser_createDefault", "arg": "type", "ret": "retval"}], "cv::detail::Timelapser::getDst": [{"name": "cv.detail_Timelapser.getDst", "arg": "", "ret": "retval"}], "cv::detail::Timelapser::initialize": [{"name": "cv.detail_Timelapser.initialize", "arg": "corners, sizes", "ret": "None"}], "cv::detail::Timelapser::process": [{"name": "cv.detail_Timelapser.process", "arg": "img, mask, tl", "ret": "None"}], "cv::detail::VoronoiSeamFinder::find": [{"name": "cv.detail_VoronoiSeamFinder.find", "arg": "src, corners, masks", "ret": "masks"}], "cv::dnn::ClassificationModel::ClassificationModel": [{"name": "cv.dnn_ClassificationModel", "arg": "model[, config]", "ret": "<dnn_ClassificationModel object>"}, {"name": "cv.dnn_ClassificationModel", "arg": "network", "ret": "<dnn_ClassificationModel object>"}], "cv::dnn::ClassificationModel::classify": [{"name": "cv.dnn_ClassificationModel.classify", "arg": "frame", "ret": "classId, conf"}], "cv::dnn::DetectionModel::DetectionModel": [{"name": "cv.dnn_DetectionModel", "arg": "model[, config]", "ret": "<dnn_DetectionModel object>"}, {"name": "cv.dnn_DetectionModel", "arg": "network", "ret": "<dnn_DetectionModel object>"}], "cv::dnn::DetectionModel::detect": [{"name": "cv.dnn_DetectionModel.detect", "arg": "frame[, confThreshold[, nmsThreshold]]", "ret": "classIds, confidences, boxes"}], "cv::dnn::DictValue::DictValue": [{"name": "cv.dnn_DictValue", "arg": "i", "ret": "<dnn_DictValue object>"}, {"name": "cv.dnn_DictValue", "arg": "p", "ret": "<dnn_DictValue object>"}, {"name": "cv.dnn_DictValue", "arg": "s", "ret": "<dnn_DictValue object>"}], "cv::dnn::DictValue::getIntValue": [{"name": "cv.dnn_DictValue.getIntValue", "arg": "[, idx]", "ret": "retval"}], "cv::dnn::DictValue::getRealValue": [{"name": "cv.dnn_DictValue.getRealValue", "arg": "[, idx]", "ret": "retval"}], "cv::dnn::DictValue::getStringValue": [{"name": "cv.dnn_DictValue.getStringValue", "arg": "[, idx]", "ret": "retval"}], "cv::dnn::DictValue::isInt": [{"name": "cv.dnn_DictValue.isInt", "arg": "", "ret": "retval"}], "cv::dnn::DictValue::isReal": [{"name": "cv.dnn_DictValue.isReal", "arg": "", "ret": "retval"}], "cv::dnn::DictValue::isString": [{"name": "cv.dnn_DictValue.isString", "arg": "", "ret": "retval"}], "cv::dnn::KeypointsModel::KeypointsModel": [{"name": "cv.dnn_KeypointsModel", "arg": "model[, config]", "ret": "<dnn_KeypointsModel object>"}, {"name": "cv.dnn_KeypointsModel", "arg": "network", "ret": "<dnn_KeypointsModel object>"}], "cv::dnn::KeypointsModel::estimate": [{"name": "cv.dnn_KeypointsModel.estimate", "arg": "frame[, thresh]", "ret": "retval"}], "cv::dnn::Layer::finalize": [{"name": "cv.dnn_Layer.finalize", "arg": "inputs[, outputs]", "ret": "outputs"}], "cv::dnn::Layer::outputNameToIndex": [{"name": "cv.dnn_Layer.outputNameToIndex", "arg": "outputName", "ret": "retval"}], "cv::dnn::Layer::run": [{"name": "cv.dnn_Layer.run", "arg": "inputs, internals[, outputs]", "ret": "outputs, internals"}], "cv::dnn::Model::Model": [{"name": "cv.dnn_Model", "arg": "model[, config]", "ret": "<dnn_Model object>"}, {"name": "cv.dnn_Model", "arg": "network", "ret": "<dnn_Model object>"}], "cv::dnn::Model::predict": [{"name": "cv.dnn_Model.predict", "arg": "frame[, outs]", "ret": "outs"}], "cv::dnn::Model::setInputCrop": [{"name": "cv.dnn_Model.setInputCrop", "arg": "crop", "ret": "retval"}], "cv::dnn::Model::setInputMean": [{"name": "cv.dnn_Model.setInputMean", "arg": "mean", "ret": "retval"}], "cv::dnn::Model::setInputParams": [{"name": "cv.dnn_Model.setInputParams", "arg": "[, scale[, size[, mean[, swapRB[, crop]]]]]", "ret": "None"}], "cv::dnn::Model::setInputScale": [{"name": "cv.dnn_Model.setInputScale", "arg": "scale", "ret": "retval"}], "cv::dnn::Model::setInputSize": [{"name": "cv.dnn_Model.setInputSize", "arg": "size", "ret": "retval"}, {"name": "cv.dnn_Model.setInputSize", "arg": "width, height", "ret": "retval"}], "cv::dnn::Model::setInputSwapRB": [{"name": "cv.dnn_Model.setInputSwapRB", "arg": "swapRB", "ret": "retval"}], "cv::dnn::Net::Net": [{"name": "cv.dnn_Net", "arg": "", "ret": "<dnn_Net object>"}], "cv::dnn::Net::connect": [{"name": "cv.dnn_Net.connect", "arg": "outPin, inpPin", "ret": "None"}], "cv::dnn::Net::dump": [{"name": "cv.dnn_Net.dump", "arg": "", "ret": "retval"}], "cv::dnn::Net::dumpToFile": [{"name": "cv.dnn_Net.dumpToFile", "arg": "path", "ret": "None"}], "cv::dnn::Net::empty": [{"name": "cv.dnn_Net.empty", "arg": "", "ret": "retval"}], "cv::dnn::Net::enableFusion": [{"name": "cv.dnn_Net.enableFusion", "arg": "fusion", "ret": "None"}], "cv::dnn::Net::forward": [{"name": "cv.dnn_Net.forward", "arg": "[, outputName]", "ret": "retval"}, {"name": "cv.dnn_Net.forward", "arg": "[, outputBlobs[, outputName]]", "ret": "outputBlobs"}, {"name": "cv.dnn_Net.forward", "arg": "outBlobNames[, outputBlobs]", "ret": "outputBlobs"}, {"name": "cv.dnn_Net.forwardAndRetrieve", "arg": "outBlobNames", "ret": "outputBlobs"}], "cv::dnn::Net::forwardAsync": [{"name": "cv.dnn_Net.forwardAsync", "arg": "[, outputName]", "ret": "retval"}], "cv::dnn::Net::getFLOPS": [{"name": "cv.dnn_Net.getFLOPS", "arg": "netInputShapes", "ret": "retval"}, {"name": "cv.dnn_Net.getFLOPS", "arg": "netInputShape", "ret": "retval"}, {"name": "cv.dnn_Net.getFLOPS", "arg": "layerId, netInputShapes", "ret": "retval"}, {"name": "cv.dnn_Net.getFLOPS", "arg": "layerId, netInputShape", "ret": "retval"}], "cv::dnn::Net::getLayer": [{"name": "cv.dnn_Net.getLayer", "arg": "layerId", "ret": "retval"}], "cv::dnn::Net::getLayerId": [{"name": "cv.dnn_Net.getLayerId", "arg": "layer", "ret": "retval"}], "cv::dnn::Net::getLayerNames": [{"name": "cv.dnn_Net.getLayerNames", "arg": "", "ret": "retval"}], "cv::dnn::Net::getLayerTypes": [{"name": "cv.dnn_Net.getLayerTypes", "arg": "", "ret": "layersTypes"}], "cv::dnn::Net::getLayersCount": [{"name": "cv.dnn_Net.getLayersCount", "arg": "layerType", "ret": "retval"}], "cv::dnn::Net::getLayersShapes": [{"name": "cv.dnn_Net.getLayersShapes", "arg": "netInputShapes", "ret": "layersIds, inLayersShapes, outLayersShapes"}, {"name": "cv.dnn_Net.getLayersShapes", "arg": "netInputShape", "ret": "layersIds, inLayersShapes, outLayersShapes"}], "cv::dnn::Net::getMemoryConsumption": [{"name": "cv.dnn_Net.getMemoryConsumption", "arg": "netInputShape", "ret": "weights, blobs"}, {"name": "cv.dnn_Net.getMemoryConsumption", "arg": "layerId, netInputShapes", "ret": "weights, blobs"}, {"name": "cv.dnn_Net.getMemoryConsumption", "arg": "layerId, netInputShape", "ret": "weights, blobs"}], "cv::dnn::Net::getParam": [{"name": "cv.dnn_Net.getParam", "arg": "layer[, numParam]", "ret": "retval"}], "cv::dnn::Net::getPerfProfile": [{"name": "cv.dnn_Net.getPerfProfile", "arg": "", "ret": "retval, timings"}], "cv::dnn::Net::getUnconnectedOutLayers": [{"name": "cv.dnn_Net.getUnconnectedOutLayers", "arg": "", "ret": "retval"}], "cv::dnn::Net::getUnconnectedOutLayersNames": [{"name": "cv.dnn_Net.getUnconnectedOutLayersNames", "arg": "", "ret": "retval"}], "cv::dnn::Net::readFromModelOptimizer": [{"name": "cv.dnn.Net_readFromModelOptimizer", "arg": "xml, bin", "ret": "retval"}, {"name": "cv.dnn.Net_readFromModelOptimizer", "arg": "bufferModelConfig, bufferWeights", "ret": "retval"}], "cv::dnn::Net::setHalideScheduler": [{"name": "cv.dnn_Net.setHalideScheduler", "arg": "scheduler", "ret": "None"}], "cv::dnn::Net::setInput": [{"name": "cv.dnn_Net.setInput", "arg": "blob[, name[, scalefactor[, mean]]]", "ret": "None"}], "cv::dnn::Net::setInputShape": [{"name": "cv.dnn_Net.setInputShape", "arg": "inputName, shape", "ret": "None"}], "cv::dnn::Net::setInputsNames": [{"name": "cv.dnn_Net.setInputsNames", "arg": "inputBlobNames", "ret": "None"}], "cv::dnn::Net::setParam": [{"name": "cv.dnn_Net.setParam", "arg": "layer, numParam, blob", "ret": "None"}], "cv::dnn::Net::setPreferableBackend": [{"name": "cv.dnn_Net.setPreferableBackend", "arg": "backendId", "ret": "None"}], "cv::dnn::Net::setPreferableTarget": [{"name": "cv.dnn_Net.setPreferableTarget", "arg": "targetId", "ret": "None"}], "cv::dnn::SegmentationModel::SegmentationModel": [{"name": "cv.dnn_SegmentationModel", "arg": "model[, config]", "ret": "<dnn_SegmentationModel object>"}, {"name": "cv.dnn_SegmentationModel", "arg": "network", "ret": "<dnn_SegmentationModel object>"}], "cv::dnn::SegmentationModel::segment": [{"name": "cv.dnn_SegmentationModel.segment", "arg": "frame[, mask]", "ret": "mask"}], "cv::dnn_superres::DnnSuperResImpl::create": [{"name": "cv.dnn_superres.DnnSuperResImpl_create", "arg": "", "ret": "retval"}], "cv::dnn_superres::DnnSuperResImpl::getAlgorithm": [{"name": "cv.dnn_superres_DnnSuperResImpl.getAlgorithm", "arg": "", "ret": "retval"}], "cv::dnn_superres::DnnSuperResImpl::getScale": [{"name": "cv.dnn_superres_DnnSuperResImpl.getScale", "arg": "", "ret": "retval"}], "cv::dnn_superres::DnnSuperResImpl::readModel": [{"name": "cv.dnn_superres_DnnSuperResImpl.readModel", "arg": "path", "ret": "None"}], "cv::dnn_superres::DnnSuperResImpl::setModel": [{"name": "cv.dnn_superres_DnnSuperResImpl.setModel", "arg": "algo, scale", "ret": "None"}], "cv::dnn_superres::DnnSuperResImpl::setPreferableBackend": [{"name": "cv.dnn_superres_DnnSuperResImpl.setPreferableBackend", "arg": "backendId", "ret": "None"}], "cv::dnn_superres::DnnSuperResImpl::setPreferableTarget": [{"name": "cv.dnn_superres_DnnSuperResImpl.setPreferableTarget", "arg": "targetId", "ret": "None"}], "cv::dnn_superres::DnnSuperResImpl::upsample": [{"name": "cv.dnn_superres_DnnSuperResImpl.upsample", "arg": "img[, result]", "ret": "result"}], "cv::dnn_superres::DnnSuperResImpl::upsampleMultioutput": [{"name": "cv.dnn_superres_DnnSuperResImpl.upsampleMultioutput", "arg": "img, imgs_new, scale_factors, node_names", "ret": "None"}], "cv::dynafu::DynaFu::create": [{"name": "cv.dynafu.DynaFu_create", "arg": "_params", "ret": "retval"}], "cv::dynafu::DynaFu::getCloud": [{"name": "cv.dynafu_DynaFu.getCloud", "arg": "[, points[, normals]]", "ret": "points, normals"}], "cv::dynafu::DynaFu::getNormals": [{"name": "cv.dynafu_DynaFu.getNormals", "arg": "points[, normals]", "ret": "normals"}], "cv::dynafu::DynaFu::getPoints": [{"name": "cv.dynafu_DynaFu.getPoints", "arg": "[, points]", "ret": "points"}], "cv::dynafu::DynaFu::render": [{"name": "cv.dynafu_DynaFu.render", "arg": "[, image[, cameraPose]]", "ret": "image"}], "cv::dynafu::DynaFu::reset": [{"name": "cv.dynafu_DynaFu.reset", "arg": "", "ret": "None"}], "cv::dynafu::DynaFu::update": [{"name": "cv.dynafu_DynaFu.update", "arg": "depth", "ret": "retval"}], "cv::dynafu::Params::coarseParams": [{"name": "cv.dynafu.Params_coarseParams", "arg": "", "ret": "retval"}], "cv::dynafu::Params::defaultParams": [{"name": "cv.dynafu.Params_defaultParams", "arg": "", "ret": "retval"}], "cv::face::BIF::compute": [{"name": "cv.face_BIF.compute", "arg": "image[, features]", "ret": "features"}], "cv::face::BIF::create": [{"name": "cv.face.BIF_create", "arg": "[, num_bands[, num_rotations]]", "ret": "retval"}], "cv::face::BIF::getNumBands": [{"name": "cv.face_BIF.getNumBands", "arg": "", "ret": "retval"}], "cv::face::BIF::getNumRotations": [{"name": "cv.face_BIF.getNumRotations", "arg": "", "ret": "retval"}], "cv::face::BasicFaceRecognizer::getEigenValues": [{"name": "cv.face_BasicFaceRecognizer.getEigenValues", "arg": "", "ret": "retval"}], "cv::face::BasicFaceRecognizer::getEigenVectors": [{"name": "cv.face_BasicFaceRecognizer.getEigenVectors", "arg": "", "ret": "retval"}], "cv::face::BasicFaceRecognizer::getLabels": [{"name": "cv.face_BasicFaceRecognizer.getLabels", "arg": "", "ret": "retval"}], "cv::face::BasicFaceRecognizer::getMean": [{"name": "cv.face_BasicFaceRecognizer.getMean", "arg": "", "ret": "retval"}], "cv::face::BasicFaceRecognizer::getNumComponents": [{"name": "cv.face_BasicFaceRecognizer.getNumComponents", "arg": "", "ret": "retval"}], "cv::face::BasicFaceRecognizer::getProjections": [{"name": "cv.face_BasicFaceRecognizer.getProjections", "arg": "", "ret": "retval"}], "cv::face::BasicFaceRecognizer::getThreshold": [{"name": "cv.face_BasicFaceRecognizer.getThreshold", "arg": "", "ret": "retval"}], "cv::face::BasicFaceRecognizer::setNumComponents": [{"name": "cv.face_BasicFaceRecognizer.setNumComponents", "arg": "val", "ret": "None"}], "cv::face::BasicFaceRecognizer::setThreshold": [{"name": "cv.face_BasicFaceRecognizer.setThreshold", "arg": "val", "ret": "None"}], "cv::face::EigenFaceRecognizer::create": [{"name": "cv.face.EigenFaceRecognizer_create", "arg": "[, num_components[, threshold]]", "ret": "retval"}], "cv::face::FaceRecognizer::getLabelInfo": [{"name": "cv.face_FaceRecognizer.getLabelInfo", "arg": "label", "ret": "retval"}], "cv::face::FaceRecognizer::getLabelsByString": [{"name": "cv.face_FaceRecognizer.getLabelsByString", "arg": "str", "ret": "retval"}], "cv::face::FaceRecognizer::predict": [{"name": "cv.face_FaceRecognizer.predict", "arg": "src", "ret": "label, confidence"}, {"name": "cv.face_FaceRecognizer.predict_collect", "arg": "src, collector", "ret": "None"}, {"name": "cv.face_FaceRecognizer.predict_label", "arg": "src", "ret": "retval"}], "cv::face::FaceRecognizer::read": [{"name": "cv.face_FaceRecognizer.read", "arg": "filename", "ret": "None"}], "cv::face::FaceRecognizer::setLabelInfo": [{"name": "cv.face_FaceRecognizer.setLabelInfo", "arg": "label, strInfo", "ret": "None"}], "cv::face::FaceRecognizer::train": [{"name": "cv.face_FaceRecognizer.train", "arg": "src, labels", "ret": "None"}], "cv::face::FaceRecognizer::update": [{"name": "cv.face_FaceRecognizer.update", "arg": "src, labels", "ret": "None"}], "cv::face::FaceRecognizer::write": [{"name": "cv.face_FaceRecognizer.write", "arg": "filename", "ret": "None"}], "cv::face::Facemark::fit": [{"name": "cv.face_Facemark.fit", "arg": "image, faces[, landmarks]", "ret": "retval, landmarks"}], "cv::face::Facemark::loadModel": [{"name": "cv.face_Facemark.loadModel", "arg": "model", "ret": "None"}], "cv::face::FisherFaceRecognizer::create": [{"name": "cv.face.FisherFaceRecognizer_create", "arg": "[, num_components[, threshold]]", "ret": "retval"}], "cv::face::LBPHFaceRecognizer::create": [{"name": "cv.face.LBPHFaceRecognizer_create", "arg": "[, radius[, neighbors[, grid_x[, grid_y[, threshold]]]]]", "ret": "retval"}], "cv::face::LBPHFaceRecognizer::getGridX": [{"name": "cv.face_LBPHFaceRecognizer.getGridX", "arg": "", "ret": "retval"}], "cv::face::LBPHFaceRecognizer::getGridY": [{"name": "cv.face_LBPHFaceRecognizer.getGridY", "arg": "", "ret": "retval"}], "cv::face::LBPHFaceRecognizer::getHistograms": [{"name": "cv.face_LBPHFaceRecognizer.getHistograms", "arg": "", "ret": "retval"}], "cv::face::LBPHFaceRecognizer::getLabels": [{"name": "cv.face_LBPHFaceRecognizer.getLabels", "arg": "", "ret": "retval"}], "cv::face::LBPHFaceRecognizer::getNeighbors": [{"name": "cv.face_LBPHFaceRecognizer.getNeighbors", "arg": "", "ret": "retval"}], "cv::face::LBPHFaceRecognizer::getRadius": [{"name": "cv.face_LBPHFaceRecognizer.getRadius", "arg": "", "ret": "retval"}], "cv::face::LBPHFaceRecognizer::getThreshold": [{"name": "cv.face_LBPHFaceRecognizer.getThreshold", "arg": "", "ret": "retval"}], "cv::face::LBPHFaceRecognizer::setGridX": [{"name": "cv.face_LBPHFaceRecognizer.setGridX", "arg": "val", "ret": "None"}], "cv::face::LBPHFaceRecognizer::setGridY": [{"name": "cv.face_LBPHFaceRecognizer.setGridY", "arg": "val", "ret": "None"}], "cv::face::LBPHFaceRecognizer::setNeighbors": [{"name": "cv.face_LBPHFaceRecognizer.setNeighbors", "arg": "val", "ret": "None"}], "cv::face::LBPHFaceRecognizer::setRadius": [{"name": "cv.face_LBPHFaceRecognizer.setRadius", "arg": "val", "ret": "None"}], "cv::face::LBPHFaceRecognizer::setThreshold": [{"name": "cv.face_LBPHFaceRecognizer.setThreshold", "arg": "val", "ret": "None"}], "cv::face::MACE::create": [{"name": "cv.face.MACE_create", "arg": "[, IMGSIZE]", "ret": "retval"}], "cv::face::MACE::load": [{"name": "cv.face.MACE_load", "arg": "filename[, objname]", "ret": "retval"}], "cv::face::MACE::salt": [{"name": "cv.face_MACE.salt", "arg": "passphrase", "ret": "None"}], "cv::face::MACE::same": [{"name": "cv.face_MACE.same", "arg": "query", "ret": "retval"}], "cv::face::MACE::train": [{"name": "cv.face_MACE.train", "arg": "images", "ret": "None"}], "cv::face::StandardCollector::create": [{"name": "cv.face.StandardCollector_create", "arg": "[, threshold]", "ret": "retval"}], "cv::face::StandardCollector::getMinDist": [{"name": "cv.face_StandardCollector.getMinDist", "arg": "", "ret": "retval"}], "cv::face::StandardCollector::getMinLabel": [{"name": "cv.face_StandardCollector.getMinLabel", "arg": "", "ret": "retval"}], "cv::face::StandardCollector::getResults": [{"name": "cv.face_StandardCollector.getResults", "arg": "[, sorted]", "ret": "retval"}], "cv::flann::Index::Index": [{"name": "cv.flann_Index", "arg": "", "ret": "<flann_Index object>"}, {"name": "cv.flann_Index", "arg": "features, params[, distType]", "ret": "<flann_Index object>"}], "cv::flann::Index::build": [{"name": "cv.flann_Index.build", "arg": "features, params[, distType]", "ret": "None"}], "cv::flann::Index::getAlgorithm": [{"name": "cv.flann_Index.getAlgorithm", "arg": "", "ret": "retval"}], "cv::flann::Index::getDistance": [{"name": "cv.flann_Index.getDistance", "arg": "", "ret": "retval"}], "cv::flann::Index::knnSearch": [{"name": "cv.flann_Index.knnSearch", "arg": "query, knn[, indices[, dists[, params]]]", "ret": "indices, dists"}], "cv::flann::Index::load": [{"name": "cv.flann_Index.load", "arg": "features, filename", "ret": "retval"}], "cv::flann::Index::radiusSearch": [{"name": "cv.flann_Index.radiusSearch", "arg": "query, radius, maxResults[, indices[, dists[, params]]]", "ret": "retval, indices, dists"}], "cv::flann::Index::release": [{"name": "cv.flann_Index.release", "arg": "", "ret": "None"}], "cv::flann::Index::save": [{"name": "cv.flann_Index.save", "arg": "filename", "ret": "None"}], "cv::hfs::HfsSegment::create": [{"name": "cv.hfs.HfsSegment_create", "arg": "height, width[, segEgbThresholdI[, minRegionSizeI[, segEgbThresholdII[, minRegionSizeII[, spatialWeight[, slicSpixelSize[, numSlicIter]]]]]]]", "ret": "retval"}], "cv::hfs::HfsSegment::getMinRegionSizeI": [{"name": "cv.hfs_HfsSegment.getMinRegionSizeI", "arg": "", "ret": "retval"}], "cv::hfs::HfsSegment::getMinRegionSizeII": [{"name": "cv.hfs_HfsSegment.getMinRegionSizeII", "arg": "", "ret": "retval"}], "cv::hfs::HfsSegment::getNumSlicIter": [{"name": "cv.hfs_HfsSegment.getNumSlicIter", "arg": "", "ret": "retval"}], "cv::hfs::HfsSegment::getSegEgbThresholdI": [{"name": "cv.hfs_HfsSegment.getSegEgbThresholdI", "arg": "", "ret": "retval"}], "cv::hfs::HfsSegment::getSegEgbThresholdII": [{"name": "cv.hfs_HfsSegment.getSegEgbThresholdII", "arg": "", "ret": "retval"}], "cv::hfs::HfsSegment::getSlicSpixelSize": [{"name": "cv.hfs_HfsSegment.getSlicSpixelSize", "arg": "", "ret": "retval"}], "cv::hfs::HfsSegment::getSpatialWeight": [{"name": "cv.hfs_HfsSegment.getSpatialWeight", "arg": "", "ret": "retval"}], "cv::hfs::HfsSegment::performSegmentCpu": [{"name": "cv.hfs_HfsSegment.performSegmentCpu", "arg": "src[, ifDraw]", "ret": "retval"}], "cv::hfs::HfsSegment::performSegmentGpu": [{"name": "cv.hfs_HfsSegment.performSegmentGpu", "arg": "src[, ifDraw]", "ret": "retval"}], "cv::hfs::HfsSegment::setMinRegionSizeI": [{"name": "cv.hfs_HfsSegment.setMinRegionSizeI", "arg": "n", "ret": "None"}], "cv::hfs::HfsSegment::setMinRegionSizeII": [{"name": "cv.hfs_HfsSegment.setMinRegionSizeII", "arg": "n", "ret": "None"}], "cv::hfs::HfsSegment::setNumSlicIter": [{"name": "cv.hfs_HfsSegment.setNumSlicIter", "arg": "n", "ret": "None"}], "cv::hfs::HfsSegment::setSegEgbThresholdI": [{"name": "cv.hfs_HfsSegment.setSegEgbThresholdI", "arg": "c", "ret": "None"}], "cv::hfs::HfsSegment::setSegEgbThresholdII": [{"name": "cv.hfs_HfsSegment.setSegEgbThresholdII", "arg": "c", "ret": "None"}], "cv::hfs::HfsSegment::setSlicSpixelSize": [{"name": "cv.hfs_HfsSegment.setSlicSpixelSize", "arg": "n", "ret": "None"}], "cv::hfs::HfsSegment::setSpatialWeight": [{"name": "cv.hfs_HfsSegment.setSpatialWeight", "arg": "w", "ret": "None"}], "cv::img_hash::AverageHash::create": [{"name": "cv.img_hash.AverageHash_create", "arg": "", "ret": "retval"}], "cv::img_hash::BlockMeanHash::create": [{"name": "cv.img_hash.BlockMeanHash_create", "arg": "[, mode]", "ret": "retval"}], "cv::img_hash::BlockMeanHash::getMean": [{"name": "cv.img_hash_BlockMeanHash.getMean", "arg": "", "ret": "retval"}], "cv::img_hash::BlockMeanHash::setMode": [{"name": "cv.img_hash_BlockMeanHash.setMode", "arg": "mode", "ret": "None"}], "cv::img_hash::ColorMomentHash::create": [{"name": "cv.img_hash.ColorMomentHash_create", "arg": "", "ret": "retval"}], "cv::img_hash::ImgHashBase::compare": [{"name": "cv.img_hash_ImgHashBase.compare", "arg": "hashOne, hashTwo", "ret": "retval"}], "cv::img_hash::ImgHashBase::compute": [{"name": "cv.img_hash_ImgHashBase.compute", "arg": "inputArr[, outputArr]", "ret": "outputArr"}], "cv::img_hash::MarrHildrethHash::create": [{"name": "cv.img_hash.MarrHildrethHash_create", "arg": "[, alpha[, scale]]", "ret": "retval"}], "cv::img_hash::MarrHildrethHash::getAlpha": [{"name": "cv.img_hash_MarrHildrethHash.getAlpha", "arg": "", "ret": "retval"}], "cv::img_hash::MarrHildrethHash::getScale": [{"name": "cv.img_hash_MarrHildrethHash.getScale", "arg": "", "ret": "retval"}], "cv::img_hash::MarrHildrethHash::setKernelParam": [{"name": "cv.img_hash_MarrHildrethHash.setKernelParam", "arg": "alpha, scale", "ret": "None"}], "cv::img_hash::PHash::create": [{"name": "cv.img_hash.PHash_create", "arg": "", "ret": "retval"}], "cv::img_hash::RadialVarianceHash::create": [{"name": "cv.img_hash.RadialVarianceHash_create", "arg": "[, sigma[, numOfAngleLine]]", "ret": "retval"}], "cv::img_hash::RadialVarianceHash::getNumOfAngleLine": [{"name": "cv.img_hash_RadialVarianceHash.getNumOfAngleLine", "arg": "", "ret": "retval"}], "cv::img_hash::RadialVarianceHash::getSigma": [{"name": "cv.img_hash_RadialVarianceHash.getSigma", "arg": "", "ret": "retval"}], "cv::img_hash::RadialVarianceHash::setNumOfAngleLine": [{"name": "cv.img_hash_RadialVarianceHash.setNumOfAngleLine", "arg": "value", "ret": "None"}], "cv::img_hash::RadialVarianceHash::setSigma": [{"name": "cv.img_hash_RadialVarianceHash.setSigma", "arg": "value", "ret": "None"}], "cv::kinfu::KinFu::create": [{"name": "cv.kinfu.KinFu_create", "arg": "_params", "ret": "retval"}], "cv::kinfu::KinFu::getCloud": [{"name": "cv.kinfu_KinFu.getCloud", "arg": "[, points[, normals]]", "ret": "points, normals"}], "cv::kinfu::KinFu::getNormals": [{"name": "cv.kinfu_KinFu.getNormals", "arg": "points[, normals]", "ret": "normals"}], "cv::kinfu::KinFu::getPoints": [{"name": "cv.kinfu_KinFu.getPoints", "arg": "[, points]", "ret": "points"}], "cv::kinfu::KinFu::render": [{"name": "cv.kinfu_KinFu.render", "arg": "[, image[, cameraPose]]", "ret": "image"}], "cv::kinfu::KinFu::reset": [{"name": "cv.kinfu_KinFu.reset", "arg": "", "ret": "None"}], "cv::kinfu::KinFu::update": [{"name": "cv.kinfu_KinFu.update", "arg": "depth", "ret": "retval"}], "cv::kinfu::Params::Params": [{"name": "cv.kinfu_Params", "arg": "", "ret": "<kinfu_Params object>"}, {"name": "cv.kinfu_Params", "arg": "volumeIntialPoseRot, volumeIntialPoseTransl", "ret": "<kinfu_Params object>"}, {"name": "cv.kinfu_Params", "arg": "volumeIntialPose", "ret": "<kinfu_Params object>"}], "cv::kinfu::Params::coarseParams": [{"name": "cv.kinfu.Params_coarseParams", "arg": "", "ret": "retval"}], "cv::kinfu::Params::defaultParams": [{"name": "cv.kinfu.Params_defaultParams", "arg": "", "ret": "retval"}], "cv::kinfu::Params::hashTSDFParams": [{"name": "cv.kinfu.Params_hashTSDFParams", "arg": "isCoarse", "ret": "retval"}], "cv::kinfu::Params::setInitialVolumePose": [{"name": "cv.kinfu_Params.setInitialVolumePose", "arg": "R, t", "ret": "None"}, {"name": "cv.kinfu_Params.setInitialVolumePose", "arg": "homogen_tf", "ret": "None"}], "cv::line_descriptor::BinaryDescriptor::compute": [{"name": "cv.line_descriptor_BinaryDescriptor.compute", "arg": "image, keylines[, descriptors[, returnFloatDescr]]", "ret": "keylines, descriptors"}], "cv::line_descriptor::BinaryDescriptor::createBinaryDescriptor": [{"name": "cv.line_descriptor.BinaryDescriptor_createBinaryDescriptor", "arg": "", "ret": "retval"}], "cv::line_descriptor::BinaryDescriptor::detect": [{"name": "cv.line_descriptor_BinaryDescriptor.detect", "arg": "image[, mask]", "ret": "keypoints"}], "cv::line_descriptor::BinaryDescriptor::getNumOfOctaves": [{"name": "cv.line_descriptor_BinaryDescriptor.getNumOfOctaves", "arg": "", "ret": "retval"}], "cv::line_descriptor::BinaryDescriptor::getReductionRatio": [{"name": "cv.line_descriptor_BinaryDescriptor.getReductionRatio", "arg": "", "ret": "retval"}], "cv::line_descriptor::BinaryDescriptor::getWidthOfBand": [{"name": "cv.line_descriptor_BinaryDescriptor.getWidthOfBand", "arg": "", "ret": "retval"}], "cv::line_descriptor::BinaryDescriptor::setNumOfOctaves": [{"name": "cv.line_descriptor_BinaryDescriptor.setNumOfOctaves", "arg": "octaves", "ret": "None"}], "cv::line_descriptor::BinaryDescriptor::setReductionRatio": [{"name": "cv.line_descriptor_BinaryDescriptor.setReductionRatio", "arg": "rRatio", "ret": "None"}], "cv::line_descriptor::BinaryDescriptor::setWidthOfBand": [{"name": "cv.line_descriptor_BinaryDescriptor.setWidthOfBand", "arg": "width", "ret": "None"}], "cv::line_descriptor::BinaryDescriptorMatcher::BinaryDescriptorMatcher": [{"name": "cv.line_descriptor_BinaryDescriptorMatcher", "arg": "", "ret": "<line_descriptor_BinaryDescriptorMatcher object>"}], "cv::line_descriptor::BinaryDescriptorMatcher::knnMatch": [{"name": "cv.line_descriptor_BinaryDescriptorMatcher.knnMatch", "arg": "queryDescriptors, trainDescriptors, k[, mask[, compactResult]]", "ret": "matches"}, {"name": "cv.line_descriptor_BinaryDescriptorMatcher.knnMatchQuery", "arg": "queryDescriptors, matches, k[, masks[, compactResult]]", "ret": "None"}], "cv::line_descriptor::BinaryDescriptorMatcher::match": [{"name": "cv.line_descriptor_BinaryDescriptorMatcher.match", "arg": "queryDescriptors, trainDescriptors[, mask]", "ret": "matches"}, {"name": "cv.line_descriptor_BinaryDescriptorMatcher.matchQuery", "arg": "queryDescriptors[, masks]", "ret": "matches"}], "cv::line_descriptor::KeyLine::KeyLine": [{"name": "cv.line_descriptor_KeyLine", "arg": "", "ret": "<line_descriptor_KeyLine object>"}], "cv::line_descriptor::KeyLine::getEndPoint": [{"name": "cv.line_descriptor_KeyLine.getEndPoint", "arg": "", "ret": "retval"}], "cv::line_descriptor::KeyLine::getEndPointInOctave": [{"name": "cv.line_descriptor_KeyLine.getEndPointInOctave", "arg": "", "ret": "retval"}], "cv::line_descriptor::KeyLine::getStartPoint": [{"name": "cv.line_descriptor_KeyLine.getStartPoint", "arg": "", "ret": "retval"}], "cv::line_descriptor::KeyLine::getStartPointInOctave": [{"name": "cv.line_descriptor_KeyLine.getStartPointInOctave", "arg": "", "ret": "retval"}], "cv::line_descriptor::LSDDetector::LSDDetector": [{"name": "cv.line_descriptor_LSDDetector", "arg": "_params", "ret": "<line_descriptor_LSDDetector object>"}], "cv::line_descriptor::LSDDetector::createLSDDetector": [{"name": "cv.line_descriptor.LSDDetector_createLSDDetector", "arg": "", "ret": "retval"}, {"name": "cv.line_descriptor.LSDDetector_createLSDDetectorWithParams", "arg": "params", "ret": "retval"}], "cv::line_descriptor::LSDDetector::detect": [{"name": "cv.line_descriptor_LSDDetector.detect", "arg": "image, scale, numOctaves[, mask]", "ret": "keypoints"}, {"name": "cv.line_descriptor_LSDDetector.detect", "arg": "images, keylines, scale, numOctaves[, masks]", "ret": "None"}], "cv::line_descriptor::LSDParam::LSDParam": [{"name": "cv.line_descriptor_LSDParam", "arg": "", "ret": "<line_descriptor_LSDParam object>"}], "cv::linemod::ColorGradient::create": [{"name": "cv.linemod.ColorGradient_create", "arg": "weak_threshold, num_features, strong_threshold", "ret": "retval"}], "cv::linemod::DepthNormal::create": [{"name": "cv.linemod.DepthNormal_create", "arg": "distance_threshold, difference_threshold, num_features, extract_threshold", "ret": "retval"}], "cv::linemod::Detector::Detector": [{"name": "cv.linemod_Detector", "arg": "", "ret": "<linemod_Detector object>"}, {"name": "cv.linemod_Detector", "arg": "modalities, T_pyramid", "ret": "<linemod_Detector object>"}], "cv::linemod::Detector::addSyntheticTemplate": [{"name": "cv.linemod_Detector.addSyntheticTemplate", "arg": "templates, class_id", "ret": "retval"}], "cv::linemod::Detector::addTemplate": [{"name": "cv.linemod_Detector.addTemplate", "arg": "sources, class_id, object_mask", "ret": "retval, bounding_box"}], "cv::linemod::Detector::classIds": [{"name": "cv.linemod_Detector.classIds", "arg": "", "ret": "retval"}], "cv::linemod::Detector::getModalities": [{"name": "cv.linemod_Detector.getModalities", "arg": "", "ret": "retval"}], "cv::linemod::Detector::getT": [{"name": "cv.linemod_Detector.getT", "arg": "pyramid_level", "ret": "retval"}], "cv::linemod::Detector::getTemplates": [{"name": "cv.linemod_Detector.getTemplates", "arg": "class_id, template_id", "ret": "retval"}], "cv::linemod::Detector::match": [{"name": "cv.linemod_Detector.match", "arg": "sources, threshold[, class_ids[, quantized_images[, masks]]]", "ret": "matches, quantized_images"}], "cv::linemod::Detector::numClasses": [{"name": "cv.linemod_Detector.numClasses", "arg": "", "ret": "retval"}], "cv::linemod::Detector::numTemplates": [{"name": "cv.linemod_Detector.numTemplates", "arg": "", "ret": "retval"}, {"name": "cv.linemod_Detector.numTemplates", "arg": "class_id", "ret": "retval"}], "cv::linemod::Detector::pyramidLevels": [{"name": "cv.linemod_Detector.pyramidLevels", "arg": "", "ret": "retval"}], "cv::linemod::Detector::read": [{"name": "cv.linemod_Detector.read", "arg": "fn", "ret": "None"}], "cv::linemod::Detector::readClasses": [{"name": "cv.linemod_Detector.readClasses", "arg": "class_ids[, format]", "ret": "None"}], "cv::linemod::Detector::writeClasses": [{"name": "cv.linemod_Detector.writeClasses", "arg": "[, format]", "ret": "None"}], "cv::linemod::Feature::Feature": [{"name": "cv.linemod_Feature", "arg": "", "ret": "<linemod_Feature object>"}, {"name": "cv.linemod_Feature", "arg": "x, y, label", "ret": "<linemod_Feature object>"}], "cv::linemod::Match::Match": [{"name": "cv.linemod_Match", "arg": "", "ret": "<linemod_Match object>"}, {"name": "cv.linemod_Match", "arg": "x, y, similarity, class_id, template_id", "ret": "<linemod_Match object>"}], "cv::linemod::Modality::create": [{"name": "cv.linemod.Modality_create", "arg": "modality_type", "ret": "retval"}, {"name": "cv.linemod.Modality_create", "arg": "fn", "ret": "retval"}], "cv::linemod::Modality::name": [{"name": "cv.linemod_Modality.name", "arg": "", "ret": "retval"}], "cv::linemod::Modality::process": [{"name": "cv.linemod_Modality.process", "arg": "src[, mask]", "ret": "retval"}], "cv::linemod::Modality::read": [{"name": "cv.linemod_Modality.read", "arg": "fn", "ret": "None"}], "cv::linemod::QuantizedPyramid::extractTemplate": [{"name": "cv.linemod_QuantizedPyramid.extractTemplate", "arg": "", "ret": "retval, templ"}], "cv::linemod::QuantizedPyramid::pyrDown": [{"name": "cv.linemod_QuantizedPyramid.pyrDown", "arg": "", "ret": "None"}], "cv::linemod::QuantizedPyramid::quantize": [{"name": "cv.linemod_QuantizedPyramid.quantize", "arg": "[, dst]", "ret": "dst"}], "cv::mcc::CChecker::create": [{"name": "cv.mcc.CChecker_create", "arg": "", "ret": "retval"}], "cv::mcc::CChecker::getBox": [{"name": "cv.mcc_CChecker.getBox", "arg": "", "ret": "retval"}], "cv::mcc::CChecker::getCenter": [{"name": "cv.mcc_CChecker.getCenter", "arg": "", "ret": "retval"}], "cv::mcc::CChecker::getChartsRGB": [{"name": "cv.mcc_CChecker.getChartsRGB", "arg": "", "ret": "retval"}], "cv::mcc::CChecker::getChartsYCbCr": [{"name": "cv.mcc_CChecker.getChartsYCbCr", "arg": "", "ret": "retval"}], "cv::mcc::CChecker::getCost": [{"name": "cv.mcc_CChecker.getCost", "arg": "", "ret": "retval"}], "cv::mcc::CChecker::getTarget": [{"name": "cv.mcc_CChecker.getTarget", "arg": "", "ret": "retval"}], "cv::mcc::CChecker::setBox": [{"name": "cv.mcc_CChecker.setBox", "arg": "_box", "ret": "None"}], "cv::mcc::CChecker::setCenter": [{"name": "cv.mcc_CChecker.setCenter", "arg": "_center", "ret": "None"}], "cv::mcc::CChecker::setChartsRGB": [{"name": "cv.mcc_CChecker.setChartsRGB", "arg": "_chartsRGB", "ret": "None"}], "cv::mcc::CChecker::setChartsYCbCr": [{"name": "cv.mcc_CChecker.setChartsYCbCr", "arg": "_chartsYCbCr", "ret": "None"}], "cv::mcc::CChecker::setCost": [{"name": "cv.mcc_CChecker.setCost", "arg": "_cost", "ret": "None"}], "cv::mcc::CChecker::setTarget": [{"name": "cv.mcc_CChecker.setTarget", "arg": "_target", "ret": "None"}], "cv::mcc::CCheckerDetector::create": [{"name": "cv.mcc.CCheckerDetector_create", "arg": "", "ret": "retval"}], "cv::mcc::CCheckerDetector::getBestColorChecker": [{"name": "cv.mcc_CCheckerDetector.getBestColorChecker", "arg": "", "ret": "retval"}], "cv::mcc::CCheckerDetector::getListColorChecker": [{"name": "cv.mcc_CCheckerDetector.getListColorChecker", "arg": "", "ret": "retval"}], "cv::mcc::CCheckerDetector::process": [{"name": "cv.mcc_CCheckerDetector.process", "arg": "image, chartType[, nc[, useNet[, params]]]", "ret": "retval"}, {"name": "cv.mcc_CCheckerDetector.processWithROI", "arg": "image, chartType, regionsOfInterest[, nc[, useNet[, params]]]", "ret": "retval"}], "cv::mcc::CCheckerDetector::setNet": [{"name": "cv.mcc_CCheckerDetector.setNet", "arg": "net", "ret": "retval"}], "cv::mcc::CCheckerDraw::create": [{"name": "cv.mcc.CCheckerDraw_create", "arg": "pChecker[, color[, thickness]]", "ret": "retval"}], "cv::mcc::CCheckerDraw::draw": [{"name": "cv.mcc_CCheckerDraw.draw", "arg": "img", "ret": "img"}], "cv::mcc::DetectorParameters::create": [{"name": "cv.mcc.DetectorParameters_create", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::create": [{"name": "cv.ml.ANN_MLP_create", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::getAnnealCoolingRatio": [{"name": "cv.ml_ANN_MLP.getAnnealCoolingRatio", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::getAnnealFinalT": [{"name": "cv.ml_ANN_MLP.getAnnealFinalT", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::getAnnealInitialT": [{"name": "cv.ml_ANN_MLP.getAnnealInitialT", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::getAnnealItePerStep": [{"name": "cv.ml_ANN_MLP.getAnnealItePerStep", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::getBackpropMomentumScale": [{"name": "cv.ml_ANN_MLP.getBackpropMomentumScale", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::getBackpropWeightScale": [{"name": "cv.ml_ANN_MLP.getBackpropWeightScale", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::getLayerSizes": [{"name": "cv.ml_ANN_MLP.getLayerSizes", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::getRpropDW0": [{"name": "cv.ml_ANN_MLP.getRpropDW0", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::getRpropDWMax": [{"name": "cv.ml_ANN_MLP.getRpropDWMax", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::getRpropDWMin": [{"name": "cv.ml_ANN_MLP.getRpropDWMin", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::getRpropDWMinus": [{"name": "cv.ml_ANN_MLP.getRpropDWMinus", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::getRpropDWPlus": [{"name": "cv.ml_ANN_MLP.getRpropDWPlus", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::getTermCriteria": [{"name": "cv.ml_ANN_MLP.getTermCriteria", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::getTrainMethod": [{"name": "cv.ml_ANN_MLP.getTrainMethod", "arg": "", "ret": "retval"}], "cv::ml::ANN_MLP::getWeights": [{"name": "cv.ml_ANN_MLP.getWeights", "arg": "layerIdx", "ret": "retval"}], "cv::ml::ANN_MLP::load": [{"name": "cv.ml.ANN_MLP_load", "arg": "filepath", "ret": "retval"}], "cv::ml::ANN_MLP::setActivationFunction": [{"name": "cv.ml_ANN_MLP.setActivationFunction", "arg": "type[, param1[, param2]]", "ret": "None"}], "cv::ml::ANN_MLP::setAnnealCoolingRatio": [{"name": "cv.ml_ANN_MLP.setAnnealCoolingRatio", "arg": "val", "ret": "None"}], "cv::ml::ANN_MLP::setAnnealFinalT": [{"name": "cv.ml_ANN_MLP.setAnnealFinalT", "arg": "val", "ret": "None"}], "cv::ml::ANN_MLP::setAnnealInitialT": [{"name": "cv.ml_ANN_MLP.setAnnealInitialT", "arg": "val", "ret": "None"}], "cv::ml::ANN_MLP::setAnnealItePerStep": [{"name": "cv.ml_ANN_MLP.setAnnealItePerStep", "arg": "val", "ret": "None"}], "cv::ml::ANN_MLP::setBackpropMomentumScale": [{"name": "cv.ml_ANN_MLP.setBackpropMomentumScale", "arg": "val", "ret": "None"}], "cv::ml::ANN_MLP::setBackpropWeightScale": [{"name": "cv.ml_ANN_MLP.setBackpropWeightScale", "arg": "val", "ret": "None"}], "cv::ml::ANN_MLP::setLayerSizes": [{"name": "cv.ml_ANN_MLP.setLayerSizes", "arg": "_layer_sizes", "ret": "None"}], "cv::ml::ANN_MLP::setRpropDW0": [{"name": "cv.ml_ANN_MLP.setRpropDW0", "arg": "val", "ret": "None"}], "cv::ml::ANN_MLP::setRpropDWMax": [{"name": "cv.ml_ANN_MLP.setRpropDWMax", "arg": "val", "ret": "None"}], "cv::ml::ANN_MLP::setRpropDWMin": [{"name": "cv.ml_ANN_MLP.setRpropDWMin", "arg": "val", "ret": "None"}], "cv::ml::ANN_MLP::setRpropDWMinus": [{"name": "cv.ml_ANN_MLP.setRpropDWMinus", "arg": "val", "ret": "None"}], "cv::ml::ANN_MLP::setRpropDWPlus": [{"name": "cv.ml_ANN_MLP.setRpropDWPlus", "arg": "val", "ret": "None"}], "cv::ml::ANN_MLP::setTermCriteria": [{"name": "cv.ml_ANN_MLP.setTermCriteria", "arg": "val", "ret": "None"}], "cv::ml::ANN_MLP::setTrainMethod": [{"name": "cv.ml_ANN_MLP.setTrainMethod", "arg": "method[, param1[, param2]]", "ret": "None"}], "cv::ml::Boost::create": [{"name": "cv.ml.Boost_create", "arg": "", "ret": "retval"}], "cv::ml::Boost::getBoostType": [{"name": "cv.ml_Boost.getBoostType", "arg": "", "ret": "retval"}], "cv::ml::Boost::getWeakCount": [{"name": "cv.ml_Boost.getWeakCount", "arg": "", "ret": "retval"}], "cv::ml::Boost::getWeightTrimRate": [{"name": "cv.ml_Boost.getWeightTrimRate", "arg": "", "ret": "retval"}], "cv::ml::Boost::load": [{"name": "cv.ml.Boost_load", "arg": "filepath[, nodeName]", "ret": "retval"}], "cv::ml::Boost::setBoostType": [{"name": "cv.ml_Boost.setBoostType", "arg": "val", "ret": "None"}], "cv::ml::Boost::setWeakCount": [{"name": "cv.ml_Boost.setWeakCount", "arg": "val", "ret": "None"}], "cv::ml::Boost::setWeightTrimRate": [{"name": "cv.ml_Boost.setWeightTrimRate", "arg": "val", "ret": "None"}], "cv::ml::DTrees::create": [{"name": "cv.ml.DTrees_create", "arg": "", "ret": "retval"}], "cv::ml::DTrees::getCVFolds": [{"name": "cv.ml_DTrees.getCVFolds", "arg": "", "ret": "retval"}], "cv::ml::DTrees::getMaxCategories": [{"name": "cv.ml_DTrees.getMaxCategories", "arg": "", "ret": "retval"}], "cv::ml::DTrees::getMaxDepth": [{"name": "cv.ml_DTrees.getMaxDepth", "arg": "", "ret": "retval"}], "cv::ml::DTrees::getMinSampleCount": [{"name": "cv.ml_DTrees.getMinSampleCount", "arg": "", "ret": "retval"}], "cv::ml::DTrees::getPriors": [{"name": "cv.ml_DTrees.getPriors", "arg": "", "ret": "retval"}], "cv::ml::DTrees::getRegressionAccuracy": [{"name": "cv.ml_DTrees.getRegressionAccuracy", "arg": "", "ret": "retval"}], "cv::ml::DTrees::getTruncatePrunedTree": [{"name": "cv.ml_DTrees.getTruncatePrunedTree", "arg": "", "ret": "retval"}], "cv::ml::DTrees::getUse1SERule": [{"name": "cv.ml_DTrees.getUse1SERule", "arg": "", "ret": "retval"}], "cv::ml::DTrees::getUseSurrogates": [{"name": "cv.ml_DTrees.getUseSurrogates", "arg": "", "ret": "retval"}], "cv::ml::DTrees::load": [{"name": "cv.ml.DTrees_load", "arg": "filepath[, nodeName]", "ret": "retval"}], "cv::ml::DTrees::setCVFolds": [{"name": "cv.ml_DTrees.setCVFolds", "arg": "val", "ret": "None"}], "cv::ml::DTrees::setMaxCategories": [{"name": "cv.ml_DTrees.setMaxCategories", "arg": "val", "ret": "None"}], "cv::ml::DTrees::setMaxDepth": [{"name": "cv.ml_DTrees.setMaxDepth", "arg": "val", "ret": "None"}], "cv::ml::DTrees::setMinSampleCount": [{"name": "cv.ml_DTrees.setMinSampleCount", "arg": "val", "ret": "None"}], "cv::ml::DTrees::setPriors": [{"name": "cv.ml_DTrees.setPriors", "arg": "val", "ret": "None"}], "cv::ml::DTrees::setRegressionAccuracy": [{"name": "cv.ml_DTrees.setRegressionAccuracy", "arg": "val", "ret": "None"}], "cv::ml::DTrees::setTruncatePrunedTree": [{"name": "cv.ml_DTrees.setTruncatePrunedTree", "arg": "val", "ret": "None"}], "cv::ml::DTrees::setUse1SERule": [{"name": "cv.ml_DTrees.setUse1SERule", "arg": "val", "ret": "None"}], "cv::ml::DTrees::setUseSurrogates": [{"name": "cv.ml_DTrees.setUseSurrogates", "arg": "val", "ret": "None"}], "cv::ml::EM::create": [{"name": "cv.ml.EM_create", "arg": "", "ret": "retval"}], "cv::ml::EM::getClustersNumber": [{"name": "cv.ml_EM.getClustersNumber", "arg": "", "ret": "retval"}], "cv::ml::EM::getCovarianceMatrixType": [{"name": "cv.ml_EM.getCovarianceMatrixType", "arg": "", "ret": "retval"}], "cv::ml::EM::getCovs": [{"name": "cv.ml_EM.getCovs", "arg": "[, covs]", "ret": "covs"}], "cv::ml::EM::getMeans": [{"name": "cv.ml_EM.getMeans", "arg": "", "ret": "retval"}], "cv::ml::EM::getTermCriteria": [{"name": "cv.ml_EM.getTermCriteria", "arg": "", "ret": "retval"}], "cv::ml::EM::getWeights": [{"name": "cv.ml_EM.getWeights", "arg": "", "ret": "retval"}], "cv::ml::EM::load": [{"name": "cv.ml.EM_load", "arg": "filepath[, nodeName]", "ret": "retval"}], "cv::ml::EM::predict": [{"name": "cv.ml_EM.predict", "arg": "samples[, results[, flags]]", "ret": "retval, results"}], "cv::ml::EM::predict2": [{"name": "cv.ml_EM.predict2", "arg": "sample[, probs]", "ret": "retval, probs"}], "cv::ml::EM::setClustersNumber": [{"name": "cv.ml_EM.setClustersNumber", "arg": "val", "ret": "None"}], "cv::ml::EM::setCovarianceMatrixType": [{"name": "cv.ml_EM.setCovarianceMatrixType", "arg": "val", "ret": "None"}], "cv::ml::EM::setTermCriteria": [{"name": "cv.ml_EM.setTermCriteria", "arg": "val", "ret": "None"}], "cv::ml::EM::trainE": [{"name": "cv.ml_EM.trainE", "arg": "samples, means0[, covs0[, weights0[, logLikelihoods[, labels[, probs]]]]]", "ret": "retval, logLikelihoods, labels, probs"}], "cv::ml::EM::trainEM": [{"name": "cv.ml_EM.trainEM", "arg": "samples[, logLikelihoods[, labels[, probs]]]", "ret": "retval, logLikelihoods, labels, probs"}], "cv::ml::EM::trainM": [{"name": "cv.ml_EM.trainM", "arg": "samples, probs0[, logLikelihoods[, labels[, probs]]]", "ret": "retval, logLikelihoods, labels, probs"}], "cv::ml::KNearest::create": [{"name": "cv.ml.KNearest_create", "arg": "", "ret": "retval"}], "cv::ml::KNearest::findNearest": [{"name": "cv.ml_KNearest.findNearest", "arg": "samples, k[, results[, neighborResponses[, dist]]]", "ret": "retval, results, neighborResponses, dist"}], "cv::ml::KNearest::getAlgorithmType": [{"name": "cv.ml_KNearest.getAlgorithmType", "arg": "", "ret": "retval"}], "cv::ml::KNearest::getDefaultK": [{"name": "cv.ml_KNearest.getDefaultK", "arg": "", "ret": "retval"}], "cv::ml::KNearest::getEmax": [{"name": "cv.ml_KNearest.getEmax", "arg": "", "ret": "retval"}], "cv::ml::KNearest::getIsClassifier": [{"name": "cv.ml_KNearest.getIsClassifier", "arg": "", "ret": "retval"}], "cv::ml::KNearest::load": [{"name": "cv.ml.KNearest_load", "arg": "filepath", "ret": "retval"}], "cv::ml::KNearest::setAlgorithmType": [{"name": "cv.ml_KNearest.setAlgorithmType", "arg": "val", "ret": "None"}], "cv::ml::KNearest::setDefaultK": [{"name": "cv.ml_KNearest.setDefaultK", "arg": "val", "ret": "None"}], "cv::ml::KNearest::setEmax": [{"name": "cv.ml_KNearest.setEmax", "arg": "val", "ret": "None"}], "cv::ml::KNearest::setIsClassifier": [{"name": "cv.ml_KNearest.setIsClassifier", "arg": "val", "ret": "None"}], "cv::ml::LogisticRegression::create": [{"name": "cv.ml.LogisticRegression_create", "arg": "", "ret": "retval"}], "cv::ml::LogisticRegression::getIterations": [{"name": "cv.ml_LogisticRegression.getIterations", "arg": "", "ret": "retval"}], "cv::ml::LogisticRegression::getLearningRate": [{"name": "cv.ml_LogisticRegression.getLearningRate", "arg": "", "ret": "retval"}], "cv::ml::LogisticRegression::getMiniBatchSize": [{"name": "cv.ml_LogisticRegression.getMiniBatchSize", "arg": "", "ret": "retval"}], "cv::ml::LogisticRegression::getRegularization": [{"name": "cv.ml_LogisticRegression.getRegularization", "arg": "", "ret": "retval"}], "cv::ml::LogisticRegression::getTermCriteria": [{"name": "cv.ml_LogisticRegression.getTermCriteria", "arg": "", "ret": "retval"}], "cv::ml::LogisticRegression::getTrainMethod": [{"name": "cv.ml_LogisticRegression.getTrainMethod", "arg": "", "ret": "retval"}], "cv::ml::LogisticRegression::get_learnt_thetas": [{"name": "cv.ml_LogisticRegression.get_learnt_thetas", "arg": "", "ret": "retval"}], "cv::ml::LogisticRegression::load": [{"name": "cv.ml.LogisticRegression_load", "arg": "filepath[, nodeName]", "ret": "retval"}], "cv::ml::LogisticRegression::predict": [{"name": "cv.ml_LogisticRegression.predict", "arg": "samples[, results[, flags]]", "ret": "retval, results"}], "cv::ml::LogisticRegression::setIterations": [{"name": "cv.ml_LogisticRegression.setIterations", "arg": "val", "ret": "None"}], "cv::ml::LogisticRegression::setLearningRate": [{"name": "cv.ml_LogisticRegression.setLearningRate", "arg": "val", "ret": "None"}], "cv::ml::LogisticRegression::setMiniBatchSize": [{"name": "cv.ml_LogisticRegression.setMiniBatchSize", "arg": "val", "ret": "None"}], "cv::ml::LogisticRegression::setRegularization": [{"name": "cv.ml_LogisticRegression.setRegularization", "arg": "val", "ret": "None"}], "cv::ml::LogisticRegression::setTermCriteria": [{"name": "cv.ml_LogisticRegression.setTermCriteria", "arg": "val", "ret": "None"}], "cv::ml::LogisticRegression::setTrainMethod": [{"name": "cv.ml_LogisticRegression.setTrainMethod", "arg": "val", "ret": "None"}], "cv::ml::NormalBayesClassifier::create": [{"name": "cv.ml.NormalBayesClassifier_create", "arg": "", "ret": "retval"}], "cv::ml::NormalBayesClassifier::load": [{"name": "cv.ml.NormalBayesClassifier_load", "arg": "filepath[, nodeName]", "ret": "retval"}], "cv::ml::NormalBayesClassifier::predictProb": [{"name": "cv.ml_NormalBayesClassifier.predictProb", "arg": "inputs[, outputs[, outputProbs[, flags]]]", "ret": "retval, outputs, outputProbs"}], "cv::ml::ParamGrid::create": [{"name": "cv.ml.ParamGrid_create", "arg": "[, minVal[, maxVal[, logstep]]]", "ret": "retval"}], "cv::ml::RTrees::create": [{"name": "cv.ml.RTrees_create", "arg": "", "ret": "retval"}], "cv::ml::RTrees::getActiveVarCount": [{"name": "cv.ml_RTrees.getActiveVarCount", "arg": "", "ret": "retval"}], "cv::ml::RTrees::getCalculateVarImportance": [{"name": "cv.ml_RTrees.getCalculateVarImportance", "arg": "", "ret": "retval"}], "cv::ml::RTrees::getOOBError": [{"name": "cv.ml_RTrees.getOOBError", "arg": "", "ret": "retval"}], "cv::ml::RTrees::getTermCriteria": [{"name": "cv.ml_RTrees.getTermCriteria", "arg": "", "ret": "retval"}], "cv::ml::RTrees::getVarImportance": [{"name": "cv.ml_RTrees.getVarImportance", "arg": "", "ret": "retval"}], "cv::ml::RTrees::getVotes": [{"name": "cv.ml_RTrees.getVotes", "arg": "samples, flags[, results]", "ret": "results"}], "cv::ml::RTrees::load": [{"name": "cv.ml.RTrees_load", "arg": "filepath[, nodeName]", "ret": "retval"}], "cv::ml::RTrees::setActiveVarCount": [{"name": "cv.ml_RTrees.setActiveVarCount", "arg": "val", "ret": "None"}], "cv::ml::RTrees::setCalculateVarImportance": [{"name": "cv.ml_RTrees.setCalculateVarImportance", "arg": "val", "ret": "None"}], "cv::ml::RTrees::setTermCriteria": [{"name": "cv.ml_RTrees.setTermCriteria", "arg": "val", "ret": "None"}], "cv::ml::SVM::create": [{"name": "cv.ml.SVM_create", "arg": "", "ret": "retval"}], "cv::ml::SVM::getC": [{"name": "cv.ml_SVM.getC", "arg": "", "ret": "retval"}], "cv::ml::SVM::getClassWeights": [{"name": "cv.ml_SVM.getClassWeights", "arg": "", "ret": "retval"}], "cv::ml::SVM::getCoef0": [{"name": "cv.ml_SVM.getCoef0", "arg": "", "ret": "retval"}], "cv::ml::SVM::getDecisionFunction": [{"name": "cv.ml_SVM.getDecisionFunction", "arg": "i[, alpha[, svidx]]", "ret": "retval, alpha, svidx"}], "cv::ml::SVM::getDefaultGridPtr": [{"name": "cv.ml.SVM_getDefaultGridPtr", "arg": "param_id", "ret": "retval"}], "cv::ml::SVM::getDegree": [{"name": "cv.ml_SVM.getDegree", "arg": "", "ret": "retval"}], "cv::ml::SVM::getGamma": [{"name": "cv.ml_SVM.getGamma", "arg": "", "ret": "retval"}], "cv::ml::SVM::getKernelType": [{"name": "cv.ml_SVM.getKernelType", "arg": "", "ret": "retval"}], "cv::ml::SVM::getNu": [{"name": "cv.ml_SVM.getNu", "arg": "", "ret": "retval"}], "cv::ml::SVM::getP": [{"name": "cv.ml_SVM.getP", "arg": "", "ret": "retval"}], "cv::ml::SVM::getSupportVectors": [{"name": "cv.ml_SVM.getSupportVectors", "arg": "", "ret": "retval"}], "cv::ml::SVM::getTermCriteria": [{"name": "cv.ml_SVM.getTermCriteria", "arg": "", "ret": "retval"}], "cv::ml::SVM::getType": [{"name": "cv.ml_SVM.getType", "arg": "", "ret": "retval"}], "cv::ml::SVM::getUncompressedSupportVectors": [{"name": "cv.ml_SVM.getUncompressedSupportVectors", "arg": "", "ret": "retval"}], "cv::ml::SVM::load": [{"name": "cv.ml.SVM_load", "arg": "filepath", "ret": "retval"}], "cv::ml::SVM::setC": [{"name": "cv.ml_SVM.setC", "arg": "val", "ret": "None"}], "cv::ml::SVM::setClassWeights": [{"name": "cv.ml_SVM.setClassWeights", "arg": "val", "ret": "None"}], "cv::ml::SVM::setCoef0": [{"name": "cv.ml_SVM.setCoef0", "arg": "val", "ret": "None"}], "cv::ml::SVM::setDegree": [{"name": "cv.ml_SVM.setDegree", "arg": "val", "ret": "None"}], "cv::ml::SVM::setGamma": [{"name": "cv.ml_SVM.setGamma", "arg": "val", "ret": "None"}], "cv::ml::SVM::setKernel": [{"name": "cv.ml_SVM.setKernel", "arg": "kernelType", "ret": "None"}], "cv::ml::SVM::setNu": [{"name": "cv.ml_SVM.setNu", "arg": "val", "ret": "None"}], "cv::ml::SVM::setP": [{"name": "cv.ml_SVM.setP", "arg": "val", "ret": "None"}], "cv::ml::SVM::setTermCriteria": [{"name": "cv.ml_SVM.setTermCriteria", "arg": "val", "ret": "None"}], "cv::ml::SVM::setType": [{"name": "cv.ml_SVM.setType", "arg": "val", "ret": "None"}], "cv::ml::SVM::trainAuto": [{"name": "cv.ml_SVM.trainAuto", "arg": "samples, layout, responses[, kFold[, Cgrid[, gammaGrid[, pGrid[, nuGrid[, coeffGrid[, degreeGrid[, balanced]]]]]]]]", "ret": "retval"}], "cv::ml::SVMSGD::create": [{"name": "cv.ml.SVMSGD_create", "arg": "", "ret": "retval"}], "cv::ml::SVMSGD::getInitialStepSize": [{"name": "cv.ml_SVMSGD.getInitialStepSize", "arg": "", "ret": "retval"}], "cv::ml::SVMSGD::getMarginRegularization": [{"name": "cv.ml_SVMSGD.getMarginRegularization", "arg": "", "ret": "retval"}], "cv::ml::SVMSGD::getMarginType": [{"name": "cv.ml_SVMSGD.getMarginType", "arg": "", "ret": "retval"}], "cv::ml::SVMSGD::getShift": [{"name": "cv.ml_SVMSGD.getShift", "arg": "", "ret": "retval"}], "cv::ml::SVMSGD::getStepDecreasingPower": [{"name": "cv.ml_SVMSGD.getStepDecreasingPower", "arg": "", "ret": "retval"}], "cv::ml::SVMSGD::getSvmsgdType": [{"name": "cv.ml_SVMSGD.getSvmsgdType", "arg": "", "ret": "retval"}], "cv::ml::SVMSGD::getTermCriteria": [{"name": "cv.ml_SVMSGD.getTermCriteria", "arg": "", "ret": "retval"}], "cv::ml::SVMSGD::getWeights": [{"name": "cv.ml_SVMSGD.getWeights", "arg": "", "ret": "retval"}], "cv::ml::SVMSGD::load": [{"name": "cv.ml.SVMSGD_load", "arg": "filepath[, nodeName]", "ret": "retval"}], "cv::ml::SVMSGD::setInitialStepSize": [{"name": "cv.ml_SVMSGD.setInitialStepSize", "arg": "InitialStepSize", "ret": "None"}], "cv::ml::SVMSGD::setMarginRegularization": [{"name": "cv.ml_SVMSGD.setMarginRegularization", "arg": "marginRegularization", "ret": "None"}], "cv::ml::SVMSGD::setMarginType": [{"name": "cv.ml_SVMSGD.setMarginType", "arg": "marginType", "ret": "None"}], "cv::ml::SVMSGD::setOptimalParameters": [{"name": "cv.ml_SVMSGD.setOptimalParameters", "arg": "[, svmsgdType[, marginType]]", "ret": "None"}], "cv::ml::SVMSGD::setStepDecreasingPower": [{"name": "cv.ml_SVMSGD.setStepDecreasingPower", "arg": "stepDecreasingPower", "ret": "None"}], "cv::ml::SVMSGD::setSvmsgdType": [{"name": "cv.ml_SVMSGD.setSvmsgdType", "arg": "svmsgdType", "ret": "None"}], "cv::ml::SVMSGD::setTermCriteria": [{"name": "cv.ml_SVMSGD.setTermCriteria", "arg": "val", "ret": "None"}], "cv::ml::StatModel::calcError": [{"name": "cv.ml_StatModel.calcError", "arg": "data, test[, resp]", "ret": "retval, resp"}], "cv::ml::StatModel::empty": [{"name": "cv.ml_StatModel.empty", "arg": "", "ret": "retval"}], "cv::ml::StatModel::getVarCount": [{"name": "cv.ml_StatModel.getVarCount", "arg": "", "ret": "retval"}], "cv::ml::StatModel::isClassifier": [{"name": "cv.ml_StatModel.isClassifier", "arg": "", "ret": "retval"}], "cv::ml::StatModel::isTrained": [{"name": "cv.ml_StatModel.isTrained", "arg": "", "ret": "retval"}], "cv::ml::StatModel::predict": [{"name": "cv.ml_StatModel.predict", "arg": "samples[, results[, flags]]", "ret": "retval, results"}], "cv::ml::StatModel::train": [{"name": "cv.ml_StatModel.train", "arg": "trainData[, flags]", "ret": "retval"}, {"name": "cv.ml_StatModel.train", "arg": "samples, layout, responses", "ret": "retval"}], "cv::ml::TrainData::create": [{"name": "cv.ml.TrainData_create", "arg": "samples, layout, responses[, varIdx[, sampleIdx[, sampleWeights[, varType]]]]", "ret": "retval"}], "cv::ml::TrainData::getCatCount": [{"name": "cv.ml_TrainData.getCatCount", "arg": "vi", "ret": "retval"}], "cv::ml::TrainData::getCatMap": [{"name": "cv.ml_TrainData.getCatMap", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getCatOfs": [{"name": "cv.ml_TrainData.getCatOfs", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getClassLabels": [{"name": "cv.ml_TrainData.getClassLabels", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getDefaultSubstValues": [{"name": "cv.ml_TrainData.getDefaultSubstValues", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getLayout": [{"name": "cv.ml_TrainData.getLayout", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getMissing": [{"name": "cv.ml_TrainData.getMissing", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getNAllVars": [{"name": "cv.ml_TrainData.getNAllVars", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getNSamples": [{"name": "cv.ml_TrainData.getNSamples", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getNTestSamples": [{"name": "cv.ml_TrainData.getNTestSamples", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getNTrainSamples": [{"name": "cv.ml_TrainData.getNTrainSamples", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getNVars": [{"name": "cv.ml_TrainData.getNVars", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getNames": [{"name": "cv.ml_TrainData.getNames", "arg": "names", "ret": "None"}], "cv::ml::TrainData::getNormCatResponses": [{"name": "cv.ml_TrainData.getNormCatResponses", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getResponseType": [{"name": "cv.ml_TrainData.getResponseType", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getResponses": [{"name": "cv.ml_TrainData.getResponses", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getSample": [{"name": "cv.ml_TrainData.getSample", "arg": "varIdx, sidx, buf", "ret": "None"}], "cv::ml::TrainData::getSampleWeights": [{"name": "cv.ml_TrainData.getSampleWeights", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getSamples": [{"name": "cv.ml_TrainData.getSamples", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getSubMatrix": [{"name": "cv.ml.TrainData_getSubMatrix", "arg": "matrix, idx, layout", "ret": "retval"}], "cv::ml::TrainData::getSubVector": [{"name": "cv.ml.TrainData_getSubVector", "arg": "vec, idx", "ret": "retval"}], "cv::ml::TrainData::getTestNormCatResponses": [{"name": "cv.ml_TrainData.getTestNormCatResponses", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getTestResponses": [{"name": "cv.ml_TrainData.getTestResponses", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getTestSampleIdx": [{"name": "cv.ml_TrainData.getTestSampleIdx", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getTestSampleWeights": [{"name": "cv.ml_TrainData.getTestSampleWeights", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getTestSamples": [{"name": "cv.ml_TrainData.getTestSamples", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getTrainNormCatResponses": [{"name": "cv.ml_TrainData.getTrainNormCatResponses", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getTrainResponses": [{"name": "cv.ml_TrainData.getTrainResponses", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getTrainSampleIdx": [{"name": "cv.ml_TrainData.getTrainSampleIdx", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getTrainSampleWeights": [{"name": "cv.ml_TrainData.getTrainSampleWeights", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getTrainSamples": [{"name": "cv.ml_TrainData.getTrainSamples", "arg": "[, layout[, compressSamples[, compressVars]]]", "ret": "retval"}], "cv::ml::TrainData::getValues": [{"name": "cv.ml_TrainData.getValues", "arg": "vi, sidx, values", "ret": "None"}], "cv::ml::TrainData::getVarIdx": [{"name": "cv.ml_TrainData.getVarIdx", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getVarSymbolFlags": [{"name": "cv.ml_TrainData.getVarSymbolFlags", "arg": "", "ret": "retval"}], "cv::ml::TrainData::getVarType": [{"name": "cv.ml_TrainData.getVarType", "arg": "", "ret": "retval"}], "cv::ml::TrainData::setTrainTestSplit": [{"name": "cv.ml_TrainData.setTrainTestSplit", "arg": "count[, shuffle]", "ret": "None"}], "cv::ml::TrainData::setTrainTestSplitRatio": [{"name": "cv.ml_TrainData.setTrainTestSplitRatio", "arg": "ratio[, shuffle]", "ret": "None"}], "cv::ml::TrainData::shuffleTrainTest": [{"name": "cv.ml_TrainData.shuffleTrainTest", "arg": "", "ret": "None"}], "cv::ocl::Device::Device": [{"name": "cv.ocl_Device", "arg": "", "ret": "<ocl_Device object>"}], "cv::ocl::Device::OpenCLVersion": [{"name": "cv.ocl_Device.OpenCLVersion", "arg": "", "ret": "retval"}], "cv::ocl::Device::OpenCL_C_Version": [{"name": "cv.ocl_Device.OpenCL_C_Version", "arg": "", "ret": "retval"}], "cv::ocl::Device::addressBits": [{"name": "cv.ocl_Device.addressBits", "arg": "", "ret": "retval"}], "cv::ocl::Device::available": [{"name": "cv.ocl_Device.available", "arg": "", "ret": "retval"}], "cv::ocl::Device::compilerAvailable": [{"name": "cv.ocl_Device.compilerAvailable", "arg": "", "ret": "retval"}], "cv::ocl::Device::deviceVersionMajor": [{"name": "cv.ocl_Device.deviceVersionMajor", "arg": "", "ret": "retval"}], "cv::ocl::Device::deviceVersionMinor": [{"name": "cv.ocl_Device.deviceVersionMinor", "arg": "", "ret": "retval"}], "cv::ocl::Device::doubleFPConfig": [{"name": "cv.ocl_Device.doubleFPConfig", "arg": "", "ret": "retval"}], "cv::ocl::Device::driverVersion": [{"name": "cv.ocl_Device.driverVersion", "arg": "", "ret": "retval"}], "cv::ocl::Device::endianLittle": [{"name": "cv.ocl_Device.endianLittle", "arg": "", "ret": "retval"}], "cv::ocl::Device::errorCorrectionSupport": [{"name": "cv.ocl_Device.errorCorrectionSupport", "arg": "", "ret": "retval"}], "cv::ocl::Device::executionCapabilities": [{"name": "cv.ocl_Device.executionCapabilities", "arg": "", "ret": "retval"}], "cv::ocl::Device::extensions": [{"name": "cv.ocl_Device.extensions", "arg": "", "ret": "retval"}], "cv::ocl::Device::getDefault": [{"name": "cv.ocl.Device_getDefault", "arg": "", "ret": "retval"}], "cv::ocl::Device::globalMemCacheLineSize": [{"name": "cv.ocl_Device.globalMemCacheLineSize", "arg": "", "ret": "retval"}], "cv::ocl::Device::globalMemCacheSize": [{"name": "cv.ocl_Device.globalMemCacheSize", "arg": "", "ret": "retval"}], "cv::ocl::Device::globalMemCacheType": [{"name": "cv.ocl_Device.globalMemCacheType", "arg": "", "ret": "retval"}], "cv::ocl::Device::globalMemSize": [{"name": "cv.ocl_Device.globalMemSize", "arg": "", "ret": "retval"}], "cv::ocl::Device::halfFPConfig": [{"name": "cv.ocl_Device.halfFPConfig", "arg": "", "ret": "retval"}], "cv::ocl::Device::hostUnifiedMemory": [{"name": "cv.ocl_Device.hostUnifiedMemory", "arg": "", "ret": "retval"}], "cv::ocl::Device::image2DMaxHeight": [{"name": "cv.ocl_Device.image2DMaxHeight", "arg": "", "ret": "retval"}], "cv::ocl::Device::image2DMaxWidth": [{"name": "cv.ocl_Device.image2DMaxWidth", "arg": "", "ret": "retval"}], "cv::ocl::Device::image3DMaxDepth": [{"name": "cv.ocl_Device.image3DMaxDepth", "arg": "", "ret": "retval"}], "cv::ocl::Device::image3DMaxHeight": [{"name": "cv.ocl_Device.image3DMaxHeight", "arg": "", "ret": "retval"}], "cv::ocl::Device::image3DMaxWidth": [{"name": "cv.ocl_Device.image3DMaxWidth", "arg": "", "ret": "retval"}], "cv::ocl::Device::imageFromBufferSupport": [{"name": "cv.ocl_Device.imageFromBufferSupport", "arg": "", "ret": "retval"}], "cv::ocl::Device::imageMaxArraySize": [{"name": "cv.ocl_Device.imageMaxArraySize", "arg": "", "ret": "retval"}], "cv::ocl::Device::imageMaxBufferSize": [{"name": "cv.ocl_Device.imageMaxBufferSize", "arg": "", "ret": "retval"}], "cv::ocl::Device::imageSupport": [{"name": "cv.ocl_Device.imageSupport", "arg": "", "ret": "retval"}], "cv::ocl::Device::intelSubgroupsSupport": [{"name": "cv.ocl_Device.intelSubgroupsSupport", "arg": "", "ret": "retval"}], "cv::ocl::Device::isAMD": [{"name": "cv.ocl_Device.isAMD", "arg": "", "ret": "retval"}], "cv::ocl::Device::isExtensionSupported": [{"name": "cv.ocl_Device.isExtensionSupported", "arg": "extensionName", "ret": "retval"}], "cv::ocl::Device::isIntel": [{"name": "cv.ocl_Device.isIntel", "arg": "", "ret": "retval"}], "cv::ocl::Device::isNVidia": [{"name": "cv.ocl_Device.isNVidia", "arg": "", "ret": "retval"}], "cv::ocl::Device::linkerAvailable": [{"name": "cv.ocl_Device.linkerAvailable", "arg": "", "ret": "retval"}], "cv::ocl::Device::localMemSize": [{"name": "cv.ocl_Device.localMemSize", "arg": "", "ret": "retval"}], "cv::ocl::Device::localMemType": [{"name": "cv.ocl_Device.localMemType", "arg": "", "ret": "retval"}], "cv::ocl::Device::maxClockFrequency": [{"name": "cv.ocl_Device.maxClockFrequency", "arg": "", "ret": "retval"}], "cv::ocl::Device::maxComputeUnits": [{"name": "cv.ocl_Device.maxComputeUnits", "arg": "", "ret": "retval"}], "cv::ocl::Device::maxConstantArgs": [{"name": "cv.ocl_Device.maxConstantArgs", "arg": "", "ret": "retval"}], "cv::ocl::Device::maxConstantBufferSize": [{"name": "cv.ocl_Device.maxConstantBufferSize", "arg": "", "ret": "retval"}], "cv::ocl::Device::maxMemAllocSize": [{"name": "cv.ocl_Device.maxMemAllocSize", "arg": "", "ret": "retval"}], "cv::ocl::Device::maxParameterSize": [{"name": "cv.ocl_Device.maxParameterSize", "arg": "", "ret": "retval"}], "cv::ocl::Device::maxReadImageArgs": [{"name": "cv.ocl_Device.maxReadImageArgs", "arg": "", "ret": "retval"}], "cv::ocl::Device::maxSamplers": [{"name": "cv.ocl_Device.maxSamplers", "arg": "", "ret": "retval"}], "cv::ocl::Device::maxWorkGroupSize": [{"name": "cv.ocl_Device.maxWorkGroupSize", "arg": "", "ret": "retval"}], "cv::ocl::Device::maxWorkItemDims": [{"name": "cv.ocl_Device.maxWorkItemDims", "arg": "", "ret": "retval"}], "cv::ocl::Device::maxWriteImageArgs": [{"name": "cv.ocl_Device.maxWriteImageArgs", "arg": "", "ret": "retval"}], "cv::ocl::Device::memBaseAddrAlign": [{"name": "cv.ocl_Device.memBaseAddrAlign", "arg": "", "ret": "retval"}], "cv::ocl::Device::name": [{"name": "cv.ocl_Device.name", "arg": "", "ret": "retval"}], "cv::ocl::Device::nativeVectorWidthChar": [{"name": "cv.ocl_Device.nativeVectorWidthChar", "arg": "", "ret": "retval"}], "cv::ocl::Device::nativeVectorWidthDouble": [{"name": "cv.ocl_Device.nativeVectorWidthDouble", "arg": "", "ret": "retval"}], "cv::ocl::Device::nativeVectorWidthFloat": [{"name": "cv.ocl_Device.nativeVectorWidthFloat", "arg": "", "ret": "retval"}], "cv::ocl::Device::nativeVectorWidthHalf": [{"name": "cv.ocl_Device.nativeVectorWidthHalf", "arg": "", "ret": "retval"}], "cv::ocl::Device::nativeVectorWidthInt": [{"name": "cv.ocl_Device.nativeVectorWidthInt", "arg": "", "ret": "retval"}], "cv::ocl::Device::nativeVectorWidthLong": [{"name": "cv.ocl_Device.nativeVectorWidthLong", "arg": "", "ret": "retval"}], "cv::ocl::Device::nativeVectorWidthShort": [{"name": "cv.ocl_Device.nativeVectorWidthShort", "arg": "", "ret": "retval"}], "cv::ocl::Device::preferredVectorWidthChar": [{"name": "cv.ocl_Device.preferredVectorWidthChar", "arg": "", "ret": "retval"}], "cv::ocl::Device::preferredVectorWidthDouble": [{"name": "cv.ocl_Device.preferredVectorWidthDouble", "arg": "", "ret": "retval"}], "cv::ocl::Device::preferredVectorWidthFloat": [{"name": "cv.ocl_Device.preferredVectorWidthFloat", "arg": "", "ret": "retval"}], "cv::ocl::Device::preferredVectorWidthHalf": [{"name": "cv.ocl_Device.preferredVectorWidthHalf", "arg": "", "ret": "retval"}], "cv::ocl::Device::preferredVectorWidthInt": [{"name": "cv.ocl_Device.preferredVectorWidthInt", "arg": "", "ret": "retval"}], "cv::ocl::Device::preferredVectorWidthLong": [{"name": "cv.ocl_Device.preferredVectorWidthLong", "arg": "", "ret": "retval"}], "cv::ocl::Device::preferredVectorWidthShort": [{"name": "cv.ocl_Device.preferredVectorWidthShort", "arg": "", "ret": "retval"}], "cv::ocl::Device::printfBufferSize": [{"name": "cv.ocl_Device.printfBufferSize", "arg": "", "ret": "retval"}], "cv::ocl::Device::profilingTimerResolution": [{"name": "cv.ocl_Device.profilingTimerResolution", "arg": "", "ret": "retval"}], "cv::ocl::Device::singleFPConfig": [{"name": "cv.ocl_Device.singleFPConfig", "arg": "", "ret": "retval"}], "cv::ocl::Device::type": [{"name": "cv.ocl_Device.type", "arg": "", "ret": "retval"}], "cv::ocl::Device::vendorID": [{"name": "cv.ocl_Device.vendorID", "arg": "", "ret": "retval"}], "cv::ocl::Device::vendorName": [{"name": "cv.ocl_Device.vendorName", "arg": "", "ret": "retval"}], "cv::ocl::Device::version": [{"name": "cv.ocl_Device.version", "arg": "", "ret": "retval"}], "cv::optflow::DenseRLOFOpticalFlow::create": [{"name": "cv.optflow.DenseRLOFOpticalFlow_create", "arg": "[, rlofParam[, forwardBackwardThreshold[, gridStep[, interp_type[, epicK[, epicSigma[, epicLambda[, ricSPSize[, ricSLICType[, use_post_proc[, fgsLambda[, fgsSigma[, use_variational_refinement]]]]]]]]]]]]]", "ret": "retval"}], "cv::optflow::DenseRLOFOpticalFlow::getEPICK": [{"name": "cv.optflow_DenseRLOFOpticalFlow.getEPICK", "arg": "", "ret": "retval"}], "cv::optflow::DenseRLOFOpticalFlow::getEPICLambda": [{"name": "cv.optflow_DenseRLOFOpticalFlow.getEPICLambda", "arg": "", "ret": "retval"}], "cv::optflow::DenseRLOFOpticalFlow::getEPICSigma": [{"name": "cv.optflow_DenseRLOFOpticalFlow.getEPICSigma", "arg": "", "ret": "retval"}], "cv::optflow::DenseRLOFOpticalFlow::getFgsLambda": [{"name": "cv.optflow_DenseRLOFOpticalFlow.getFgsLambda", "arg": "", "ret": "retval"}], "cv::optflow::DenseRLOFOpticalFlow::getFgsSigma": [{"name": "cv.optflow_DenseRLOFOpticalFlow.getFgsSigma", "arg": "", "ret": "retval"}], "cv::optflow::DenseRLOFOpticalFlow::getForwardBackward": [{"name": "cv.optflow_DenseRLOFOpticalFlow.getForwardBackward", "arg": "", "ret": "retval"}], "cv::optflow::DenseRLOFOpticalFlow::getGridStep": [{"name": "cv.optflow_DenseRLOFOpticalFlow.getGridStep", "arg": "", "ret": "retval"}], "cv::optflow::DenseRLOFOpticalFlow::getInterpolation": [{"name": "cv.optflow_DenseRLOFOpticalFlow.getInterpolation", "arg": "", "ret": "retval"}], "cv::optflow::DenseRLOFOpticalFlow::getRICSLICType": [{"name": "cv.optflow_DenseRLOFOpticalFlow.getRICSLICType", "arg": "", "ret": "retval"}], "cv::optflow::DenseRLOFOpticalFlow::getRICSPSize": [{"name": "cv.optflow_DenseRLOFOpticalFlow.getRICSPSize", "arg": "", "ret": "retval"}], "cv::optflow::DenseRLOFOpticalFlow::getRLOFOpticalFlowParameter": [{"name": "cv.optflow_DenseRLOFOpticalFlow.getRLOFOpticalFlowParameter", "arg": "", "ret": "retval"}], "cv::optflow::DenseRLOFOpticalFlow::getUsePostProc": [{"name": "cv.optflow_DenseRLOFOpticalFlow.getUsePostProc", "arg": "", "ret": "retval"}], "cv::optflow::DenseRLOFOpticalFlow::getUseVariationalRefinement": [{"name": "cv.optflow_DenseRLOFOpticalFlow.getUseVariationalRefinement", "arg": "", "ret": "retval"}], "cv::optflow::DenseRLOFOpticalFlow::setEPICK": [{"name": "cv.optflow_DenseRLOFOpticalFlow.setEPICK", "arg": "val", "ret": "None"}], "cv::optflow::DenseRLOFOpticalFlow::setEPICLambda": [{"name": "cv.optflow_DenseRLOFOpticalFlow.setEPICLambda", "arg": "val", "ret": "None"}], "cv::optflow::DenseRLOFOpticalFlow::setEPICSigma": [{"name": "cv.optflow_DenseRLOFOpticalFlow.setEPICSigma", "arg": "val", "ret": "None"}], "cv::optflow::DenseRLOFOpticalFlow::setFgsLambda": [{"name": "cv.optflow_DenseRLOFOpticalFlow.setFgsLambda", "arg": "val", "ret": "None"}], "cv::optflow::DenseRLOFOpticalFlow::setFgsSigma": [{"name": "cv.optflow_DenseRLOFOpticalFlow.setFgsSigma", "arg": "val", "ret": "None"}], "cv::optflow::DenseRLOFOpticalFlow::setForwardBackward": [{"name": "cv.optflow_DenseRLOFOpticalFlow.setForwardBackward", "arg": "val", "ret": "None"}], "cv::optflow::DenseRLOFOpticalFlow::setGridStep": [{"name": "cv.optflow_DenseRLOFOpticalFlow.setGridStep", "arg": "val", "ret": "None"}], "cv::optflow::DenseRLOFOpticalFlow::setInterpolation": [{"name": "cv.optflow_DenseRLOFOpticalFlow.setInterpolation", "arg": "val", "ret": "None"}], "cv::optflow::DenseRLOFOpticalFlow::setRICSLICType": [{"name": "cv.optflow_DenseRLOFOpticalFlow.setRICSLICType", "arg": "val", "ret": "None"}], "cv::optflow::DenseRLOFOpticalFlow::setRICSPSize": [{"name": "cv.optflow_DenseRLOFOpticalFlow.setRICSPSize", "arg": "val", "ret": "None"}], "cv::optflow::DenseRLOFOpticalFlow::setRLOFOpticalFlowParameter": [{"name": "cv.optflow_DenseRLOFOpticalFlow.setRLOFOpticalFlowParameter", "arg": "val", "ret": "None"}], "cv::optflow::DenseRLOFOpticalFlow::setUsePostProc": [{"name": "cv.optflow_DenseRLOFOpticalFlow.setUsePostProc", "arg": "val", "ret": "None"}], "cv::optflow::DenseRLOFOpticalFlow::setUseVariationalRefinement": [{"name": "cv.optflow_DenseRLOFOpticalFlow.setUseVariationalRefinement", "arg": "val", "ret": "None"}], "cv::optflow::DualTVL1OpticalFlow::create": [{"name": "cv.optflow.DualTVL1OpticalFlow_create", "arg": "[, tau[, lambda[, theta[, nscales[, warps[, epsilon[, innnerIterations[, outerIterations[, scaleStep[, gamma[, medianFiltering[, useInitialFlow]]]]]]]]]]]]", "ret": "retval"}], "cv::optflow::DualTVL1OpticalFlow::getEpsilon": [{"name": "cv.optflow_DualTVL1OpticalFlow.getEpsilon", "arg": "", "ret": "retval"}], "cv::optflow::DualTVL1OpticalFlow::getGamma": [{"name": "cv.optflow_DualTVL1OpticalFlow.getGamma", "arg": "", "ret": "retval"}], "cv::optflow::DualTVL1OpticalFlow::getInnerIterations": [{"name": "cv.optflow_DualTVL1OpticalFlow.getInnerIterations", "arg": "", "ret": "retval"}], "cv::optflow::DualTVL1OpticalFlow::getLambda": [{"name": "cv.optflow_DualTVL1OpticalFlow.getLambda", "arg": "", "ret": "retval"}], "cv::optflow::DualTVL1OpticalFlow::getMedianFiltering": [{"name": "cv.optflow_DualTVL1OpticalFlow.getMedianFiltering", "arg": "", "ret": "retval"}], "cv::optflow::DualTVL1OpticalFlow::getOuterIterations": [{"name": "cv.optflow_DualTVL1OpticalFlow.getOuterIterations", "arg": "", "ret": "retval"}], "cv::optflow::DualTVL1OpticalFlow::getScaleStep": [{"name": "cv.optflow_DualTVL1OpticalFlow.getScaleStep", "arg": "", "ret": "retval"}], "cv::optflow::DualTVL1OpticalFlow::getScalesNumber": [{"name": "cv.optflow_DualTVL1OpticalFlow.getScalesNumber", "arg": "", "ret": "retval"}], "cv::optflow::DualTVL1OpticalFlow::getTau": [{"name": "cv.optflow_DualTVL1OpticalFlow.getTau", "arg": "", "ret": "retval"}], "cv::optflow::DualTVL1OpticalFlow::getTheta": [{"name": "cv.optflow_DualTVL1OpticalFlow.getTheta", "arg": "", "ret": "retval"}], "cv::optflow::DualTVL1OpticalFlow::getUseInitialFlow": [{"name": "cv.optflow_DualTVL1OpticalFlow.getUseInitialFlow", "arg": "", "ret": "retval"}], "cv::optflow::DualTVL1OpticalFlow::getWarpingsNumber": [{"name": "cv.optflow_DualTVL1OpticalFlow.getWarpingsNumber", "arg": "", "ret": "retval"}], "cv::optflow::DualTVL1OpticalFlow::setEpsilon": [{"name": "cv.optflow_DualTVL1OpticalFlow.setEpsilon", "arg": "val", "ret": "None"}], "cv::optflow::DualTVL1OpticalFlow::setGamma": [{"name": "cv.optflow_DualTVL1OpticalFlow.setGamma", "arg": "val", "ret": "None"}], "cv::optflow::DualTVL1OpticalFlow::setInnerIterations": [{"name": "cv.optflow_DualTVL1OpticalFlow.setInnerIterations", "arg": "val", "ret": "None"}], "cv::optflow::DualTVL1OpticalFlow::setLambda": [{"name": "cv.optflow_DualTVL1OpticalFlow.setLambda", "arg": "val", "ret": "None"}], "cv::optflow::DualTVL1OpticalFlow::setMedianFiltering": [{"name": "cv.optflow_DualTVL1OpticalFlow.setMedianFiltering", "arg": "val", "ret": "None"}], "cv::optflow::DualTVL1OpticalFlow::setOuterIterations": [{"name": "cv.optflow_DualTVL1OpticalFlow.setOuterIterations", "arg": "val", "ret": "None"}], "cv::optflow::DualTVL1OpticalFlow::setScaleStep": [{"name": "cv.optflow_DualTVL1OpticalFlow.setScaleStep", "arg": "val", "ret": "None"}], "cv::optflow::DualTVL1OpticalFlow::setScalesNumber": [{"name": "cv.optflow_DualTVL1OpticalFlow.setScalesNumber", "arg": "val", "ret": "None"}], "cv::optflow::DualTVL1OpticalFlow::setTau": [{"name": "cv.optflow_DualTVL1OpticalFlow.setTau", "arg": "val", "ret": "None"}], "cv::optflow::DualTVL1OpticalFlow::setTheta": [{"name": "cv.optflow_DualTVL1OpticalFlow.setTheta", "arg": "val", "ret": "None"}], "cv::optflow::DualTVL1OpticalFlow::setUseInitialFlow": [{"name": "cv.optflow_DualTVL1OpticalFlow.setUseInitialFlow", "arg": "val", "ret": "None"}], "cv::optflow::DualTVL1OpticalFlow::setWarpingsNumber": [{"name": "cv.optflow_DualTVL1OpticalFlow.setWarpingsNumber", "arg": "val", "ret": "None"}], "cv::optflow::RLOFOpticalFlowParameter::create": [{"name": "cv.optflow.RLOFOpticalFlowParameter_create", "arg": "", "ret": "retval"}], "cv::optflow::RLOFOpticalFlowParameter::getCrossSegmentationThreshold": [{"name": "cv.optflow_RLOFOpticalFlowParameter.getCrossSegmentationThreshold", "arg": "", "ret": "retval"}], "cv::optflow::RLOFOpticalFlowParameter::getGlobalMotionRansacThreshold": [{"name": "cv.optflow_RLOFOpticalFlowParameter.getGlobalMotionRansacThreshold", "arg": "", "ret": "retval"}], "cv::optflow::RLOFOpticalFlowParameter::getLargeWinSize": [{"name": "cv.optflow_RLOFOpticalFlowParameter.getLargeWinSize", "arg": "", "ret": "retval"}], "cv::optflow::RLOFOpticalFlowParameter::getMaxIteration": [{"name": "cv.optflow_RLOFOpticalFlowParameter.getMaxIteration", "arg": "", "ret": "retval"}], "cv::optflow::RLOFOpticalFlowParameter::getMaxLevel": [{"name": "cv.optflow_RLOFOpticalFlowParameter.getMaxLevel", "arg": "", "ret": "retval"}], "cv::optflow::RLOFOpticalFlowParameter::getMinEigenValue": [{"name": "cv.optflow_RLOFOpticalFlowParameter.getMinEigenValue", "arg": "", "ret": "retval"}], "cv::optflow::RLOFOpticalFlowParameter::getNormSigma0": [{"name": "cv.optflow_RLOFOpticalFlowParameter.getNormSigma0", "arg": "", "ret": "retval"}], "cv::optflow::RLOFOpticalFlowParameter::getNormSigma1": [{"name": "cv.optflow_RLOFOpticalFlowParameter.getNormSigma1", "arg": "", "ret": "retval"}], "cv::optflow::RLOFOpticalFlowParameter::getSmallWinSize": [{"name": "cv.optflow_RLOFOpticalFlowParameter.getSmallWinSize", "arg": "", "ret": "retval"}], "cv::optflow::RLOFOpticalFlowParameter::getSolverType": [{"name": "cv.optflow_RLOFOpticalFlowParameter.getSolverType", "arg": "", "ret": "retval"}], "cv::optflow::RLOFOpticalFlowParameter::getSupportRegionType": [{"name": "cv.optflow_RLOFOpticalFlowParameter.getSupportRegionType", "arg": "", "ret": "retval"}], "cv::optflow::RLOFOpticalFlowParameter::getUseGlobalMotionPrior": [{"name": "cv.optflow_RLOFOpticalFlowParameter.getUseGlobalMotionPrior", "arg": "", "ret": "retval"}], "cv::optflow::RLOFOpticalFlowParameter::getUseIlluminationModel": [{"name": "cv.optflow_RLOFOpticalFlowParameter.getUseIlluminationModel", "arg": "", "ret": "retval"}], "cv::optflow::RLOFOpticalFlowParameter::getUseInitialFlow": [{"name": "cv.optflow_RLOFOpticalFlowParameter.getUseInitialFlow", "arg": "", "ret": "retval"}], "cv::optflow::RLOFOpticalFlowParameter::setCrossSegmentationThreshold": [{"name": "cv.optflow_RLOFOpticalFlowParameter.setCrossSegmentationThreshold", "arg": "val", "ret": "None"}], "cv::optflow::RLOFOpticalFlowParameter::setGlobalMotionRansacThreshold": [{"name": "cv.optflow_RLOFOpticalFlowParameter.setGlobalMotionRansacThreshold", "arg": "val", "ret": "None"}], "cv::optflow::RLOFOpticalFlowParameter::setLargeWinSize": [{"name": "cv.optflow_RLOFOpticalFlowParameter.setLargeWinSize", "arg": "val", "ret": "None"}], "cv::optflow::RLOFOpticalFlowParameter::setMaxIteration": [{"name": "cv.optflow_RLOFOpticalFlowParameter.setMaxIteration", "arg": "val", "ret": "None"}], "cv::optflow::RLOFOpticalFlowParameter::setMaxLevel": [{"name": "cv.optflow_RLOFOpticalFlowParameter.setMaxLevel", "arg": "val", "ret": "None"}], "cv::optflow::RLOFOpticalFlowParameter::setMinEigenValue": [{"name": "cv.optflow_RLOFOpticalFlowParameter.setMinEigenValue", "arg": "val", "ret": "None"}], "cv::optflow::RLOFOpticalFlowParameter::setNormSigma0": [{"name": "cv.optflow_RLOFOpticalFlowParameter.setNormSigma0", "arg": "val", "ret": "None"}], "cv::optflow::RLOFOpticalFlowParameter::setNormSigma1": [{"name": "cv.optflow_RLOFOpticalFlowParameter.setNormSigma1", "arg": "val", "ret": "None"}], "cv::optflow::RLOFOpticalFlowParameter::setSmallWinSize": [{"name": "cv.optflow_RLOFOpticalFlowParameter.setSmallWinSize", "arg": "val", "ret": "None"}], "cv::optflow::RLOFOpticalFlowParameter::setSolverType": [{"name": "cv.optflow_RLOFOpticalFlowParameter.setSolverType", "arg": "val", "ret": "None"}], "cv::optflow::RLOFOpticalFlowParameter::setSupportRegionType": [{"name": "cv.optflow_RLOFOpticalFlowParameter.setSupportRegionType", "arg": "val", "ret": "None"}], "cv::optflow::RLOFOpticalFlowParameter::setUseGlobalMotionPrior": [{"name": "cv.optflow_RLOFOpticalFlowParameter.setUseGlobalMotionPrior", "arg": "val", "ret": "None"}], "cv::optflow::RLOFOpticalFlowParameter::setUseIlluminationModel": [{"name": "cv.optflow_RLOFOpticalFlowParameter.setUseIlluminationModel", "arg": "val", "ret": "None"}], "cv::optflow::RLOFOpticalFlowParameter::setUseInitialFlow": [{"name": "cv.optflow_RLOFOpticalFlowParameter.setUseInitialFlow", "arg": "val", "ret": "None"}], "cv::optflow::RLOFOpticalFlowParameter::setUseMEstimator": [{"name": "cv.optflow_RLOFOpticalFlowParameter.setUseMEstimator", "arg": "val", "ret": "None"}], "cv::optflow::SparseRLOFOpticalFlow::create": [{"name": "cv.optflow.SparseRLOFOpticalFlow_create", "arg": "[, rlofParam[, forwardBackwardThreshold]]", "ret": "retval"}], "cv::optflow::SparseRLOFOpticalFlow::getForwardBackward": [{"name": "cv.optflow_SparseRLOFOpticalFlow.getForwardBackward", "arg": "", "ret": "retval"}], "cv::optflow::SparseRLOFOpticalFlow::getRLOFOpticalFlowParameter": [{"name": "cv.optflow_SparseRLOFOpticalFlow.getRLOFOpticalFlowParameter", "arg": "", "ret": "retval"}], "cv::optflow::SparseRLOFOpticalFlow::setForwardBackward": [{"name": "cv.optflow_SparseRLOFOpticalFlow.setForwardBackward", "arg": "val", "ret": "None"}], "cv::optflow::SparseRLOFOpticalFlow::setRLOFOpticalFlowParameter": [{"name": "cv.optflow_SparseRLOFOpticalFlow.setRLOFOpticalFlowParameter", "arg": "val", "ret": "None"}], "cv::phase_unwrapping::HistogramPhaseUnwrapping::create": [{"name": "cv.phase_unwrapping.HistogramPhaseUnwrapping_create", "arg": "[, parameters]", "ret": "retval"}], "cv::phase_unwrapping::HistogramPhaseUnwrapping::getInverseReliabilityMap": [{"name": "cv.phase_unwrapping_HistogramPhaseUnwrapping.getInverseReliabilityMap", "arg": "[, reliabilityMap]", "ret": "reliabilityMap"}], "cv::phase_unwrapping::HistogramPhaseUnwrapping::Params::Params": [{"name": "cv.phase_unwrapping_HistogramPhaseUnwrapping_Params", "arg": "", "ret": "<phase_unwrapping_HistogramPhaseUnwrapping_Params object>"}], "cv::phase_unwrapping::PhaseUnwrapping::unwrapPhaseMap": [{"name": "cv.phase_unwrapping_PhaseUnwrapping.unwrapPhaseMap", "arg": "wrappedPhaseMap[, unwrappedPhaseMap[, shadowMask]]", "ret": "unwrappedPhaseMap"}], "cv::plot::Plot2d::create": [{"name": "cv.plot.Plot2d_create", "arg": "data", "ret": "retval"}, {"name": "cv.plot.Plot2d_create", "arg": "dataX, dataY", "ret": "retval"}], "cv::plot::Plot2d::render": [{"name": "cv.plot_Plot2d.render", "arg": "[, _plotResult]", "ret": "_plotResult"}], "cv::plot::Plot2d::setGridLinesNumber": [{"name": "cv.plot_Plot2d.setGridLinesNumber", "arg": "gridLinesNumber", "ret": "None"}], "cv::plot::Plot2d::setInvertOrientation": [{"name": "cv.plot_Plot2d.setInvertOrientation", "arg": "_invertOrientation", "ret": "None"}], "cv::plot::Plot2d::setMaxX": [{"name": "cv.plot_Plot2d.setMaxX", "arg": "_plotMaxX", "ret": "None"}], "cv::plot::Plot2d::setMaxY": [{"name": "cv.plot_Plot2d.setMaxY", "arg": "_plotMaxY", "ret": "None"}], "cv::plot::Plot2d::setMinX": [{"name": "cv.plot_Plot2d.setMinX", "arg": "_plotMinX", "ret": "None"}], "cv::plot::Plot2d::setMinY": [{"name": "cv.plot_Plot2d.setMinY", "arg": "_plotMinY", "ret": "None"}], "cv::plot::Plot2d::setNeedPlotLine": [{"name": "cv.plot_Plot2d.setNeedPlotLine", "arg": "_needPlotLine", "ret": "None"}], "cv::plot::Plot2d::setPlotAxisColor": [{"name": "cv.plot_Plot2d.setPlotAxisColor", "arg": "_plotAxisColor", "ret": "None"}], "cv::plot::Plot2d::setPlotBackgroundColor": [{"name": "cv.plot_Plot2d.setPlotBackgroundColor", "arg": "_plotBackgroundColor", "ret": "None"}], "cv::plot::Plot2d::setPlotGridColor": [{"name": "cv.plot_Plot2d.setPlotGridColor", "arg": "_plotGridColor", "ret": "None"}], "cv::plot::Plot2d::setPlotLineColor": [{"name": "cv.plot_Plot2d.setPlotLineColor", "arg": "_plotLineColor", "ret": "None"}], "cv::plot::Plot2d::setPlotLineWidth": [{"name": "cv.plot_Plot2d.setPlotLineWidth", "arg": "_plotLineWidth", "ret": "None"}], "cv::plot::Plot2d::setPlotSize": [{"name": "cv.plot_Plot2d.setPlotSize", "arg": "_plotSizeWidth, _plotSizeHeight", "ret": "None"}], "cv::plot::Plot2d::setPlotTextColor": [{"name": "cv.plot_Plot2d.setPlotTextColor", "arg": "_plotTextColor", "ret": "None"}], "cv::plot::Plot2d::setPointIdxToPrint": [{"name": "cv.plot_Plot2d.setPointIdxToPrint", "arg": "pointIdx", "ret": "None"}], "cv::plot::Plot2d::setShowGrid": [{"name": "cv.plot_Plot2d.setShowGrid", "arg": "needShowGrid", "ret": "None"}], "cv::plot::Plot2d::setShowText": [{"name": "cv.plot_Plot2d.setShowText", "arg": "needShowText", "ret": "None"}], "cv::ppf_match_3d::ICP::ICP": [{"name": "cv.ppf_match_3d_ICP", "arg": "", "ret": "<ppf_match_3d_ICP object>"}, {"name": "cv.ppf_match_3d_ICP", "arg": "iterations[, tolerence[, rejectionScale[, numLevels[, sampleType[, numMaxCorr]]]]]", "ret": "<ppf_match_3d_ICP object>"}], "cv::ppf_match_3d::ICP::registerModelToScene": [{"name": "cv.ppf_match_3d_ICP.registerModelToScene", "arg": "srcPC, dstPC", "ret": "retval, residual, pose"}, {"name": "cv.ppf_match_3d_ICP.registerModelToScene", "arg": "srcPC, dstPC, poses", "ret": "retval, poses"}], "cv::ppf_match_3d::PPF3DDetector::PPF3DDetector": [{"name": "cv.ppf_match_3d_PPF3DDetector", "arg": "", "ret": "<ppf_match_3d_PPF3DDetector object>"}, {"name": "cv.ppf_match_3d_PPF3DDetector", "arg": "relativeSamplingStep[, relativeDistanceStep[, numAngles]]", "ret": "<ppf_match_3d_PPF3DDetector object>"}], "cv::ppf_match_3d::PPF3DDetector::match": [{"name": "cv.ppf_match_3d_PPF3DDetector.match", "arg": "scene[, relativeSceneSampleStep[, relativeSceneDistance]]", "ret": "results"}], "cv::ppf_match_3d::PPF3DDetector::trainModel": [{"name": "cv.ppf_match_3d_PPF3DDetector.trainModel", "arg": "Model", "ret": "None"}], "cv::ppf_match_3d::Pose3D::Pose3D": [{"name": "cv.ppf_match_3d_Pose3D", "arg": "", "ret": "<ppf_match_3d_Pose3D object>"}, {"name": "cv.ppf_match_3d_Pose3D", "arg": "Alpha[, ModelIndex[, NumVotes]]", "ret": "<ppf_match_3d_Pose3D object>"}], "cv::ppf_match_3d::Pose3D::appendPose": [{"name": "cv.ppf_match_3d_Pose3D.appendPose", "arg": "IncrementalPose", "ret": "None"}], "cv::ppf_match_3d::Pose3D::printPose": [{"name": "cv.ppf_match_3d_Pose3D.printPose", "arg": "", "ret": "None"}], "cv::ppf_match_3d::Pose3D::updatePose": [{"name": "cv.ppf_match_3d_Pose3D.updatePose", "arg": "NewPose", "ret": "None"}, {"name": "cv.ppf_match_3d_Pose3D.updatePose", "arg": "NewR, NewT", "ret": "None"}], "cv::ppf_match_3d::Pose3D::updatePoseQuat": [{"name": "cv.ppf_match_3d_Pose3D.updatePoseQuat", "arg": "Q, NewT", "ret": "None"}], "cv::quality::QualityBRISQUE::compute": [{"name": "cv.quality_QualityBRISQUE.compute", "arg": "img", "ret": "retval"}, {"name": "cv.quality_QualityBRISQUE.compute", "arg": "img, model_file_path, range_file_path", "ret": "retval"}, {"name": "cv.quality.QualityBRISQUE_compute", "arg": "img, model_file_path, range_file_path", "ret": "retval"}], "cv::quality::QualityBRISQUE::computeFeatures": [{"name": "cv.quality.QualityBRISQUE_computeFeatures", "arg": "img[, features]", "ret": "features"}], "cv::quality::QualityBRISQUE::create": [{"name": "cv.quality.QualityBRISQUE_create", "arg": "model_file_path, range_file_path", "ret": "retval"}, {"name": "cv.quality.QualityBRISQUE_create", "arg": "model, range", "ret": "retval"}], "cv::quality::QualityBase::clear": [{"name": "cv.quality_QualityBase.clear", "arg": "", "ret": "None"}], "cv::quality::QualityBase::compute": [{"name": "cv.quality_QualityBase.compute", "arg": "img", "ret": "retval"}], "cv::quality::QualityBase::empty": [{"name": "cv.quality_QualityBase.empty", "arg": "", "ret": "retval"}], "cv::quality::QualityBase::getQualityMap": [{"name": "cv.quality_QualityBase.getQualityMap", "arg": "[, dst]", "ret": "dst"}], "cv::quality::QualityGMSD::clear": [{"name": "cv.quality_QualityGMSD.clear", "arg": "", "ret": "None"}], "cv::quality::QualityGMSD::compute": [{"name": "cv.quality_QualityGMSD.compute", "arg": "cmp", "ret": "retval"}, {"name": "cv.quality_QualityGMSD.compute", "arg": "ref, cmp[, qualityMap]", "ret": "retval, qualityMap"}, {"name": "cv.quality.QualityGMSD_compute", "arg": "ref, cmp[, qualityMap]", "ret": "retval, qualityMap"}], "cv::quality::QualityGMSD::create": [{"name": "cv.quality.QualityGMSD_create", "arg": "ref", "ret": "retval"}], "cv::quality::QualityGMSD::empty": [{"name": "cv.quality_QualityGMSD.empty", "arg": "", "ret": "retval"}], "cv::quality::QualityMSE::clear": [{"name": "cv.quality_QualityMSE.clear", "arg": "", "ret": "None"}], "cv::quality::QualityMSE::compute": [{"name": "cv.quality_QualityMSE.compute", "arg": "cmpImgs", "ret": "retval"}, {"name": "cv.quality_QualityMSE.compute", "arg": "ref, cmp[, qualityMap]", "ret": "retval, qualityMap"}, {"name": "cv.quality.QualityMSE_compute", "arg": "ref, cmp[, qualityMap]", "ret": "retval, qualityMap"}], "cv::quality::QualityMSE::create": [{"name": "cv.quality.QualityMSE_create", "arg": "ref", "ret": "retval"}], "cv::quality::QualityMSE::empty": [{"name": "cv.quality_QualityMSE.empty", "arg": "", "ret": "retval"}], "cv::quality::QualityPSNR::clear": [{"name": "cv.quality_QualityPSNR.clear", "arg": "", "ret": "None"}], "cv::quality::QualityPSNR::compute": [{"name": "cv.quality_QualityPSNR.compute", "arg": "cmp", "ret": "retval"}, {"name": "cv.quality_QualityPSNR.compute", "arg": "ref, cmp[, qualityMap[, maxPixelValue]]", "ret": "retval, qualityMap"}, {"name": "cv.quality.QualityPSNR_compute", "arg": "ref, cmp[, qualityMap[, maxPixelValue]]", "ret": "retval, qualityMap"}], "cv::quality::QualityPSNR::create": [{"name": "cv.quality.QualityPSNR_create", "arg": "ref[, maxPixelValue]", "ret": "retval"}], "cv::quality::QualityPSNR::empty": [{"name": "cv.quality_QualityPSNR.empty", "arg": "", "ret": "retval"}], "cv::quality::QualityPSNR::getMaxPixelValue": [{"name": "cv.quality_QualityPSNR.getMaxPixelValue", "arg": "", "ret": "retval"}], "cv::quality::QualityPSNR::setMaxPixelValue": [{"name": "cv.quality_QualityPSNR.setMaxPixelValue", "arg": "val", "ret": "None"}], "cv::quality::QualitySSIM::clear": [{"name": "cv.quality_QualitySSIM.clear", "arg": "", "ret": "None"}], "cv::quality::QualitySSIM::compute": [{"name": "cv.quality_QualitySSIM.compute", "arg": "cmp", "ret": "retval"}, {"name": "cv.quality_QualitySSIM.compute", "arg": "ref, cmp[, qualityMap]", "ret": "retval, qualityMap"}, {"name": "cv.quality.QualitySSIM_compute", "arg": "ref, cmp[, qualityMap]", "ret": "retval, qualityMap"}], "cv::quality::QualitySSIM::create": [{"name": "cv.quality.QualitySSIM_create", "arg": "ref", "ret": "retval"}], "cv::quality::QualitySSIM::empty": [{"name": "cv.quality_QualitySSIM.empty", "arg": "", "ret": "retval"}], "cv::rapid::OLSTracker::create": [{"name": "cv.rapid.OLSTracker_create", "arg": "pts3d, tris[, histBins[, sobelThesh]]", "ret": "retval"}], "cv::rapid::Rapid::create": [{"name": "cv.rapid.Rapid_create", "arg": "pts3d, tris", "ret": "retval"}], "cv::rapid::Tracker::clearState": [{"name": "cv.rapid_Tracker.clearState", "arg": "", "ret": "None"}], "cv::rapid::Tracker::compute": [{"name": "cv.rapid_Tracker.compute", "arg": "img, num, len, K, rvec, tvec[, termcrit]", "ret": "retval, rvec, tvec"}], "cv::reg::Map::compose": [{"name": "cv.reg_Map.compose", "arg": "map", "ret": "None"}], "cv::reg::Map::inverseMap": [{"name": "cv.reg_Map.inverseMap", "arg": "", "ret": "retval"}], "cv::reg::Map::inverseWarp": [{"name": "cv.reg_Map.inverseWarp", "arg": "img1[, img2]", "ret": "img2"}], "cv::reg::Map::scale": [{"name": "cv.reg_Map.scale", "arg": "factor", "ret": "None"}], "cv::reg::Map::warp": [{"name": "cv.reg_Map.warp", "arg": "img1[, img2]", "ret": "img2"}], "cv::reg::MapAffine::MapAffine": [{"name": "cv.reg_MapAffine", "arg": "", "ret": "<reg_MapAffine object>"}, {"name": "cv.reg_MapAffine", "arg": "linTr, shift", "ret": "<reg_MapAffine object>"}], "cv::reg::MapAffine::compose": [{"name": "cv.reg_MapAffine.compose", "arg": "map", "ret": "None"}], "cv::reg::MapAffine::getLinTr": [{"name": "cv.reg_MapAffine.getLinTr", "arg": "[, linTr]", "ret": "linTr"}], "cv::reg::MapAffine::getShift": [{"name": "cv.reg_MapAffine.getShift", "arg": "[, shift]", "ret": "shift"}], "cv::reg::MapAffine::inverseMap": [{"name": "cv.reg_MapAffine.inverseMap", "arg": "", "ret": "retval"}], "cv::reg::MapAffine::inverseWarp": [{"name": "cv.reg_MapAffine.inverseWarp", "arg": "img1[, img2]", "ret": "img2"}], "cv::reg::MapAffine::scale": [{"name": "cv.reg_MapAffine.scale", "arg": "factor", "ret": "None"}], "cv::reg::MapProjec::MapProjec": [{"name": "cv.reg_MapProjec", "arg": "", "ret": "<reg_MapProjec object>"}, {"name": "cv.reg_MapProjec", "arg": "projTr", "ret": "<reg_MapProjec object>"}], "cv::reg::MapProjec::compose": [{"name": "cv.reg_MapProjec.compose", "arg": "map", "ret": "None"}], "cv::reg::MapProjec::getProjTr": [{"name": "cv.reg_MapProjec.getProjTr", "arg": "[, projTr]", "ret": "projTr"}], "cv::reg::MapProjec::inverseMap": [{"name": "cv.reg_MapProjec.inverseMap", "arg": "", "ret": "retval"}], "cv::reg::MapProjec::inverseWarp": [{"name": "cv.reg_MapProjec.inverseWarp", "arg": "img1[, img2]", "ret": "img2"}], "cv::reg::MapProjec::normalize": [{"name": "cv.reg_MapProjec.normalize", "arg": "", "ret": "None"}], "cv::reg::MapProjec::scale": [{"name": "cv.reg_MapProjec.scale", "arg": "factor", "ret": "None"}], "cv::reg::MapShift::MapShift": [{"name": "cv.reg_MapShift", "arg": "", "ret": "<reg_MapShift object>"}, {"name": "cv.reg_MapShift", "arg": "shift", "ret": "<reg_MapShift object>"}], "cv::reg::MapShift::compose": [{"name": "cv.reg_MapShift.compose", "arg": "map", "ret": "None"}], "cv::reg::MapShift::getShift": [{"name": "cv.reg_MapShift.getShift", "arg": "[, shift]", "ret": "shift"}], "cv::reg::MapShift::inverseMap": [{"name": "cv.reg_MapShift.inverseMap", "arg": "", "ret": "retval"}], "cv::reg::MapShift::inverseWarp": [{"name": "cv.reg_MapShift.inverseWarp", "arg": "img1[, img2]", "ret": "img2"}], "cv::reg::MapShift::scale": [{"name": "cv.reg_MapShift.scale", "arg": "factor", "ret": "None"}], "cv::reg::MapTypeCaster::toAffine": [{"name": "cv.reg.MapTypeCaster_toAffine", "arg": "sourceMap", "ret": "retval"}], "cv::reg::MapTypeCaster::toProjec": [{"name": "cv.reg.MapTypeCaster_toProjec", "arg": "sourceMap", "ret": "retval"}], "cv::reg::MapTypeCaster::toShift": [{"name": "cv.reg.MapTypeCaster_toShift", "arg": "sourceMap", "ret": "retval"}], "cv::reg::Mapper::calculate": [{"name": "cv.reg_Mapper.calculate", "arg": "img1, img2[, init]", "ret": "retval"}], "cv::reg::Mapper::getMap": [{"name": "cv.reg_Mapper.getMap", "arg": "", "ret": "retval"}], "cv::reg::MapperGradAffine::MapperGradAffine": [{"name": "cv.reg_MapperGradAffine", "arg": "", "ret": "<reg_MapperGradAffine object>"}], "cv::reg::MapperGradAffine::calculate": [{"name": "cv.reg_MapperGradAffine.calculate", "arg": "img1, img2[, init]", "ret": "retval"}], "cv::reg::MapperGradAffine::getMap": [{"name": "cv.reg_MapperGradAffine.getMap", "arg": "", "ret": "retval"}], "cv::reg::MapperGradEuclid::MapperGradEuclid": [{"name": "cv.reg_MapperGradEuclid", "arg": "", "ret": "<reg_MapperGradEuclid object>"}], "cv::reg::MapperGradEuclid::calculate": [{"name": "cv.reg_MapperGradEuclid.calculate", "arg": "img1, img2[, init]", "ret": "retval"}], "cv::reg::MapperGradEuclid::getMap": [{"name": "cv.reg_MapperGradEuclid.getMap", "arg": "", "ret": "retval"}], "cv::reg::MapperGradProj::MapperGradProj": [{"name": "cv.reg_MapperGradProj", "arg": "", "ret": "<reg_MapperGradProj object>"}], "cv::reg::MapperGradProj::calculate": [{"name": "cv.reg_MapperGradProj.calculate", "arg": "img1, img2[, init]", "ret": "retval"}], "cv::reg::MapperGradProj::getMap": [{"name": "cv.reg_MapperGradProj.getMap", "arg": "", "ret": "retval"}], "cv::reg::MapperGradShift::MapperGradShift": [{"name": "cv.reg_MapperGradShift", "arg": "", "ret": "<reg_MapperGradShift object>"}], "cv::reg::MapperGradShift::calculate": [{"name": "cv.reg_MapperGradShift.calculate", "arg": "img1, img2[, init]", "ret": "retval"}], "cv::reg::MapperGradShift::getMap": [{"name": "cv.reg_MapperGradShift.getMap", "arg": "", "ret": "retval"}], "cv::reg::MapperGradSimilar::MapperGradSimilar": [{"name": "cv.reg_MapperGradSimilar", "arg": "", "ret": "<reg_MapperGradSimilar object>"}], "cv::reg::MapperGradSimilar::calculate": [{"name": "cv.reg_MapperGradSimilar.calculate", "arg": "img1, img2[, init]", "ret": "retval"}], "cv::reg::MapperGradSimilar::getMap": [{"name": "cv.reg_MapperGradSimilar.getMap", "arg": "", "ret": "retval"}], "cv::reg::MapperPyramid::MapperPyramid": [{"name": "cv.reg_MapperPyramid", "arg": "baseMapper", "ret": "<reg_MapperPyramid object>"}], "cv::reg::MapperPyramid::calculate": [{"name": "cv.reg_MapperPyramid.calculate", "arg": "img1, img2[, init]", "ret": "retval"}], "cv::reg::MapperPyramid::getMap": [{"name": "cv.reg_MapperPyramid.getMap", "arg": "", "ret": "retval"}], "cv::rgbd::DepthCleaner::operator ()": [{"name": "cv.rgbd_DepthCleaner.apply", "arg": "points[, depth]", "ret": "depth"}], "cv::rgbd::DepthCleaner::create": [{"name": "cv.rgbd.DepthCleaner_create", "arg": "depth[, window_size[, method]]", "ret": "retval"}], "cv::rgbd::DepthCleaner::getDepth": [{"name": "cv.rgbd_DepthCleaner.getDepth", "arg": "", "ret": "retval"}], "cv::rgbd::DepthCleaner::getMethod": [{"name": "cv.rgbd_DepthCleaner.getMethod", "arg": "", "ret": "retval"}], "cv::rgbd::DepthCleaner::getWindowSize": [{"name": "cv.rgbd_DepthCleaner.getWindowSize", "arg": "", "ret": "retval"}], "cv::rgbd::DepthCleaner::initialize": [{"name": "cv.rgbd_DepthCleaner.initialize", "arg": "", "ret": "None"}], "cv::rgbd::DepthCleaner::setDepth": [{"name": "cv.rgbd_DepthCleaner.setDepth", "arg": "val", "ret": "None"}], "cv::rgbd::DepthCleaner::setMethod": [{"name": "cv.rgbd_DepthCleaner.setMethod", "arg": "val", "ret": "None"}], "cv::rgbd::DepthCleaner::setWindowSize": [{"name": "cv.rgbd_DepthCleaner.setWindowSize", "arg": "val", "ret": "None"}], "cv::rgbd::FastICPOdometry::create": [{"name": "cv.rgbd.FastICPOdometry_create", "arg": "cameraMatrix[, maxDistDiff[, angleThreshold[, sigmaDepth[, sigmaSpatial[, kernelSize[, iterCounts]]]]]]", "ret": "retval"}], "cv::rgbd::FastICPOdometry::getAngleThreshold": [{"name": "cv.rgbd_FastICPOdometry.getAngleThreshold", "arg": "", "ret": "retval"}], "cv::rgbd::FastICPOdometry::getCameraMatrix": [{"name": "cv.rgbd_FastICPOdometry.getCameraMatrix", "arg": "", "ret": "retval"}], "cv::rgbd::FastICPOdometry::getIterationCounts": [{"name": "cv.rgbd_FastICPOdometry.getIterationCounts", "arg": "", "ret": "retval"}], "cv::rgbd::FastICPOdometry::getKernelSize": [{"name": "cv.rgbd_FastICPOdometry.getKernelSize", "arg": "", "ret": "retval"}], "cv::rgbd::FastICPOdometry::getMaxDistDiff": [{"name": "cv.rgbd_FastICPOdometry.getMaxDistDiff", "arg": "", "ret": "retval"}], "cv::rgbd::FastICPOdometry::getSigmaDepth": [{"name": "cv.rgbd_FastICPOdometry.getSigmaDepth", "arg": "", "ret": "retval"}], "cv::rgbd::FastICPOdometry::getSigmaSpatial": [{"name": "cv.rgbd_FastICPOdometry.getSigmaSpatial", "arg": "", "ret": "retval"}], "cv::rgbd::FastICPOdometry::getTransformType": [{"name": "cv.rgbd_FastICPOdometry.getTransformType", "arg": "", "ret": "retval"}], "cv::rgbd::FastICPOdometry::prepareFrameCache": [{"name": "cv.rgbd_FastICPOdometry.prepareFrameCache", "arg": "frame, cacheType", "ret": "retval"}], "cv::rgbd::FastICPOdometry::setAngleThreshold": [{"name": "cv.rgbd_FastICPOdometry.setAngleThreshold", "arg": "f", "ret": "None"}], "cv::rgbd::FastICPOdometry::setCameraMatrix": [{"name": "cv.rgbd_FastICPOdometry.setCameraMatrix", "arg": "val", "ret": "None"}], "cv::rgbd::FastICPOdometry::setIterationCounts": [{"name": "cv.rgbd_FastICPOdometry.setIterationCounts", "arg": "val", "ret": "None"}], "cv::rgbd::FastICPOdometry::setKernelSize": [{"name": "cv.rgbd_FastICPOdometry.setKernelSize", "arg": "f", "ret": "None"}], "cv::rgbd::FastICPOdometry::setMaxDistDiff": [{"name": "cv.rgbd_FastICPOdometry.setMaxDistDiff", "arg": "val", "ret": "None"}], "cv::rgbd::FastICPOdometry::setSigmaDepth": [{"name": "cv.rgbd_FastICPOdometry.setSigmaDepth", "arg": "f", "ret": "None"}], "cv::rgbd::FastICPOdometry::setSigmaSpatial": [{"name": "cv.rgbd_FastICPOdometry.setSigmaSpatial", "arg": "f", "ret": "None"}], "cv::rgbd::FastICPOdometry::setTransformType": [{"name": "cv.rgbd_FastICPOdometry.setTransformType", "arg": "val", "ret": "None"}], "cv::rgbd::ICPOdometry::create": [{"name": "cv.rgbd.ICPOdometry_create", "arg": "[, cameraMatrix[, minDepth[, maxDepth[, maxDepthDiff[, maxPointsPart[, iterCounts[, transformType]]]]]]]", "ret": "retval"}], "cv::rgbd::ICPOdometry::getCameraMatrix": [{"name": "cv.rgbd_ICPOdometry.getCameraMatrix", "arg": "", "ret": "retval"}], "cv::rgbd::ICPOdometry::getIterationCounts": [{"name": "cv.rgbd_ICPOdometry.getIterationCounts", "arg": "", "ret": "retval"}], "cv::rgbd::ICPOdometry::getMaxDepth": [{"name": "cv.rgbd_ICPOdometry.getMaxDepth", "arg": "", "ret": "retval"}], "cv::rgbd::ICPOdometry::getMaxDepthDiff": [{"name": "cv.rgbd_ICPOdometry.getMaxDepthDiff", "arg": "", "ret": "retval"}], "cv::rgbd::ICPOdometry::getMaxPointsPart": [{"name": "cv.rgbd_ICPOdometry.getMaxPointsPart", "arg": "", "ret": "retval"}], "cv::rgbd::ICPOdometry::getMaxRotation": [{"name": "cv.rgbd_ICPOdometry.getMaxRotation", "arg": "", "ret": "retval"}], "cv::rgbd::ICPOdometry::getMaxTranslation": [{"name": "cv.rgbd_ICPOdometry.getMaxTranslation", "arg": "", "ret": "retval"}], "cv::rgbd::ICPOdometry::getMinDepth": [{"name": "cv.rgbd_ICPOdometry.getMinDepth", "arg": "", "ret": "retval"}], "cv::rgbd::ICPOdometry::getNormalsComputer": [{"name": "cv.rgbd_ICPOdometry.getNormalsComputer", "arg": "", "ret": "retval"}], "cv::rgbd::ICPOdometry::getTransformType": [{"name": "cv.rgbd_ICPOdometry.getTransformType", "arg": "", "ret": "retval"}], "cv::rgbd::ICPOdometry::prepareFrameCache": [{"name": "cv.rgbd_ICPOdometry.prepareFrameCache", "arg": "frame, cacheType", "ret": "retval"}], "cv::rgbd::ICPOdometry::setCameraMatrix": [{"name": "cv.rgbd_ICPOdometry.setCameraMatrix", "arg": "val", "ret": "None"}], "cv::rgbd::ICPOdometry::setIterationCounts": [{"name": "cv.rgbd_ICPOdometry.setIterationCounts", "arg": "val", "ret": "None"}], "cv::rgbd::ICPOdometry::setMaxDepth": [{"name": "cv.rgbd_ICPOdometry.setMaxDepth", "arg": "val", "ret": "None"}], "cv::rgbd::ICPOdometry::setMaxDepthDiff": [{"name": "cv.rgbd_ICPOdometry.setMaxDepthDiff", "arg": "val", "ret": "None"}], "cv::rgbd::ICPOdometry::setMaxPointsPart": [{"name": "cv.rgbd_ICPOdometry.setMaxPointsPart", "arg": "val", "ret": "None"}], "cv::rgbd::ICPOdometry::setMaxRotation": [{"name": "cv.rgbd_ICPOdometry.setMaxRotation", "arg": "val", "ret": "None"}], "cv::rgbd::ICPOdometry::setMaxTranslation": [{"name": "cv.rgbd_ICPOdometry.setMaxTranslation", "arg": "val", "ret": "None"}], "cv::rgbd::ICPOdometry::setMinDepth": [{"name": "cv.rgbd_ICPOdometry.setMinDepth", "arg": "val", "ret": "None"}], "cv::rgbd::ICPOdometry::setTransformType": [{"name": "cv.rgbd_ICPOdometry.setTransformType", "arg": "val", "ret": "None"}], "cv::rgbd::Odometry::DEFAULT_MAX_DEPTH": [{"name": "cv.rgbd_Odometry.DEFAULT_MAX_DEPTH", "arg": "", "ret": "retval"}], "cv::rgbd::Odometry::DEFAULT_MAX_DEPTH_DIFF": [{"name": "cv.rgbd_Odometry.DEFAULT_MAX_DEPTH_DIFF", "arg": "", "ret": "retval"}], "cv::rgbd::Odometry::DEFAULT_MAX_POINTS_PART": [{"name": "cv.rgbd_Odometry.DEFAULT_MAX_POINTS_PART", "arg": "", "ret": "retval"}], "cv::rgbd::Odometry::DEFAULT_MAX_ROTATION": [{"name": "cv.rgbd_Odometry.DEFAULT_MAX_ROTATION", "arg": "", "ret": "retval"}], "cv::rgbd::Odometry::DEFAULT_MAX_TRANSLATION": [{"name": "cv.rgbd_Odometry.DEFAULT_MAX_TRANSLATION", "arg": "", "ret": "retval"}], "cv::rgbd::Odometry::DEFAULT_MIN_DEPTH": [{"name": "cv.rgbd_Odometry.DEFAULT_MIN_DEPTH", "arg": "", "ret": "retval"}], "cv::rgbd::Odometry::compute": [{"name": "cv.rgbd_Odometry.compute", "arg": "srcImage, srcDepth, srcMask, dstImage, dstDepth, dstMask[, Rt[, initRt]]", "ret": "retval, Rt"}, {"name": "cv.rgbd_Odometry.compute2", "arg": "srcFrame, dstFrame[, Rt[, initRt]]", "ret": "retval, Rt"}], "cv::rgbd::Odometry::create": [{"name": "cv.rgbd.Odometry_create", "arg": "odometryType", "ret": "retval"}], "cv::rgbd::Odometry::getCameraMatrix": [{"name": "cv.rgbd_Odometry.getCameraMatrix", "arg": "", "ret": "retval"}], "cv::rgbd::Odometry::getTransformType": [{"name": "cv.rgbd_Odometry.getTransformType", "arg": "", "ret": "retval"}], "cv::rgbd::Odometry::prepareFrameCache": [{"name": "cv.rgbd_Odometry.prepareFrameCache", "arg": "frame, cacheType", "ret": "retval"}], "cv::rgbd::Odometry::setCameraMatrix": [{"name": "cv.rgbd_Odometry.setCameraMatrix", "arg": "val", "ret": "None"}], "cv::rgbd::Odometry::setTransformType": [{"name": "cv.rgbd_Odometry.setTransformType", "arg": "val", "ret": "None"}], "cv::rgbd::OdometryFrame::create": [{"name": "cv.rgbd.OdometryFrame_create", "arg": "[, image[, depth[, mask[, normals[, ID]]]]]", "ret": "retval"}], "cv::rgbd::OdometryFrame::release": [{"name": "cv.rgbd_OdometryFrame.release", "arg": "", "ret": "None"}], "cv::rgbd::OdometryFrame::releasePyramids": [{"name": "cv.rgbd_OdometryFrame.releasePyramids", "arg": "", "ret": "None"}], "cv::rgbd::RgbdFrame::create": [{"name": "cv.rgbd.RgbdFrame_create", "arg": "[, image[, depth[, mask[, normals[, ID]]]]]", "ret": "retval"}], "cv::rgbd::RgbdFrame::release": [{"name": "cv.rgbd_RgbdFrame.release", "arg": "", "ret": "None"}], "cv::rgbd::RgbdICPOdometry::create": [{"name": "cv.rgbd.RgbdICPOdometry_create", "arg": "[, cameraMatrix[, minDepth[, maxDepth[, maxDepthDiff[, maxPointsPart[, iterCounts[, minGradientMagnitudes[, transformType]]]]]]]]", "ret": "retval"}], "cv::rgbd::RgbdICPOdometry::getCameraMatrix": [{"name": "cv.rgbd_RgbdICPOdometry.getCameraMatrix", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdICPOdometry::getIterationCounts": [{"name": "cv.rgbd_RgbdICPOdometry.getIterationCounts", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdICPOdometry::getMaxDepth": [{"name": "cv.rgbd_RgbdICPOdometry.getMaxDepth", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdICPOdometry::getMaxDepthDiff": [{"name": "cv.rgbd_RgbdICPOdometry.getMaxDepthDiff", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdICPOdometry::getMaxPointsPart": [{"name": "cv.rgbd_RgbdICPOdometry.getMaxPointsPart", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdICPOdometry::getMaxRotation": [{"name": "cv.rgbd_RgbdICPOdometry.getMaxRotation", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdICPOdometry::getMaxTranslation": [{"name": "cv.rgbd_RgbdICPOdometry.getMaxTranslation", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdICPOdometry::getMinDepth": [{"name": "cv.rgbd_RgbdICPOdometry.getMinDepth", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdICPOdometry::getMinGradientMagnitudes": [{"name": "cv.rgbd_RgbdICPOdometry.getMinGradientMagnitudes", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdICPOdometry::getNormalsComputer": [{"name": "cv.rgbd_RgbdICPOdometry.getNormalsComputer", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdICPOdometry::getTransformType": [{"name": "cv.rgbd_RgbdICPOdometry.getTransformType", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdICPOdometry::prepareFrameCache": [{"name": "cv.rgbd_RgbdICPOdometry.prepareFrameCache", "arg": "frame, cacheType", "ret": "retval"}], "cv::rgbd::RgbdICPOdometry::setCameraMatrix": [{"name": "cv.rgbd_RgbdICPOdometry.setCameraMatrix", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdICPOdometry::setIterationCounts": [{"name": "cv.rgbd_RgbdICPOdometry.setIterationCounts", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdICPOdometry::setMaxDepth": [{"name": "cv.rgbd_RgbdICPOdometry.setMaxDepth", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdICPOdometry::setMaxDepthDiff": [{"name": "cv.rgbd_RgbdICPOdometry.setMaxDepthDiff", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdICPOdometry::setMaxPointsPart": [{"name": "cv.rgbd_RgbdICPOdometry.setMaxPointsPart", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdICPOdometry::setMaxRotation": [{"name": "cv.rgbd_RgbdICPOdometry.setMaxRotation", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdICPOdometry::setMaxTranslation": [{"name": "cv.rgbd_RgbdICPOdometry.setMaxTranslation", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdICPOdometry::setMinDepth": [{"name": "cv.rgbd_RgbdICPOdometry.setMinDepth", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdICPOdometry::setMinGradientMagnitudes": [{"name": "cv.rgbd_RgbdICPOdometry.setMinGradientMagnitudes", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdICPOdometry::setTransformType": [{"name": "cv.rgbd_RgbdICPOdometry.setTransformType", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdNormals::operator ()": [{"name": "cv.rgbd_RgbdNormals.apply", "arg": "points[, normals]", "ret": "normals"}], "cv::rgbd::RgbdNormals::create": [{"name": "cv.rgbd.RgbdNormals_create", "arg": "rows, cols, depth, K[, window_size[, method]]", "ret": "retval"}], "cv::rgbd::RgbdNormals::getCols": [{"name": "cv.rgbd_RgbdNormals.getCols", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdNormals::getDepth": [{"name": "cv.rgbd_RgbdNormals.getDepth", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdNormals::getK": [{"name": "cv.rgbd_RgbdNormals.getK", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdNormals::getMethod": [{"name": "cv.rgbd_RgbdNormals.getMethod", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdNormals::getRows": [{"name": "cv.rgbd_RgbdNormals.getRows", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdNormals::getWindowSize": [{"name": "cv.rgbd_RgbdNormals.getWindowSize", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdNormals::initialize": [{"name": "cv.rgbd_RgbdNormals.initialize", "arg": "", "ret": "None"}], "cv::rgbd::RgbdNormals::setCols": [{"name": "cv.rgbd_RgbdNormals.setCols", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdNormals::setDepth": [{"name": "cv.rgbd_RgbdNormals.setDepth", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdNormals::setK": [{"name": "cv.rgbd_RgbdNormals.setK", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdNormals::setMethod": [{"name": "cv.rgbd_RgbdNormals.setMethod", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdNormals::setRows": [{"name": "cv.rgbd_RgbdNormals.setRows", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdNormals::setWindowSize": [{"name": "cv.rgbd_RgbdNormals.setWindowSize", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdOdometry::create": [{"name": "cv.rgbd.RgbdOdometry_create", "arg": "[, cameraMatrix[, minDepth[, maxDepth[, maxDepthDiff[, iterCounts[, minGradientMagnitudes[, maxPointsPart[, transformType]]]]]]]]", "ret": "retval"}], "cv::rgbd::RgbdOdometry::getCameraMatrix": [{"name": "cv.rgbd_RgbdOdometry.getCameraMatrix", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdOdometry::getIterationCounts": [{"name": "cv.rgbd_RgbdOdometry.getIterationCounts", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdOdometry::getMaxDepth": [{"name": "cv.rgbd_RgbdOdometry.getMaxDepth", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdOdometry::getMaxDepthDiff": [{"name": "cv.rgbd_RgbdOdometry.getMaxDepthDiff", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdOdometry::getMaxPointsPart": [{"name": "cv.rgbd_RgbdOdometry.getMaxPointsPart", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdOdometry::getMaxRotation": [{"name": "cv.rgbd_RgbdOdometry.getMaxRotation", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdOdometry::getMaxTranslation": [{"name": "cv.rgbd_RgbdOdometry.getMaxTranslation", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdOdometry::getMinDepth": [{"name": "cv.rgbd_RgbdOdometry.getMinDepth", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdOdometry::getMinGradientMagnitudes": [{"name": "cv.rgbd_RgbdOdometry.getMinGradientMagnitudes", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdOdometry::getTransformType": [{"name": "cv.rgbd_RgbdOdometry.getTransformType", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdOdometry::prepareFrameCache": [{"name": "cv.rgbd_RgbdOdometry.prepareFrameCache", "arg": "frame, cacheType", "ret": "retval"}], "cv::rgbd::RgbdOdometry::setCameraMatrix": [{"name": "cv.rgbd_RgbdOdometry.setCameraMatrix", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdOdometry::setIterationCounts": [{"name": "cv.rgbd_RgbdOdometry.setIterationCounts", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdOdometry::setMaxDepth": [{"name": "cv.rgbd_RgbdOdometry.setMaxDepth", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdOdometry::setMaxDepthDiff": [{"name": "cv.rgbd_RgbdOdometry.setMaxDepthDiff", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdOdometry::setMaxPointsPart": [{"name": "cv.rgbd_RgbdOdometry.setMaxPointsPart", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdOdometry::setMaxRotation": [{"name": "cv.rgbd_RgbdOdometry.setMaxRotation", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdOdometry::setMaxTranslation": [{"name": "cv.rgbd_RgbdOdometry.setMaxTranslation", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdOdometry::setMinDepth": [{"name": "cv.rgbd_RgbdOdometry.setMinDepth", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdOdometry::setMinGradientMagnitudes": [{"name": "cv.rgbd_RgbdOdometry.setMinGradientMagnitudes", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdOdometry::setTransformType": [{"name": "cv.rgbd_RgbdOdometry.setTransformType", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdPlane::operator ()": [{"name": "cv.rgbd_RgbdPlane.apply", "arg": "points3d, normals[, mask[, plane_coefficients]]", "ret": "mask, plane_coefficients"}, {"name": "cv.rgbd_RgbdPlane.apply", "arg": "points3d[, mask[, plane_coefficients]]", "ret": "mask, plane_coefficients"}], "cv::rgbd::RgbdPlane::create": [{"name": "cv.rgbd.RgbdPlane_create", "arg": "method, block_size, min_size, threshold[, sensor_error_a[, sensor_error_b[, sensor_error_c]]]", "ret": "retval"}], "cv::rgbd::RgbdPlane::getBlockSize": [{"name": "cv.rgbd_RgbdPlane.getBlockSize", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdPlane::getMethod": [{"name": "cv.rgbd_RgbdPlane.getMethod", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdPlane::getMinSize": [{"name": "cv.rgbd_RgbdPlane.getMinSize", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdPlane::getSensorErrorA": [{"name": "cv.rgbd_RgbdPlane.getSensorErrorA", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdPlane::getSensorErrorB": [{"name": "cv.rgbd_RgbdPlane.getSensorErrorB", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdPlane::getSensorErrorC": [{"name": "cv.rgbd_RgbdPlane.getSensorErrorC", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdPlane::getThreshold": [{"name": "cv.rgbd_RgbdPlane.getThreshold", "arg": "", "ret": "retval"}], "cv::rgbd::RgbdPlane::setBlockSize": [{"name": "cv.rgbd_RgbdPlane.setBlockSize", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdPlane::setMethod": [{"name": "cv.rgbd_RgbdPlane.setMethod", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdPlane::setMinSize": [{"name": "cv.rgbd_RgbdPlane.setMinSize", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdPlane::setSensorErrorA": [{"name": "cv.rgbd_RgbdPlane.setSensorErrorA", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdPlane::setSensorErrorB": [{"name": "cv.rgbd_RgbdPlane.setSensorErrorB", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdPlane::setSensorErrorC": [{"name": "cv.rgbd_RgbdPlane.setSensorErrorC", "arg": "val", "ret": "None"}], "cv::rgbd::RgbdPlane::setThreshold": [{"name": "cv.rgbd_RgbdPlane.setThreshold", "arg": "val", "ret": "None"}], "cv::saliency::MotionSaliencyBinWangApr2014::computeSaliency": [{"name": "cv.saliency_MotionSaliencyBinWangApr2014.computeSaliency", "arg": "image[, saliencyMap]", "ret": "retval, saliencyMap"}], "cv::saliency::MotionSaliencyBinWangApr2014::create": [{"name": "cv.saliency.MotionSaliencyBinWangApr2014_create", "arg": "", "ret": "retval"}], "cv::saliency::MotionSaliencyBinWangApr2014::getImageHeight": [{"name": "cv.saliency_MotionSaliencyBinWangApr2014.getImageHeight", "arg": "", "ret": "retval"}], "cv::saliency::MotionSaliencyBinWangApr2014::getImageWidth": [{"name": "cv.saliency_MotionSaliencyBinWangApr2014.getImageWidth", "arg": "", "ret": "retval"}], "cv::saliency::MotionSaliencyBinWangApr2014::init": [{"name": "cv.saliency_MotionSaliencyBinWangApr2014.init", "arg": "", "ret": "retval"}], "cv::saliency::MotionSaliencyBinWangApr2014::setImageHeight": [{"name": "cv.saliency_MotionSaliencyBinWangApr2014.setImageHeight", "arg": "val", "ret": "None"}], "cv::saliency::MotionSaliencyBinWangApr2014::setImageWidth": [{"name": "cv.saliency_MotionSaliencyBinWangApr2014.setImageWidth", "arg": "val", "ret": "None"}], "cv::saliency::MotionSaliencyBinWangApr2014::setImagesize": [{"name": "cv.saliency_MotionSaliencyBinWangApr2014.setImagesize", "arg": "W, H", "ret": "None"}], "cv::saliency::ObjectnessBING::computeSaliency": [{"name": "cv.saliency_ObjectnessBING.computeSaliency", "arg": "image[, saliencyMap]", "ret": "retval, saliencyMap"}], "cv::saliency::ObjectnessBING::create": [{"name": "cv.saliency.ObjectnessBING_create", "arg": "", "ret": "retval"}], "cv::saliency::ObjectnessBING::getBase": [{"name": "cv.saliency_ObjectnessBING.getBase", "arg": "", "ret": "retval"}], "cv::saliency::ObjectnessBING::getNSS": [{"name": "cv.saliency_ObjectnessBING.getNSS", "arg": "", "ret": "retval"}], "cv::saliency::ObjectnessBING::getW": [{"name": "cv.saliency_ObjectnessBING.getW", "arg": "", "ret": "retval"}], "cv::saliency::ObjectnessBING::getobjectnessValues": [{"name": "cv.saliency_ObjectnessBING.getobjectnessValues", "arg": "", "ret": "retval"}], "cv::saliency::ObjectnessBING::read": [{"name": "cv.saliency_ObjectnessBING.read", "arg": "", "ret": "None"}], "cv::saliency::ObjectnessBING::setBBResDir": [{"name": "cv.saliency_ObjectnessBING.setBBResDir", "arg": "resultsDir", "ret": "None"}], "cv::saliency::ObjectnessBING::setBase": [{"name": "cv.saliency_ObjectnessBING.setBase", "arg": "val", "ret": "None"}], "cv::saliency::ObjectnessBING::setNSS": [{"name": "cv.saliency_ObjectnessBING.setNSS", "arg": "val", "ret": "None"}], "cv::saliency::ObjectnessBING::setTrainingPath": [{"name": "cv.saliency_ObjectnessBING.setTrainingPath", "arg": "trainingPath", "ret": "None"}], "cv::saliency::ObjectnessBING::setW": [{"name": "cv.saliency_ObjectnessBING.setW", "arg": "val", "ret": "None"}], "cv::saliency::ObjectnessBING::write": [{"name": "cv.saliency_ObjectnessBING.write", "arg": "", "ret": "None"}], "cv::saliency::Saliency::computeSaliency": [{"name": "cv.saliency_Saliency.computeSaliency", "arg": "image[, saliencyMap]", "ret": "retval, saliencyMap"}], "cv::saliency::StaticSaliency::computeBinaryMap": [{"name": "cv.saliency_StaticSaliency.computeBinaryMap", "arg": "_saliencyMap[, _binaryMap]", "ret": "retval, _binaryMap"}], "cv::saliency::StaticSaliencyFineGrained::computeSaliency": [{"name": "cv.saliency_StaticSaliencyFineGrained.computeSaliency", "arg": "image[, saliencyMap]", "ret": "retval, saliencyMap"}], "cv::saliency::StaticSaliencyFineGrained::create": [{"name": "cv.saliency.StaticSaliencyFineGrained_create", "arg": "", "ret": "retval"}], "cv::saliency::StaticSaliencySpectralResidual::computeSaliency": [{"name": "cv.saliency_StaticSaliencySpectralResidual.computeSaliency", "arg": "image[, saliencyMap]", "ret": "retval, saliencyMap"}], "cv::saliency::StaticSaliencySpectralResidual::create": [{"name": "cv.saliency.StaticSaliencySpectralResidual_create", "arg": "", "ret": "retval"}], "cv::saliency::StaticSaliencySpectralResidual::getImageHeight": [{"name": "cv.saliency_StaticSaliencySpectralResidual.getImageHeight", "arg": "", "ret": "retval"}], "cv::saliency::StaticSaliencySpectralResidual::getImageWidth": [{"name": "cv.saliency_StaticSaliencySpectralResidual.getImageWidth", "arg": "", "ret": "retval"}], "cv::saliency::StaticSaliencySpectralResidual::read": [{"name": "cv.saliency_StaticSaliencySpectralResidual.read", "arg": "fn", "ret": "None"}], "cv::saliency::StaticSaliencySpectralResidual::setImageHeight": [{"name": "cv.saliency_StaticSaliencySpectralResidual.setImageHeight", "arg": "val", "ret": "None"}], "cv::saliency::StaticSaliencySpectralResidual::setImageWidth": [{"name": "cv.saliency_StaticSaliencySpectralResidual.setImageWidth", "arg": "val", "ret": "None"}], "cv::structured_light::GrayCodePattern::create": [{"name": "cv.structured_light.GrayCodePattern_create", "arg": "width, height", "ret": "retval"}], "cv::structured_light::GrayCodePattern::getImagesForShadowMasks": [{"name": "cv.structured_light_GrayCodePattern.getImagesForShadowMasks", "arg": "blackImage, whiteImage", "ret": "blackImage, whiteImage"}], "cv::structured_light::GrayCodePattern::getNumberOfPatternImages": [{"name": "cv.structured_light_GrayCodePattern.getNumberOfPatternImages", "arg": "", "ret": "retval"}], "cv::structured_light::GrayCodePattern::getProjPixel": [{"name": "cv.structured_light_GrayCodePattern.getProjPixel", "arg": "patternImages, x, y", "ret": "retval, projPix"}], "cv::structured_light::GrayCodePattern::setBlackThreshold": [{"name": "cv.structured_light_GrayCodePattern.setBlackThreshold", "arg": "value", "ret": "None"}], "cv::structured_light::GrayCodePattern::setWhiteThreshold": [{"name": "cv.structured_light_GrayCodePattern.setWhiteThreshold", "arg": "value", "ret": "None"}], "cv::structured_light::SinusoidalPattern::computeDataModulationTerm": [{"name": "cv.structured_light_SinusoidalPattern.computeDataModulationTerm", "arg": "patternImages, shadowMask[, dataModulationTerm]", "ret": "dataModulationTerm"}], "cv::structured_light::SinusoidalPattern::computePhaseMap": [{"name": "cv.structured_light_SinusoidalPattern.computePhaseMap", "arg": "patternImages[, wrappedPhaseMap[, shadowMask[, fundamental]]]", "ret": "wrappedPhaseMap, shadowMask"}], "cv::structured_light::SinusoidalPattern::create": [{"name": "cv.structured_light.SinusoidalPattern_create", "arg": "[, parameters]", "ret": "retval"}], "cv::structured_light::SinusoidalPattern::findProCamMatches": [{"name": "cv.structured_light_SinusoidalPattern.findProCamMatches", "arg": "projUnwrappedPhaseMap, camUnwrappedPhaseMap[, matches]", "ret": "matches"}], "cv::structured_light::SinusoidalPattern::unwrapPhaseMap": [{"name": "cv.structured_light_SinusoidalPattern.unwrapPhaseMap", "arg": "wrappedPhaseMap, camSize[, unwrappedPhaseMap[, shadowMask]]", "ret": "unwrappedPhaseMap"}], "cv::structured_light::SinusoidalPattern::Params::Params": [{"name": "cv.structured_light_SinusoidalPattern_Params", "arg": "", "ret": "<structured_light_SinusoidalPattern_Params object>"}], "cv::structured_light::StructuredLightPattern::decode": [{"name": "cv.structured_light_StructuredLightPattern.decode", "arg": "patternImages[, disparityMap[, blackImages[, whiteImages[, flags]]]]", "ret": "retval, disparityMap"}], "cv::structured_light::StructuredLightPattern::generate": [{"name": "cv.structured_light_StructuredLightPattern.generate", "arg": "[, patternImages]", "ret": "retval, patternImages"}], "cv::text::OCRBeamSearchDecoder::create": [{"name": "cv.text.OCRBeamSearchDecoder_create", "arg": "classifier, vocabulary, transition_probabilities_table, emission_probabilities_table[, mode[, beam_size]]", "ret": "retval"}, {"name": "cv.text.OCRBeamSearchDecoder_create", "arg": "filename, vocabulary, transition_probabilities_table, emission_probabilities_table[, mode[, beam_size]]", "ret": "retval"}], "cv::text::OCRBeamSearchDecoder::run": [{"name": "cv.text_OCRBeamSearchDecoder.run", "arg": "image, min_confidence[, component_level]", "ret": "retval"}, {"name": "cv.text_OCRBeamSearchDecoder.run", "arg": "image, mask, min_confidence[, component_level]", "ret": "retval"}], "cv::text::OCRHMMDecoder::create": [{"name": "cv.text.OCRHMMDecoder_create", "arg": "classifier, vocabulary, transition_probabilities_table, emission_probabilities_table[, mode]", "ret": "retval"}, {"name": "cv.text.OCRHMMDecoder_create", "arg": "filename, vocabulary, transition_probabilities_table, emission_probabilities_table[, mode[, classifier]]", "ret": "retval"}], "cv::text::OCRHMMDecoder::run": [{"name": "cv.text_OCRHMMDecoder.run", "arg": "image, min_confidence[, component_level]", "ret": "retval"}, {"name": "cv.text_OCRHMMDecoder.run", "arg": "image, mask, min_confidence[, component_level]", "ret": "retval"}], "cv::text::OCRTesseract::create": [{"name": "cv.text.OCRTesseract_create", "arg": "[, datapath[, language[, char_whitelist[, oem[, psmode]]]]]", "ret": "retval"}], "cv::text::OCRTesseract::run": [{"name": "cv.text_OCRTesseract.run", "arg": "image, min_confidence[, component_level]", "ret": "retval"}, {"name": "cv.text_OCRTesseract.run", "arg": "image, mask, min_confidence[, component_level]", "ret": "retval"}], "cv::text::OCRTesseract::setWhiteList": [{"name": "cv.text_OCRTesseract.setWhiteList", "arg": "char_whitelist", "ret": "None"}], "cv::text::TextDetector::detect": [{"name": "cv.text_TextDetector.detect", "arg": "inputImage", "ret": "Bbox, confidence"}], "cv::text::TextDetectorCNN::create": [{"name": "cv.text.TextDetectorCNN_create", "arg": "modelArchFilename, modelWeightsFilename", "ret": "retval"}], "cv::text::TextDetectorCNN::detect": [{"name": "cv.text_TextDetectorCNN.detect", "arg": "inputImage", "ret": "Bbox, confidence"}], "cv::xfeatures2d::BoostDesc::create": [{"name": "cv.xfeatures2d.BoostDesc_create", "arg": "[, desc[, use_scale_orientation[, scale_factor]]]", "ret": "retval"}], "cv::xfeatures2d::BoostDesc::getScaleFactor": [{"name": "cv.xfeatures2d_BoostDesc.getScaleFactor", "arg": "", "ret": "retval"}], "cv::xfeatures2d::BoostDesc::getUseScaleOrientation": [{"name": "cv.xfeatures2d_BoostDesc.getUseScaleOrientation", "arg": "", "ret": "retval"}], "cv::xfeatures2d::BoostDesc::setScaleFactor": [{"name": "cv.xfeatures2d_BoostDesc.setScaleFactor", "arg": "scale_factor", "ret": "None"}], "cv::xfeatures2d::BoostDesc::setUseScaleOrientation": [{"name": "cv.xfeatures2d_BoostDesc.setUseScaleOrientation", "arg": "use_scale_orientation", "ret": "None"}], "cv::xfeatures2d::BriefDescriptorExtractor::create": [{"name": "cv.xfeatures2d.BriefDescriptorExtractor_create", "arg": "[, bytes[, use_orientation]]", "ret": "retval"}], "cv::xfeatures2d::DAISY::create": [{"name": "cv.xfeatures2d.DAISY_create", "arg": "[, radius[, q_radius[, q_theta[, q_hist[, norm[, H[, interpolation[, use_orientation]]]]]]]]", "ret": "retval"}], "cv::xfeatures2d::FREAK::create": [{"name": "cv.xfeatures2d.FREAK_create", "arg": "[, orientationNormalized[, scaleNormalized[, patternScale[, nOctaves[, selectedPairs]]]]]", "ret": "retval"}], "cv::xfeatures2d::HarrisLaplaceFeatureDetector::create": [{"name": "cv.xfeatures2d.HarrisLaplaceFeatureDetector_create", "arg": "[, numOctaves[, corn_thresh[, DOG_thresh[, maxCorners[, num_layers]]]]]", "ret": "retval"}], "cv::xfeatures2d::LATCH::create": [{"name": "cv.xfeatures2d.LATCH_create", "arg": "[, bytes[, rotationInvariance[, half_ssd_size[, sigma]]]]", "ret": "retval"}], "cv::xfeatures2d::LUCID::create": [{"name": "cv.xfeatures2d.LUCID_create", "arg": "[, lucid_kernel[, blur_kernel]]", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::computeSignature": [{"name": "cv.xfeatures2d_PCTSignatures.computeSignature", "arg": "image[, signature]", "ret": "signature"}], "cv::xfeatures2d::PCTSignatures::computeSignatures": [{"name": "cv.xfeatures2d_PCTSignatures.computeSignatures", "arg": "images, signatures", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::create": [{"name": "cv.xfeatures2d.PCTSignatures_create", "arg": "[, initSampleCount[, initSeedCount[, pointDistribution]]]", "ret": "retval"}, {"name": "cv.xfeatures2d.PCTSignatures_create", "arg": "initSamplingPoints, initSeedCount", "ret": "retval"}, {"name": "cv.xfeatures2d.PCTSignatures_create", "arg": "initSamplingPoints, initClusterSeedIndexes", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::drawSignature": [{"name": "cv.xfeatures2d.PCTSignatures_drawSignature", "arg": "source, signature[, result[, radiusToShorterSideRatio[, borderThickness]]]", "ret": "result"}], "cv::xfeatures2d::PCTSignatures::generateInitPoints": [{"name": "cv.xfeatures2d.PCTSignatures_generateInitPoints", "arg": "initPoints, count, pointDistribution", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::getClusterMinSize": [{"name": "cv.xfeatures2d_PCTSignatures.getClusterMinSize", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getDistanceFunction": [{"name": "cv.xfeatures2d_PCTSignatures.getDistanceFunction", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getDropThreshold": [{"name": "cv.xfeatures2d_PCTSignatures.getDropThreshold", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getGrayscaleBits": [{"name": "cv.xfeatures2d_PCTSignatures.getGrayscaleBits", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getInitSeedCount": [{"name": "cv.xfeatures2d_PCTSignatures.getInitSeedCount", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getInitSeedIndexes": [{"name": "cv.xfeatures2d_PCTSignatures.getInitSeedIndexes", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getIterationCount": [{"name": "cv.xfeatures2d_PCTSignatures.getIterationCount", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getJoiningDistance": [{"name": "cv.xfeatures2d_PCTSignatures.getJoiningDistance", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getMaxClustersCount": [{"name": "cv.xfeatures2d_PCTSignatures.getMaxClustersCount", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getSampleCount": [{"name": "cv.xfeatures2d_PCTSignatures.getSampleCount", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getSamplingPoints": [{"name": "cv.xfeatures2d_PCTSignatures.getSamplingPoints", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getWeightA": [{"name": "cv.xfeatures2d_PCTSignatures.getWeightA", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getWeightB": [{"name": "cv.xfeatures2d_PCTSignatures.getWeightB", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getWeightContrast": [{"name": "cv.xfeatures2d_PCTSignatures.getWeightContrast", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getWeightEntropy": [{"name": "cv.xfeatures2d_PCTSignatures.getWeightEntropy", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getWeightL": [{"name": "cv.xfeatures2d_PCTSignatures.getWeightL", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getWeightX": [{"name": "cv.xfeatures2d_PCTSignatures.getWeightX", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getWeightY": [{"name": "cv.xfeatures2d_PCTSignatures.getWeightY", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::getWindowRadius": [{"name": "cv.xfeatures2d_PCTSignatures.getWindowRadius", "arg": "", "ret": "retval"}], "cv::xfeatures2d::PCTSignatures::setClusterMinSize": [{"name": "cv.xfeatures2d_PCTSignatures.setClusterMinSize", "arg": "clusterMinSize", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setDistanceFunction": [{"name": "cv.xfeatures2d_PCTSignatures.setDistanceFunction", "arg": "distanceFunction", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setDropThreshold": [{"name": "cv.xfeatures2d_PCTSignatures.setDropThreshold", "arg": "dropThreshold", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setGrayscaleBits": [{"name": "cv.xfeatures2d_PCTSignatures.setGrayscaleBits", "arg": "grayscaleBits", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setInitSeedIndexes": [{"name": "cv.xfeatures2d_PCTSignatures.setInitSeedIndexes", "arg": "initSeedIndexes", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setIterationCount": [{"name": "cv.xfeatures2d_PCTSignatures.setIterationCount", "arg": "iterationCount", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setJoiningDistance": [{"name": "cv.xfeatures2d_PCTSignatures.setJoiningDistance", "arg": "joiningDistance", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setMaxClustersCount": [{"name": "cv.xfeatures2d_PCTSignatures.setMaxClustersCount", "arg": "maxClustersCount", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setSamplingPoints": [{"name": "cv.xfeatures2d_PCTSignatures.setSamplingPoints", "arg": "samplingPoints", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setTranslation": [{"name": "cv.xfeatures2d_PCTSignatures.setTranslation", "arg": "idx, value", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setTranslations": [{"name": "cv.xfeatures2d_PCTSignatures.setTranslations", "arg": "translations", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setWeight": [{"name": "cv.xfeatures2d_PCTSignatures.setWeight", "arg": "idx, value", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setWeightA": [{"name": "cv.xfeatures2d_PCTSignatures.setWeightA", "arg": "weight", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setWeightB": [{"name": "cv.xfeatures2d_PCTSignatures.setWeightB", "arg": "weight", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setWeightContrast": [{"name": "cv.xfeatures2d_PCTSignatures.setWeightContrast", "arg": "weight", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setWeightEntropy": [{"name": "cv.xfeatures2d_PCTSignatures.setWeightEntropy", "arg": "weight", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setWeightL": [{"name": "cv.xfeatures2d_PCTSignatures.setWeightL", "arg": "weight", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setWeightX": [{"name": "cv.xfeatures2d_PCTSignatures.setWeightX", "arg": "weight", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setWeightY": [{"name": "cv.xfeatures2d_PCTSignatures.setWeightY", "arg": "weight", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setWeights": [{"name": "cv.xfeatures2d_PCTSignatures.setWeights", "arg": "weights", "ret": "None"}], "cv::xfeatures2d::PCTSignatures::setWindowRadius": [{"name": "cv.xfeatures2d_PCTSignatures.setWindowRadius", "arg": "radius", "ret": "None"}], "cv::xfeatures2d::PCTSignaturesSQFD::computeQuadraticFormDistance": [{"name": "cv.xfeatures2d_PCTSignaturesSQFD.computeQuadraticFormDistance", "arg": "_signature0, _signature1", "ret": "retval"}], "cv::xfeatures2d::PCTSignaturesSQFD::computeQuadraticFormDistances": [{"name": "cv.xfeatures2d_PCTSignaturesSQFD.computeQuadraticFormDistances", "arg": "sourceSignature, imageSignatures, distances", "ret": "None"}], "cv::xfeatures2d::PCTSignaturesSQFD::create": [{"name": "cv.xfeatures2d.PCTSignaturesSQFD_create", "arg": "[, distanceFunction[, similarityFunction[, similarityParameter]]]", "ret": "retval"}], "cv::xfeatures2d::SURF::create": [{"name": "cv.xfeatures2d.SURF_create", "arg": "[, hessianThreshold[, nOctaves[, nOctaveLayers[, extended[, upright]]]]]", "ret": "retval"}], "cv::xfeatures2d::SURF::getExtended": [{"name": "cv.xfeatures2d_SURF.getExtended", "arg": "", "ret": "retval"}], "cv::xfeatures2d::SURF::getHessianThreshold": [{"name": "cv.xfeatures2d_SURF.getHessianThreshold", "arg": "", "ret": "retval"}], "cv::xfeatures2d::SURF::getNOctaveLayers": [{"name": "cv.xfeatures2d_SURF.getNOctaveLayers", "arg": "", "ret": "retval"}], "cv::xfeatures2d::SURF::getNOctaves": [{"name": "cv.xfeatures2d_SURF.getNOctaves", "arg": "", "ret": "retval"}], "cv::xfeatures2d::SURF::getUpright": [{"name": "cv.xfeatures2d_SURF.getUpright", "arg": "", "ret": "retval"}], "cv::xfeatures2d::SURF::setExtended": [{"name": "cv.xfeatures2d_SURF.setExtended", "arg": "extended", "ret": "None"}], "cv::xfeatures2d::SURF::setHessianThreshold": [{"name": "cv.xfeatures2d_SURF.setHessianThreshold", "arg": "hessianThreshold", "ret": "None"}], "cv::xfeatures2d::SURF::setNOctaveLayers": [{"name": "cv.xfeatures2d_SURF.setNOctaveLayers", "arg": "nOctaveLayers", "ret": "None"}], "cv::xfeatures2d::SURF::setNOctaves": [{"name": "cv.xfeatures2d_SURF.setNOctaves", "arg": "nOctaves", "ret": "None"}], "cv::xfeatures2d::SURF::setUpright": [{"name": "cv.xfeatures2d_SURF.setUpright", "arg": "upright", "ret": "None"}], "cv::xfeatures2d::StarDetector::create": [{"name": "cv.xfeatures2d.StarDetector_create", "arg": "[, maxSize[, responseThreshold[, lineThresholdProjected[, lineThresholdBinarized[, suppressNonmaxSize]]]]]", "ret": "retval"}], "cv::xfeatures2d::VGG::create": [{"name": "cv.xfeatures2d.VGG_create", "arg": "[, desc[, isigma[, img_normalize[, use_scale_orientation[, scale_factor[, dsc_normalize]]]]]]", "ret": "retval"}], "cv::xfeatures2d::VGG::getScaleFactor": [{"name": "cv.xfeatures2d_VGG.getScaleFactor", "arg": "", "ret": "retval"}], "cv::xfeatures2d::VGG::getSigma": [{"name": "cv.xfeatures2d_VGG.getSigma", "arg": "", "ret": "retval"}], "cv::xfeatures2d::VGG::getUseNormalizeDescriptor": [{"name": "cv.xfeatures2d_VGG.getUseNormalizeDescriptor", "arg": "", "ret": "retval"}], "cv::xfeatures2d::VGG::getUseNormalizeImage": [{"name": "cv.xfeatures2d_VGG.getUseNormalizeImage", "arg": "", "ret": "retval"}], "cv::xfeatures2d::VGG::getUseScaleOrientation": [{"name": "cv.xfeatures2d_VGG.getUseScaleOrientation", "arg": "", "ret": "retval"}], "cv::xfeatures2d::VGG::setScaleFactor": [{"name": "cv.xfeatures2d_VGG.setScaleFactor", "arg": "scale_factor", "ret": "None"}], "cv::xfeatures2d::VGG::setSigma": [{"name": "cv.xfeatures2d_VGG.setSigma", "arg": "isigma", "ret": "None"}], "cv::xfeatures2d::VGG::setUseNormalizeDescriptor": [{"name": "cv.xfeatures2d_VGG.setUseNormalizeDescriptor", "arg": "dsc_normalize", "ret": "None"}], "cv::xfeatures2d::VGG::setUseNormalizeImage": [{"name": "cv.xfeatures2d_VGG.setUseNormalizeImage", "arg": "img_normalize", "ret": "None"}], "cv::xfeatures2d::VGG::setUseScaleOrientation": [{"name": "cv.xfeatures2d_VGG.setUseScaleOrientation", "arg": "use_scale_orientation", "ret": "None"}], "cv::ximgproc::AdaptiveManifoldFilter::collectGarbage": [{"name": "cv.ximgproc_AdaptiveManifoldFilter.collectGarbage", "arg": "", "ret": "None"}], "cv::ximgproc::AdaptiveManifoldFilter::create": [{"name": "cv.ximgproc.AdaptiveManifoldFilter_create", "arg": "", "ret": "retval"}], "cv::ximgproc::AdaptiveManifoldFilter::filter": [{"name": "cv.ximgproc_AdaptiveManifoldFilter.filter", "arg": "src[, dst[, joint]]", "ret": "dst"}], "cv::ximgproc::ContourFitting::estimateTransformation": [{"name": "cv.ximgproc_ContourFitting.estimateTransformation", "arg": "src, dst[, alphaPhiST[, fdContour]]", "ret": "alphaPhiST, dist"}], "cv::ximgproc::ContourFitting::getCtrSize": [{"name": "cv.ximgproc_ContourFitting.getCtrSize", "arg": "", "ret": "retval"}], "cv::ximgproc::ContourFitting::getFDSize": [{"name": "cv.ximgproc_ContourFitting.getFDSize", "arg": "", "ret": "retval"}], "cv::ximgproc::ContourFitting::setCtrSize": [{"name": "cv.ximgproc_ContourFitting.setCtrSize", "arg": "n", "ret": "None"}], "cv::ximgproc::ContourFitting::setFDSize": [{"name": "cv.ximgproc_ContourFitting.setFDSize", "arg": "n", "ret": "None"}], "cv::ximgproc::DTFilter::filter": [{"name": "cv.ximgproc_DTFilter.filter", "arg": "src[, dst[, dDepth]]", "ret": "dst"}], "cv::ximgproc::DisparityFilter::filter": [{"name": "cv.ximgproc_DisparityFilter.filter", "arg": "disparity_map_left, left_view[, filtered_disparity_map[, disparity_map_right[, ROI[, right_view]]]]", "ret": "filtered_disparity_map"}], "cv::ximgproc::DisparityWLSFilter::getConfidenceMap": [{"name": "cv.ximgproc_DisparityWLSFilter.getConfidenceMap", "arg": "", "ret": "retval"}], "cv::ximgproc::DisparityWLSFilter::getDepthDiscontinuityRadius": [{"name": "cv.ximgproc_DisparityWLSFilter.getDepthDiscontinuityRadius", "arg": "", "ret": "retval"}], "cv::ximgproc::DisparityWLSFilter::getLRCthresh": [{"name": "cv.ximgproc_DisparityWLSFilter.getLRCthresh", "arg": "", "ret": "retval"}], "cv::ximgproc::DisparityWLSFilter::getLambda": [{"name": "cv.ximgproc_DisparityWLSFilter.getLambda", "arg": "", "ret": "retval"}], "cv::ximgproc::DisparityWLSFilter::getROI": [{"name": "cv.ximgproc_DisparityWLSFilter.getROI", "arg": "", "ret": "retval"}], "cv::ximgproc::DisparityWLSFilter::getSigmaColor": [{"name": "cv.ximgproc_DisparityWLSFilter.getSigmaColor", "arg": "", "ret": "retval"}], "cv::ximgproc::DisparityWLSFilter::setDepthDiscontinuityRadius": [{"name": "cv.ximgproc_DisparityWLSFilter.setDepthDiscontinuityRadius", "arg": "_disc_radius", "ret": "None"}], "cv::ximgproc::DisparityWLSFilter::setLRCthresh": [{"name": "cv.ximgproc_DisparityWLSFilter.setLRCthresh", "arg": "_LRC_thresh", "ret": "None"}], "cv::ximgproc::DisparityWLSFilter::setLambda": [{"name": "cv.ximgproc_DisparityWLSFilter.setLambda", "arg": "_lambda", "ret": "None"}], "cv::ximgproc::DisparityWLSFilter::setSigmaColor": [{"name": "cv.ximgproc_DisparityWLSFilter.setSigmaColor", "arg": "_sigma_color", "ret": "None"}], "cv::ximgproc::EdgeAwareInterpolator::getFGSLambda": [{"name": "cv.ximgproc_EdgeAwareInterpolator.getFGSLambda", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeAwareInterpolator::getFGSSigma": [{"name": "cv.ximgproc_EdgeAwareInterpolator.getFGSSigma", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeAwareInterpolator::getK": [{"name": "cv.ximgproc_EdgeAwareInterpolator.getK", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeAwareInterpolator::getLambda": [{"name": "cv.ximgproc_EdgeAwareInterpolator.getLambda", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeAwareInterpolator::getSigma": [{"name": "cv.ximgproc_EdgeAwareInterpolator.getSigma", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeAwareInterpolator::getUsePostProcessing": [{"name": "cv.ximgproc_EdgeAwareInterpolator.getUsePostProcessing", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeAwareInterpolator::setCostMap": [{"name": "cv.ximgproc_EdgeAwareInterpolator.setCostMap", "arg": "_costMap", "ret": "None"}], "cv::ximgproc::EdgeAwareInterpolator::setFGSLambda": [{"name": "cv.ximgproc_EdgeAwareInterpolator.setFGSLambda", "arg": "_lambda", "ret": "None"}], "cv::ximgproc::EdgeAwareInterpolator::setFGSSigma": [{"name": "cv.ximgproc_EdgeAwareInterpolator.setFGSSigma", "arg": "_sigma", "ret": "None"}], "cv::ximgproc::EdgeAwareInterpolator::setK": [{"name": "cv.ximgproc_EdgeAwareInterpolator.setK", "arg": "_k", "ret": "None"}], "cv::ximgproc::EdgeAwareInterpolator::setLambda": [{"name": "cv.ximgproc_EdgeAwareInterpolator.setLambda", "arg": "_lambda", "ret": "None"}], "cv::ximgproc::EdgeAwareInterpolator::setSigma": [{"name": "cv.ximgproc_EdgeAwareInterpolator.setSigma", "arg": "_sigma", "ret": "None"}], "cv::ximgproc::EdgeAwareInterpolator::setUsePostProcessing": [{"name": "cv.ximgproc_EdgeAwareInterpolator.setUsePostProcessing", "arg": "_use_post_proc", "ret": "None"}], "cv::ximgproc::EdgeBoxes::getAlpha": [{"name": "cv.ximgproc_EdgeBoxes.getAlpha", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeBoxes::getBeta": [{"name": "cv.ximgproc_EdgeBoxes.getBeta", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeBoxes::getBoundingBoxes": [{"name": "cv.ximgproc_EdgeBoxes.getBoundingBoxes", "arg": "edge_map, orientation_map[, scores]", "ret": "boxes, scores"}], "cv::ximgproc::EdgeBoxes::getClusterMinMag": [{"name": "cv.ximgproc_EdgeBoxes.getClusterMinMag", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeBoxes::getEdgeMergeThr": [{"name": "cv.ximgproc_EdgeBoxes.getEdgeMergeThr", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeBoxes::getEdgeMinMag": [{"name": "cv.ximgproc_EdgeBoxes.getEdgeMinMag", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeBoxes::getEta": [{"name": "cv.ximgproc_EdgeBoxes.getEta", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeBoxes::getGamma": [{"name": "cv.ximgproc_EdgeBoxes.getGamma", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeBoxes::getKappa": [{"name": "cv.ximgproc_EdgeBoxes.getKappa", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeBoxes::getMaxAspectRatio": [{"name": "cv.ximgproc_EdgeBoxes.getMaxAspectRatio", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeBoxes::getMaxBoxes": [{"name": "cv.ximgproc_EdgeBoxes.getMaxBoxes", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeBoxes::getMinBoxArea": [{"name": "cv.ximgproc_EdgeBoxes.getMinBoxArea", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeBoxes::getMinScore": [{"name": "cv.ximgproc_EdgeBoxes.getMinScore", "arg": "", "ret": "retval"}], "cv::ximgproc::EdgeBoxes::setAlpha": [{"name": "cv.ximgproc_EdgeBoxes.setAlpha", "arg": "value", "ret": "None"}], "cv::ximgproc::EdgeBoxes::setBeta": [{"name": "cv.ximgproc_EdgeBoxes.setBeta", "arg": "value", "ret": "None"}], "cv::ximgproc::EdgeBoxes::setClusterMinMag": [{"name": "cv.ximgproc_EdgeBoxes.setClusterMinMag", "arg": "value", "ret": "None"}], "cv::ximgproc::EdgeBoxes::setEdgeMergeThr": [{"name": "cv.ximgproc_EdgeBoxes.setEdgeMergeThr", "arg": "value", "ret": "None"}], "cv::ximgproc::EdgeBoxes::setEdgeMinMag": [{"name": "cv.ximgproc_EdgeBoxes.setEdgeMinMag", "arg": "value", "ret": "None"}], "cv::ximgproc::EdgeBoxes::setEta": [{"name": "cv.ximgproc_EdgeBoxes.setEta", "arg": "value", "ret": "None"}], "cv::ximgproc::EdgeBoxes::setGamma": [{"name": "cv.ximgproc_EdgeBoxes.setGamma", "arg": "value", "ret": "None"}], "cv::ximgproc::EdgeBoxes::setKappa": [{"name": "cv.ximgproc_EdgeBoxes.setKappa", "arg": "value", "ret": "None"}], "cv::ximgproc::EdgeBoxes::setMaxAspectRatio": [{"name": "cv.ximgproc_EdgeBoxes.setMaxAspectRatio", "arg": "value", "ret": "None"}], "cv::ximgproc::EdgeBoxes::setMaxBoxes": [{"name": "cv.ximgproc_EdgeBoxes.setMaxBoxes", "arg": "value", "ret": "None"}], "cv::ximgproc::EdgeBoxes::setMinBoxArea": [{"name": "cv.ximgproc_EdgeBoxes.setMinBoxArea", "arg": "value", "ret": "None"}], "cv::ximgproc::EdgeBoxes::setMinScore": [{"name": "cv.ximgproc_EdgeBoxes.setMinScore", "arg": "value", "ret": "None"}], "cv::ximgproc::FastBilateralSolverFilter::filter": [{"name": "cv.ximgproc_FastBilateralSolverFilter.filter", "arg": "src, confidence[, dst]", "ret": "dst"}], "cv::ximgproc::FastGlobalSmootherFilter::filter": [{"name": "cv.ximgproc_FastGlobalSmootherFilter.filter", "arg": "src[, dst]", "ret": "dst"}], "cv::ximgproc::FastLineDetector::detect": [{"name": "cv.ximgproc_FastLineDetector.detect", "arg": "_image[, _lines]", "ret": "_lines"}], "cv::ximgproc::FastLineDetector::drawSegments": [{"name": "cv.ximgproc_FastLineDetector.drawSegments", "arg": "_image, lines[, draw_arrow]", "ret": "_image"}], "cv::ximgproc::GuidedFilter::filter": [{"name": "cv.ximgproc_GuidedFilter.filter", "arg": "src[, dst[, dDepth]]", "ret": "dst"}], "cv::ximgproc::RFFeatureGetter::getFeatures": [{"name": "cv.ximgproc_RFFeatureGetter.getFeatures", "arg": "src, features, gnrmRad, gsmthRad, shrink, outNum, gradNum", "ret": "None"}], "cv::ximgproc::RICInterpolator::getAlpha": [{"name": "cv.ximgproc_RICInterpolator.getAlpha", "arg": "", "ret": "retval"}], "cv::ximgproc::RICInterpolator::getFGSLambda": [{"name": "cv.ximgproc_RICInterpolator.getFGSLambda", "arg": "", "ret": "retval"}], "cv::ximgproc::RICInterpolator::getFGSSigma": [{"name": "cv.ximgproc_RICInterpolator.getFGSSigma", "arg": "", "ret": "retval"}], "cv::ximgproc::RICInterpolator::getK": [{"name": "cv.ximgproc_RICInterpolator.getK", "arg": "", "ret": "retval"}], "cv::ximgproc::RICInterpolator::getMaxFlow": [{"name": "cv.ximgproc_RICInterpolator.getMaxFlow", "arg": "", "ret": "retval"}], "cv::ximgproc::RICInterpolator::getModelIter": [{"name": "cv.ximgproc_RICInterpolator.getModelIter", "arg": "", "ret": "retval"}], "cv::ximgproc::RICInterpolator::getRefineModels": [{"name": "cv.ximgproc_RICInterpolator.getRefineModels", "arg": "", "ret": "retval"}], "cv::ximgproc::RICInterpolator::getSuperpixelMode": [{"name": "cv.ximgproc_RICInterpolator.getSuperpixelMode", "arg": "", "ret": "retval"}], "cv::ximgproc::RICInterpolator::getSuperpixelNNCnt": [{"name": "cv.ximgproc_RICInterpolator.getSuperpixelNNCnt", "arg": "", "ret": "retval"}], "cv::ximgproc::RICInterpolator::getSuperpixelRuler": [{"name": "cv.ximgproc_RICInterpolator.getSuperpixelRuler", "arg": "", "ret": "retval"}], "cv::ximgproc::RICInterpolator::getSuperpixelSize": [{"name": "cv.ximgproc_RICInterpolator.getSuperpixelSize", "arg": "", "ret": "retval"}], "cv::ximgproc::RICInterpolator::getUseGlobalSmootherFilter": [{"name": "cv.ximgproc_RICInterpolator.getUseGlobalSmootherFilter", "arg": "", "ret": "retval"}], "cv::ximgproc::RICInterpolator::getUseVariationalRefinement": [{"name": "cv.ximgproc_RICInterpolator.getUseVariationalRefinement", "arg": "", "ret": "retval"}], "cv::ximgproc::RICInterpolator::setAlpha": [{"name": "cv.ximgproc_RICInterpolator.setAlpha", "arg": "[, alpha]", "ret": "None"}], "cv::ximgproc::RICInterpolator::setCostMap": [{"name": "cv.ximgproc_RICInterpolator.setCostMap", "arg": "costMap", "ret": "None"}], "cv::ximgproc::RICInterpolator::setFGSLambda": [{"name": "cv.ximgproc_RICInterpolator.setFGSLambda", "arg": "[, lambda]", "ret": "None"}], "cv::ximgproc::RICInterpolator::setFGSSigma": [{"name": "cv.ximgproc_RICInterpolator.setFGSSigma", "arg": "[, sigma]", "ret": "None"}], "cv::ximgproc::RICInterpolator::setK": [{"name": "cv.ximgproc_RICInterpolator.setK", "arg": "[, k]", "ret": "None"}], "cv::ximgproc::RICInterpolator::setMaxFlow": [{"name": "cv.ximgproc_RICInterpolator.setMaxFlow", "arg": "[, maxFlow]", "ret": "None"}], "cv::ximgproc::RICInterpolator::setModelIter": [{"name": "cv.ximgproc_RICInterpolator.setModelIter", "arg": "[, modelIter]", "ret": "None"}], "cv::ximgproc::RICInterpolator::setRefineModels": [{"name": "cv.ximgproc_RICInterpolator.setRefineModels", "arg": "[, refineModles]", "ret": "None"}], "cv::ximgproc::RICInterpolator::setSuperpixelMode": [{"name": "cv.ximgproc_RICInterpolator.setSuperpixelMode", "arg": "[, mode]", "ret": "None"}], "cv::ximgproc::RICInterpolator::setSuperpixelNNCnt": [{"name": "cv.ximgproc_RICInterpolator.setSuperpixelNNCnt", "arg": "[, spNN]", "ret": "None"}], "cv::ximgproc::RICInterpolator::setSuperpixelRuler": [{"name": "cv.ximgproc_RICInterpolator.setSuperpixelRuler", "arg": "[, ruler]", "ret": "None"}], "cv::ximgproc::RICInterpolator::setSuperpixelSize": [{"name": "cv.ximgproc_RICInterpolator.setSuperpixelSize", "arg": "[, spSize]", "ret": "None"}], "cv::ximgproc::RICInterpolator::setUseGlobalSmootherFilter": [{"name": "cv.ximgproc_RICInterpolator.setUseGlobalSmootherFilter", "arg": "[, use_FGS]", "ret": "None"}], "cv::ximgproc::RICInterpolator::setUseVariationalRefinement": [{"name": "cv.ximgproc_RICInterpolator.setUseVariationalRefinement", "arg": "[, use_variational_refinement]", "ret": "None"}], "cv::ximgproc::RidgeDetectionFilter::create": [{"name": "cv.ximgproc.RidgeDetectionFilter_create", "arg": "[, ddepth[, dx[, dy[, ksize[, out_dtype[, scale[, delta[, borderType]]]]]]]]", "ret": "retval"}], "cv::ximgproc::RidgeDetectionFilter::getRidgeFilteredImage": [{"name": "cv.ximgproc_RidgeDetectionFilter.getRidgeFilteredImage", "arg": "_img[, out]", "ret": "out"}], "cv::ximgproc::SparseMatchInterpolator::interpolate": [{"name": "cv.ximgproc_SparseMatchInterpolator.interpolate", "arg": "from_image, from_points, to_image, to_points[, dense_flow]", "ret": "dense_flow"}], "cv::ximgproc::StructuredEdgeDetection::computeOrientation": [{"name": "cv.ximgproc_StructuredEdgeDetection.computeOrientation", "arg": "_src[, _dst]", "ret": "_dst"}], "cv::ximgproc::StructuredEdgeDetection::detectEdges": [{"name": "cv.ximgproc_StructuredEdgeDetection.detectEdges", "arg": "_src[, _dst]", "ret": "_dst"}], "cv::ximgproc::StructuredEdgeDetection::edgesNms": [{"name": "cv.ximgproc_StructuredEdgeDetection.edgesNms", "arg": "edge_image, orientation_image[, _dst[, r[, s[, m[, isParallel]]]]]", "ret": "_dst"}], "cv::ximgproc::SuperpixelLSC::enforceLabelConnectivity": [{"name": "cv.ximgproc_SuperpixelLSC.enforceLabelConnectivity", "arg": "[, min_element_size]", "ret": "None"}], "cv::ximgproc::SuperpixelLSC::getLabelContourMask": [{"name": "cv.ximgproc_SuperpixelLSC.getLabelContourMask", "arg": "[, image[, thick_line]]", "ret": "image"}], "cv::ximgproc::SuperpixelLSC::getLabels": [{"name": "cv.ximgproc_SuperpixelLSC.getLabels", "arg": "[, labels_out]", "ret": "labels_out"}], "cv::ximgproc::SuperpixelLSC::getNumberOfSuperpixels": [{"name": "cv.ximgproc_SuperpixelLSC.getNumberOfSuperpixels", "arg": "", "ret": "retval"}], "cv::ximgproc::SuperpixelLSC::iterate": [{"name": "cv.ximgproc_SuperpixelLSC.iterate", "arg": "[, num_iterations]", "ret": "None"}], "cv::ximgproc::SuperpixelSEEDS::getLabelContourMask": [{"name": "cv.ximgproc_SuperpixelSEEDS.getLabelContourMask", "arg": "[, image[, thick_line]]", "ret": "image"}], "cv::ximgproc::SuperpixelSEEDS::getLabels": [{"name": "cv.ximgproc_SuperpixelSEEDS.getLabels", "arg": "[, labels_out]", "ret": "labels_out"}], "cv::ximgproc::SuperpixelSEEDS::getNumberOfSuperpixels": [{"name": "cv.ximgproc_SuperpixelSEEDS.getNumberOfSuperpixels", "arg": "", "ret": "retval"}], "cv::ximgproc::SuperpixelSEEDS::iterate": [{"name": "cv.ximgproc_SuperpixelSEEDS.iterate", "arg": "img[, num_iterations]", "ret": "None"}], "cv::ximgproc::SuperpixelSLIC::enforceLabelConnectivity": [{"name": "cv.ximgproc_SuperpixelSLIC.enforceLabelConnectivity", "arg": "[, min_element_size]", "ret": "None"}], "cv::ximgproc::SuperpixelSLIC::getLabelContourMask": [{"name": "cv.ximgproc_SuperpixelSLIC.getLabelContourMask", "arg": "[, image[, thick_line]]", "ret": "image"}], "cv::ximgproc::SuperpixelSLIC::getLabels": [{"name": "cv.ximgproc_SuperpixelSLIC.getLabels", "arg": "[, labels_out]", "ret": "labels_out"}], "cv::ximgproc::SuperpixelSLIC::getNumberOfSuperpixels": [{"name": "cv.ximgproc_SuperpixelSLIC.getNumberOfSuperpixels", "arg": "", "ret": "retval"}], "cv::ximgproc::SuperpixelSLIC::iterate": [{"name": "cv.ximgproc_SuperpixelSLIC.iterate", "arg": "[, num_iterations]", "ret": "None"}], "cv::ximgproc::segmentation::GraphSegmentation::getK": [{"name": "cv.ximgproc_segmentation_GraphSegmentation.getK", "arg": "", "ret": "retval"}], "cv::ximgproc::segmentation::GraphSegmentation::getMinSize": [{"name": "cv.ximgproc_segmentation_GraphSegmentation.getMinSize", "arg": "", "ret": "retval"}], "cv::ximgproc::segmentation::GraphSegmentation::getSigma": [{"name": "cv.ximgproc_segmentation_GraphSegmentation.getSigma", "arg": "", "ret": "retval"}], "cv::ximgproc::segmentation::GraphSegmentation::processImage": [{"name": "cv.ximgproc_segmentation_GraphSegmentation.processImage", "arg": "src[, dst]", "ret": "dst"}], "cv::ximgproc::segmentation::GraphSegmentation::setK": [{"name": "cv.ximgproc_segmentation_GraphSegmentation.setK", "arg": "k", "ret": "None"}], "cv::ximgproc::segmentation::GraphSegmentation::setMinSize": [{"name": "cv.ximgproc_segmentation_GraphSegmentation.setMinSize", "arg": "min_size", "ret": "None"}], "cv::ximgproc::segmentation::GraphSegmentation::setSigma": [{"name": "cv.ximgproc_segmentation_GraphSegmentation.setSigma", "arg": "sigma", "ret": "None"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentation::addGraphSegmentation": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentation.addGraphSegmentation", "arg": "g", "ret": "None"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentation::addImage": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentation.addImage", "arg": "img", "ret": "None"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentation::addStrategy": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentation.addStrategy", "arg": "s", "ret": "None"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentation::clearGraphSegmentations": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentation.clearGraphSegmentations", "arg": "", "ret": "None"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentation::clearImages": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentation.clearImages", "arg": "", "ret": "None"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentation::clearStrategies": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentation.clearStrategies", "arg": "", "ret": "None"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentation::process": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentation.process", "arg": "", "ret": "rects"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentation::setBaseImage": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentation.setBaseImage", "arg": "img", "ret": "None"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentation::switchToSelectiveSearchFast": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentation.switchToSelectiveSearchFast", "arg": "[, base_k[, inc_k[, sigma]]]", "ret": "None"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentation::switchToSelectiveSearchQuality": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentation.switchToSelectiveSearchQuality", "arg": "[, base_k[, inc_k[, sigma]]]", "ret": "None"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentation::switchToSingleStrategy": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentation.switchToSingleStrategy", "arg": "[, k[, sigma]]", "ret": "None"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategy::get": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentationStrategy.get", "arg": "r1, r2", "ret": "retval"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategy::merge": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentationStrategy.merge", "arg": "r1, r2", "ret": "None"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategy::setImage": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentationStrategy.setImage", "arg": "img, regions, sizes[, image_id]", "ret": "None"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategyMultiple::addStrategy": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentationStrategyMultiple.addStrategy", "arg": "g, weight", "ret": "None"}], "cv::ximgproc::segmentation::SelectiveSearchSegmentationStrategyMultiple::clearStrategies": [{"name": "cv.ximgproc_segmentation_SelectiveSearchSegmentationStrategyMultiple.clearStrategies", "arg": "", "ret": "None"}], "cv::xphoto::GrayworldWB::getSaturationThreshold": [{"name": "cv.xphoto_GrayworldWB.getSaturationThreshold", "arg": "", "ret": "retval"}], "cv::xphoto::GrayworldWB::setSaturationThreshold": [{"name": "cv.xphoto_GrayworldWB.setSaturationThreshold", "arg": "val", "ret": "None"}], "cv::xphoto::LearningBasedWB::extractSimpleFeatures": [{"name": "cv.xphoto_LearningBasedWB.extractSimpleFeatures", "arg": "src[, dst]", "ret": "dst"}], "cv::xphoto::LearningBasedWB::getHistBinNum": [{"name": "cv.xphoto_LearningBasedWB.getHistBinNum", "arg": "", "ret": "retval"}], "cv::xphoto::LearningBasedWB::getRangeMaxVal": [{"name": "cv.xphoto_LearningBasedWB.getRangeMaxVal", "arg": "", "ret": "retval"}], "cv::xphoto::LearningBasedWB::getSaturationThreshold": [{"name": "cv.xphoto_LearningBasedWB.getSaturationThreshold", "arg": "", "ret": "retval"}], "cv::xphoto::LearningBasedWB::setHistBinNum": [{"name": "cv.xphoto_LearningBasedWB.setHistBinNum", "arg": "val", "ret": "None"}], "cv::xphoto::LearningBasedWB::setRangeMaxVal": [{"name": "cv.xphoto_LearningBasedWB.setRangeMaxVal", "arg": "val", "ret": "None"}], "cv::xphoto::LearningBasedWB::setSaturationThreshold": [{"name": "cv.xphoto_LearningBasedWB.setSaturationThreshold", "arg": "val", "ret": "None"}], "cv::xphoto::SimpleWB::getInputMax": [{"name": "cv.xphoto_SimpleWB.getInputMax", "arg": "", "ret": "retval"}], "cv::xphoto::SimpleWB::getInputMin": [{"name": "cv.xphoto_SimpleWB.getInputMin", "arg": "", "ret": "retval"}], "cv::xphoto::SimpleWB::getOutputMax": [{"name": "cv.xphoto_SimpleWB.getOutputMax", "arg": "", "ret": "retval"}], "cv::xphoto::SimpleWB::getOutputMin": [{"name": "cv.xphoto_SimpleWB.getOutputMin", "arg": "", "ret": "retval"}], "cv::xphoto::SimpleWB::getP": [{"name": "cv.xphoto_SimpleWB.getP", "arg": "", "ret": "retval"}], "cv::xphoto::SimpleWB::setInputMax": [{"name": "cv.xphoto_SimpleWB.setInputMax", "arg": "val", "ret": "None"}], "cv::xphoto::SimpleWB::setInputMin": [{"name": "cv.xphoto_SimpleWB.setInputMin", "arg": "val", "ret": "None"}], "cv::xphoto::SimpleWB::setOutputMax": [{"name": "cv.xphoto_SimpleWB.setOutputMax", "arg": "val", "ret": "None"}], "cv::xphoto::SimpleWB::setOutputMin": [{"name": "cv.xphoto_SimpleWB.setOutputMin", "arg": "val", "ret": "None"}], "cv::xphoto::SimpleWB::setP": [{"name": "cv.xphoto_SimpleWB.setP", "arg": "val", "ret": "None"}], "cv::xphoto::TonemapDurand::getContrast": [{"name": "cv.xphoto_TonemapDurand.getContrast", "arg": "", "ret": "retval"}], "cv::xphoto::TonemapDurand::getSaturation": [{"name": "cv.xphoto_TonemapDurand.getSaturation", "arg": "", "ret": "retval"}], "cv::xphoto::TonemapDurand::getSigmaColor": [{"name": "cv.xphoto_TonemapDurand.getSigmaColor", "arg": "", "ret": "retval"}], "cv::xphoto::TonemapDurand::getSigmaSpace": [{"name": "cv.xphoto_TonemapDurand.getSigmaSpace", "arg": "", "ret": "retval"}], "cv::xphoto::TonemapDurand::setContrast": [{"name": "cv.xphoto_TonemapDurand.setContrast", "arg": "contrast", "ret": "None"}], "cv::xphoto::TonemapDurand::setSaturation": [{"name": "cv.xphoto_TonemapDurand.setSaturation", "arg": "saturation", "ret": "None"}], "cv::xphoto::TonemapDurand::setSigmaColor": [{"name": "cv.xphoto_TonemapDurand.setSigmaColor", "arg": "sigma_color", "ret": "None"}], "cv::xphoto::TonemapDurand::setSigmaSpace": [{"name": "cv.xphoto_TonemapDurand.setSigmaSpace", "arg": "sigma_space", "ret": "None"}], "cv::xphoto::WhiteBalancer::balanceWhite": [{"name": "cv.xphoto_WhiteBalancer.balanceWhite", "arg": "src[, dst]", "ret": "dst"}], "cv::CamShift": [{"name": "cv.CamShift", "arg": "probImage, window, criteria", "ret": "retval, window"}], "cv::Canny": [{"name": "cv.Canny", "arg": "image, threshold1, threshold2[, edges[, apertureSize[, L2gradient]]]", "ret": "edges"}, {"name": "cv.Canny", "arg": "dx, dy, threshold1, threshold2[, edges[, L2gradient]]", "ret": "edges"}], "cv::wrapperEMD": [{"name": "cv.EMD", "arg": "signature1, signature2, distType[, cost[, lowerBound[, flow]]]", "ret": "retval, lowerBound, flow"}], "cv::GaussianBlur": [{"name": "cv.GaussianBlur", "arg": "src, ksize, sigmaX[, dst[, sigmaY[, borderType]]]", "ret": "dst"}], "cv::HoughCircles": [{"name": "cv.HoughCircles", "arg": "image, method, dp, minDist[, circles[, param1[, param2[, minRadius[, maxRadius]]]]]", "ret": "circles"}], "cv::HoughLines": [{"name": "cv.HoughLines", "arg": "image, rho, theta, threshold[, lines[, srn[, stn[, min_theta[, max_theta]]]]]", "ret": "lines"}], "cv::HoughLinesP": [{"name": "cv.HoughLinesP", "arg": "image, rho, theta, threshold[, lines[, minLineLength[, maxLineGap]]]", "ret": "lines"}], "cv::HoughLinesPointSet": [{"name": "cv.HoughLinesPointSet", "arg": "_point, lines_max, threshold, min_rho, max_rho, rho_step, min_theta, max_theta, theta_step[, _lines]", "ret": "_lines"}], "cv::HuMoments": [{"name": "cv.HuMoments", "arg": "m[, hu]", "ret": "hu"}], "cv::LUT": [{"name": "cv.LUT", "arg": "src, lut[, dst]", "ret": "dst"}], "cv::Laplacian": [{"name": "cv.Laplacian", "arg": "src, ddepth[, dst[, ksize[, scale[, delta[, borderType]]]]]", "ret": "dst"}], "cv::Mahalanobis": [{"name": "cv.Mahalanobis", "arg": "v1, v2, icovar", "ret": "retval"}], "cv::PCABackProject": [{"name": "cv.PCABackProject", "arg": "data, mean, eigenvectors[, result]", "ret": "result"}], "cv::PCACompute": [{"name": "cv.PCACompute", "arg": "data, mean[, eigenvectors[, maxComponents]]", "ret": "mean, eigenvectors"}, {"name": "cv.PCACompute", "arg": "data, mean, retainedVariance[, eigenvectors]", "ret": "mean, eigenvectors"}, {"name": "cv.PCACompute2", "arg": "data, mean[, eigenvectors[, eigenvalues[, maxComponents]]]", "ret": "mean, eigenvectors, eigenvalues"}, {"name": "cv.PCACompute2", "arg": "data, mean, retainedVariance[, eigenvectors[, eigenvalues]]", "ret": "mean, eigenvectors, eigenvalues"}], "cv::PCAProject": [{"name": "cv.PCAProject", "arg": "data, mean, eigenvectors[, result]", "ret": "result"}], "cv::PSNR": [{"name": "cv.PSNR", "arg": "src1, src2[, R]", "ret": "retval"}], "cv::RQDecomp3x3": [{"name": "cv.RQDecomp3x3", "arg": "src[, mtxR[, mtxQ[, Qx[, Qy[, Qz]]]]]", "ret": "retval, mtxR, mtxQ, Qx, Qy, Qz"}], "cv::Rodrigues": [{"name": "cv.Rodrigues", "arg": "src[, dst[, jacobian]]", "ret": "dst, jacobian"}], "cv::SVBackSubst": [{"name": "cv.SVBackSubst", "arg": "w, u, vt, rhs[, dst]", "ret": "dst"}], "cv::SVDecomp": [{"name": "cv.SVDecomp", "arg": "src[, w[, u[, vt[, flags]]]]", "ret": "w, u, vt"}], "cv::Scharr": [{"name": "cv.Scharr", "arg": "src, ddepth, dx, dy[, dst[, scale[, delta[, borderType]]]]", "ret": "dst"}], "cv::Sobel": [{"name": "cv.Sobel", "arg": "src, ddepth, dx, dy[, dst[, ksize[, scale[, delta[, borderType]]]]]", "ret": "dst"}], "cv::absdiff": [{"name": "cv.absdiff", "arg": "src1, src2[, dst]", "ret": "dst"}], "cv::accumulate": [{"name": "cv.accumulate", "arg": "src, dst[, mask]", "ret": "dst"}], "cv::accumulateProduct": [{"name": "cv.accumulateProduct", "arg": "src1, src2, dst[, mask]", "ret": "dst"}], "cv::accumulateSquare": [{"name": "cv.accumulateSquare", "arg": "src, dst[, mask]", "ret": "dst"}], "cv::accumulateWeighted": [{"name": "cv.accumulateWeighted", "arg": "src, dst, alpha[, mask]", "ret": "dst"}], "cv::adaptiveThreshold": [{"name": "cv.adaptiveThreshold", "arg": "src, maxValue, adaptiveMethod, thresholdType, blockSize, C[, dst]", "ret": "dst"}], "cv::add": [{"name": "cv.add", "arg": "src1, src2[, dst[, mask[, dtype]]]", "ret": "dst"}], "cv::addText": [{"name": "cv.addText", "arg": "img, text, org, nameFont[, pointSize[, color[, weight[, style[, spacing]]]]]", "ret": "None"}], "cv::addWeighted": [{"name": "cv.addWeighted", "arg": "src1, alpha, src2, beta, gamma[, dst[, dtype]]", "ret": "dst"}], "cv::applyColorMap": [{"name": "cv.applyColorMap", "arg": "src, colormap[, dst]", "ret": "dst"}, {"name": "cv.applyColorMap", "arg": "src, userColor[, dst]", "ret": "dst"}], "cv::approxPolyDP": [{"name": "cv.approxPolyDP", "arg": "curve, epsilon, closed[, approxCurve]", "ret": "approxCurve"}], "cv::arcLength": [{"name": "cv.arcLength", "arg": "curve, closed", "ret": "retval"}], "cv::arrowedLine": [{"name": "cv.arrowedLine", "arg": "img, pt1, pt2, color[, thickness[, line_type[, shift[, tipLength]]]]", "ret": "img"}], "cv::batchDistance": [{"name": "cv.batchDistance", "arg": "src1, src2, dtype[, dist[, nidx[, normType[, K[, mask[, update[, crosscheck]]]]]]]", "ret": "dist, nidx"}], "cv::bilateralFilter": [{"name": "cv.bilateralFilter", "arg": "src, d, sigmaColor, sigmaSpace[, dst[, borderType]]", "ret": "dst"}], "cv::bitwise_and": [{"name": "cv.bitwise_and", "arg": "src1, src2[, dst[, mask]]", "ret": "dst"}], "cv::bitwise_not": [{"name": "cv.bitwise_not", "arg": "src[, dst[, mask]]", "ret": "dst"}], "cv::bitwise_or": [{"name": "cv.bitwise_or", "arg": "src1, src2[, dst[, mask]]", "ret": "dst"}], "cv::bitwise_xor": [{"name": "cv.bitwise_xor", "arg": "src1, src2[, dst[, mask]]", "ret": "dst"}], "cv::blur": [{"name": "cv.blur", "arg": "src, ksize[, dst[, anchor[, borderType]]]", "ret": "dst"}], "cv::borderInterpolate": [{"name": "cv.borderInterpolate", "arg": "p, len, borderType", "ret": "retval"}], "cv::boundingRect": [{"name": "cv.boundingRect", "arg": "array", "ret": "retval"}], "cv::boxFilter": [{"name": "cv.boxFilter", "arg": "src, ddepth, ksize[, dst[, anchor[, normalize[, borderType]]]]", "ret": "dst"}], "cv::boxPoints": [{"name": "cv.boxPoints", "arg": "box[, points]", "ret": "points"}], "cv::buildOpticalFlowPyramid": [{"name": "cv.buildOpticalFlowPyramid", "arg": "img, winSize, maxLevel[, pyramid[, withDerivatives[, pyrBorder[, derivBorder[, tryReuseInputImage]]]]]", "ret": "retval, pyramid"}], "cv::calcBackProject": [{"name": "cv.calcBackProject", "arg": "images, channels, hist, ranges, scale[, dst]", "ret": "dst"}], "cv::calcCovarMatrix": [{"name": "cv.calcCovarMatrix", "arg": "samples, mean, flags[, covar[, ctype]]", "ret": "covar, mean"}], "cv::calcHist": [{"name": "cv.calcHist", "arg": "images, channels, mask, histSize, ranges[, hist[, accumulate]]", "ret": "hist"}], "cv::calcOpticalFlowFarneback": [{"name": "cv.calcOpticalFlowFarneback", "arg": "prev, next, flow, pyr_scale, levels, winsize, iterations, poly_n, poly_sigma, flags", "ret": "flow"}], "cv::calcOpticalFlowPyrLK": [{"name": "cv.calcOpticalFlowPyrLK", "arg": "prevImg, nextImg, prevPts, nextPts[, status[, err[, winSize[, maxLevel[, criteria[, flags[, minEigThreshold]]]]]]]", "ret": "nextPts, status, err"}], "cv::calibrateCamera": [{"name": "cv.calibrateCamera", "arg": "objectPoints, imagePoints, imageSize, cameraMatrix, distCoeffs[, rvecs[, tvecs[, flags[, criteria]]]]", "ret": "retval, cameraMatrix, distCoeffs, rvecs, tvecs"}, {"name": "cv.calibrateCameraExtended", "arg": "objectPoints, imagePoints, imageSize, cameraMatrix, distCoeffs[, rvecs[, tvecs[, stdDeviationsIntrinsics[, stdDeviationsExtrinsics[, perViewErrors[, flags[, criteria]]]]]]]", "ret": "retval, cameraMatrix, distCoeffs, rvecs, tvecs, stdDeviationsIntrinsics, stdDeviationsExtrinsics, perViewErrors"}], "cv::calibrateCameraRO": [{"name": "cv.calibrateCameraRO", "arg": "objectPoints, imagePoints, imageSize, iFixedPoint, cameraMatrix, distCoeffs[, rvecs[, tvecs[, newObjPoints[, flags[, criteria]]]]]", "ret": "retval, cameraMatrix, distCoeffs, rvecs, tvecs, newObjPoints"}, {"name": "cv.calibrateCameraROExtended", "arg": "objectPoints, imagePoints, imageSize, iFixedPoint, cameraMatrix, distCoeffs[, rvecs[, tvecs[, newObjPoints[, stdDeviationsIntrinsics[, stdDeviationsExtrinsics[, stdDeviationsObjPoints[, perViewErrors[, flags[, criteria]]]]]]]]]", "ret": "retval, cameraMatrix, distCoeffs, rvecs, tvecs, newObjPoints, stdDeviationsIntrinsics, stdDeviationsExtrinsics, stdDeviationsObjPoints, perViewErrors"}], "cv::calibrateHandEye": [{"name": "cv.calibrateHandEye", "arg": "R_gripper2base, t_gripper2base, R_target2cam, t_target2cam[, R_cam2gripper[, t_cam2gripper[, method]]]", "ret": "R_cam2gripper, t_cam2gripper"}], "cv::calibrateRobotWorldHandEye": [{"name": "cv.calibrateRobotWorldHandEye", "arg": "R_world2cam, t_world2cam, R_base2gripper, t_base2gripper[, R_base2world[, t_base2world[, R_gripper2cam[, t_gripper2cam[, method]]]]]", "ret": "R_base2world, t_base2world, R_gripper2cam, t_gripper2cam"}], "cv::calibrationMatrixValues": [{"name": "cv.calibrationMatrixValues", "arg": "cameraMatrix, imageSize, apertureWidth, apertureHeight", "ret": "fovx, fovy, focalLength, principalPoint, aspectRatio"}], "cv::cartToPolar": [{"name": "cv.cartToPolar", "arg": "x, y[, magnitude[, angle[, angleInDegrees]]]", "ret": "magnitude, angle"}], "cv::checkChessboard": [{"name": "cv.checkChessboard", "arg": "img, size", "ret": "retval"}], "cv::checkHardwareSupport": [{"name": "cv.checkHardwareSupport", "arg": "feature", "ret": "retval"}], "cv::checkRange": [{"name": "cv.checkRange", "arg": "a[, quiet[, minVal[, maxVal]]]", "ret": "retval, pos"}], "cv::circle": [{"name": "cv.circle", "arg": "img, center, radius, color[, thickness[, lineType[, shift]]]", "ret": "img"}], "cv::clipLine": [{"name": "cv.clipLine", "arg": "imgRect, pt1, pt2", "ret": "retval, pt1, pt2"}], "cv::colorChange": [{"name": "cv.colorChange", "arg": "src, mask[, dst[, red_mul[, green_mul[, blue_mul]]]]", "ret": "dst"}], "cv::compare": [{"name": "cv.compare", "arg": "src1, src2, cmpop[, dst]", "ret": "dst"}], "cv::compareHist": [{"name": "cv.compareHist", "arg": "H1, H2, method", "ret": "retval"}], "cv::completeSymm": [{"name": "cv.completeSymm", "arg": "m[, lowerToUpper]", "ret": "m"}], "cv::composeRT": [{"name": "cv.composeRT", "arg": "rvec1, tvec1, rvec2, tvec2[, rvec3[, tvec3[, dr3dr1[, dr3dt1[, dr3dr2[, dr3dt2[, dt3dr1[, dt3dt1[, dt3dr2[, dt3dt2]]]]]]]]]]", "ret": "rvec3, tvec3, dr3dr1, dr3dt1, dr3dr2, dr3dt2, dt3dr1, dt3dt1, dt3dr2, dt3dt2"}], "cv::computeCorrespondEpilines": [{"name": "cv.computeCorrespondEpilines", "arg": "points, whichImage, F[, lines]", "ret": "lines"}], "cv::computeECC": [{"name": "cv.computeECC", "arg": "templateImage, inputImage[, inputMask]", "ret": "retval"}], "cv::connectedComponents": [{"name": "cv.connectedComponents", "arg": "image[, labels[, connectivity[, ltype]]]", "ret": "retval, labels"}, {"name": "cv.connectedComponentsWithAlgorithm", "arg": "image, connectivity, ltype, ccltype[, labels]", "ret": "retval, labels"}], "cv::connectedComponentsWithStats": [{"name": "cv.connectedComponentsWithStats", "arg": "image[, labels[, stats[, centroids[, connectivity[, ltype]]]]]", "ret": "retval, labels, stats, centroids"}, {"name": "cv.connectedComponentsWithStatsWithAlgorithm", "arg": "image, connectivity, ltype, ccltype[, labels[, stats[, centroids]]]", "ret": "retval, labels, stats, centroids"}], "cv::contourArea": [{"name": "cv.contourArea", "arg": "contour[, oriented]", "ret": "retval"}], "cv::convertFp16": [{"name": "cv.convertFp16", "arg": "src[, dst]", "ret": "dst"}], "cv::convertMaps": [{"name": "cv.convertMaps", "arg": "map1, map2, dstmap1type[, dstmap1[, dstmap2[, nninterpolation]]]", "ret": "dstmap1, dstmap2"}], "cv::convertPointsFromHomogeneous": [{"name": "cv.convertPointsFromHomogeneous", "arg": "src[, dst]", "ret": "dst"}], "cv::convertPointsToHomogeneous": [{"name": "cv.convertPointsToHomogeneous", "arg": "src[, dst]", "ret": "dst"}], "cv::convertScaleAbs": [{"name": "cv.convertScaleAbs", "arg": "src[, dst[, alpha[, beta]]]", "ret": "dst"}], "cv::convexHull": [{"name": "cv.convexHull", "arg": "points[, hull[, clockwise[, returnPoints]]]", "ret": "hull"}], "cv::convexityDefects": [{"name": "cv.convexityDefects", "arg": "contour, convexhull[, convexityDefects]", "ret": "convexityDefects"}], "cv::copyMakeBorder": [{"name": "cv.copyMakeBorder", "arg": "src, top, bottom, left, right, borderType[, dst[, value]]", "ret": "dst"}], "cv::copyTo": [{"name": "cv.copyTo", "arg": "src, mask[, dst]", "ret": "dst"}], "cv::cornerEigenValsAndVecs": [{"name": "cv.cornerEigenValsAndVecs", "arg": "src, blockSize, ksize[, dst[, borderType]]", "ret": "dst"}], "cv::cornerHarris": [{"name": "cv.cornerHarris", "arg": "src, blockSize, ksize, k[, dst[, borderType]]", "ret": "dst"}], "cv::cornerMinEigenVal": [{"name": "cv.cornerMinEigenVal", "arg": "src, blockSize[, dst[, ksize[, borderType]]]", "ret": "dst"}], "cv::cornerSubPix": [{"name": "cv.cornerSubPix", "arg": "image, corners, winSize, zeroZone, criteria", "ret": "corners"}], "cv::correctMatches": [{"name": "cv.correctMatches", "arg": "F, points1, points2[, newPoints1[, newPoints2]]", "ret": "newPoints1, newPoints2"}], "cv::countNonZero": [{"name": "cv.countNonZero", "arg": "src", "ret": "retval"}], "cv::createAffineTransformer": [{"name": "cv.createAffineTransformer", "arg": "fullAffine", "ret": "retval"}], "cv::createAlignMTB": [{"name": "cv.createAlignMTB", "arg": "[, max_bits[, exclude_range[, cut]]]", "ret": "retval"}], "cv::createBackgroundSubtractorKNN": [{"name": "cv.createBackgroundSubtractorKNN", "arg": "[, history[, dist2Threshold[, detectShadows]]]", "ret": "retval"}], "cv::createBackgroundSubtractorMOG2": [{"name": "cv.createBackgroundSubtractorMOG2", "arg": "[, history[, varThreshold[, detectShadows]]]", "ret": "retval"}], "cv::createCLAHE": [{"name": "cv.createCLAHE", "arg": "[, clipLimit[, tileGridSize]]", "ret": "retval"}], "cv::createCalibrateDebevec": [{"name": "cv.createCalibrateDebevec", "arg": "[, samples[, lambda[, random]]]", "ret": "retval"}], "cv::createCalibrateRobertson": [{"name": "cv.createCalibrateRobertson", "arg": "[, max_iter[, threshold]]", "ret": "retval"}], "cv::createChiHistogramCostExtractor": [{"name": "cv.createChiHistogramCostExtractor", "arg": "[, nDummies[, defaultCost]]", "ret": "retval"}], "cv::createEMDHistogramCostExtractor": [{"name": "cv.createEMDHistogramCostExtractor", "arg": "[, flag[, nDummies[, defaultCost]]]", "ret": "retval"}], "cv::createEMDL1HistogramCostExtractor": [{"name": "cv.createEMDL1HistogramCostExtractor", "arg": "[, nDummies[, defaultCost]]", "ret": "retval"}], "cv::createGeneralizedHoughBallard": [{"name": "cv.createGeneralizedHoughBallard", "arg": "", "ret": "retval"}], "cv::createGeneralizedHoughGuil": [{"name": "cv.createGeneralizedHoughGuil", "arg": "", "ret": "retval"}], "cv::createHanningWindow": [{"name": "cv.createHanningWindow", "arg": "winSize, type[, dst]", "ret": "dst"}], "cv::createHausdorffDistanceExtractor": [{"name": "cv.createHausdorffDistanceExtractor", "arg": "[, distanceFlag[, rankProp]]", "ret": "retval"}], "cv::createLineSegmentDetector": [{"name": "cv.createLineSegmentDetector", "arg": "[, _refine[, _scale[, _sigma_scale[, _quant[, _ang_th[, _log_eps[, _density_th[, _n_bins]]]]]]]]", "ret": "retval"}], "cv::createMergeDebevec": [{"name": "cv.createMergeDebevec", "arg": "", "ret": "retval"}], "cv::createMergeMertens": [{"name": "cv.createMergeMertens", "arg": "[, contrast_weight[, saturation_weight[, exposure_weight]]]", "ret": "retval"}], "cv::createMergeRobertson": [{"name": "cv.createMergeRobertson", "arg": "", "ret": "retval"}], "cv::createNormHistogramCostExtractor": [{"name": "cv.createNormHistogramCostExtractor", "arg": "[, flag[, nDummies[, defaultCost]]]", "ret": "retval"}], "cv::createShapeContextDistanceExtractor": [{"name": "cv.createShapeContextDistanceExtractor", "arg": "[, nAngularBins[, nRadialBins[, innerRadius[, outerRadius[, iterations[, comparer[, transformer]]]]]]]", "ret": "retval"}], "cv::createThinPlateSplineShapeTransformer": [{"name": "cv.createThinPlateSplineShapeTransformer", "arg": "[, regularizationParameter]", "ret": "retval"}], "cv::createTonemap": [{"name": "cv.createTonemap", "arg": "[, gamma]", "ret": "retval"}], "cv::createTonemapDrago": [{"name": "cv.createTonemapDrago", "arg": "[, gamma[, saturation[, bias]]]", "ret": "retval"}], "cv::createTonemapMantiuk": [{"name": "cv.createTonemapMantiuk", "arg": "[, gamma[, scale[, saturation]]]", "ret": "retval"}], "cv::createTonemapReinhard": [{"name": "cv.createTonemapReinhard", "arg": "[, gamma[, intensity[, light_adapt[, color_adapt]]]]", "ret": "retval"}], "cv::cubeRoot": [{"name": "cv.cubeRoot", "arg": "val", "ret": "retval"}], "cv::cvtColor": [{"name": "cv.cvtColor", "arg": "src, code[, dst[, dstCn]]", "ret": "dst"}], "cv::cvtColorTwoPlane": [{"name": "cv.cvtColorTwoPlane", "arg": "src1, src2, code[, dst]", "ret": "dst"}], "cv::dct": [{"name": "cv.dct", "arg": "src[, dst[, flags]]", "ret": "dst"}], "cv::decolor": [{"name": "cv.decolor", "arg": "src[, grayscale[, color_boost]]", "ret": "grayscale, color_boost"}], "cv::decomposeEssentialMat": [{"name": "cv.decomposeEssentialMat", "arg": "E[, R1[, R2[, t]]]", "ret": "R1, R2, t"}], "cv::decomposeHomographyMat": [{"name": "cv.decomposeHomographyMat", "arg": "H, K[, rotations[, translations[, normals]]]", "ret": "retval, rotations, translations, normals"}], "cv::decomposeProjectionMatrix": [{"name": "cv.decomposeProjectionMatrix", "arg": "projMatrix[, cameraMatrix[, rotMatrix[, transVect[, rotMatrixX[, rotMatrixY[, rotMatrixZ[, eulerAngles]]]]]]]", "ret": "cameraMatrix, rotMatrix, transVect, rotMatrixX, rotMatrixY, rotMatrixZ, eulerAngles"}], "cv::demosaicing": [{"name": "cv.demosaicing", "arg": "src, code[, dst[, dstCn]]", "ret": "dst"}], "cv::denoise_TVL1": [{"name": "cv.denoise_TVL1", "arg": "observations, result[, lambda[, niters]]", "ret": "None"}], "cv::destroyAllWindows": [{"name": "cv.destroyAllWindows", "arg": "", "ret": "None"}], "cv::destroyWindow": [{"name": "cv.destroyWindow", "arg": "winname", "ret": "None"}], "cv::detailEnhance": [{"name": "cv.detailEnhance", "arg": "src[, dst[, sigma_s[, sigma_r]]]", "ret": "dst"}], "cv::determinant": [{"name": "cv.determinant", "arg": "mtx", "ret": "retval"}], "cv::dft": [{"name": "cv.dft", "arg": "src[, dst[, flags[, nonzeroRows]]]", "ret": "dst"}], "cv::dilate": [{"name": "cv.dilate", "arg": "src, kernel[, dst[, anchor[, iterations[, borderType[, borderValue]]]]]", "ret": "dst"}], "cv::displayOverlay": [{"name": "cv.displayOverlay", "arg": "winname, text[, delayms]", "ret": "None"}], "cv::displayStatusBar": [{"name": "cv.displayStatusBar", "arg": "winname, text[, delayms]", "ret": "None"}], "cv::distanceTransform": [{"name": "cv.distanceTransform", "arg": "src, distanceType, maskSize[, dst[, dstType]]", "ret": "dst"}, {"name": "cv.distanceTransformWithLabels", "arg": "src, distanceType, maskSize[, dst[, labels[, labelType]]]", "ret": "dst, labels"}], "cv::divide": [{"name": "cv.divide", "arg": "src1, src2[, dst[, scale[, dtype]]]", "ret": "dst"}, {"name": "cv.divide", "arg": "scale, src2[, dst[, dtype]]", "ret": "dst"}], "cv::drawChessboardCorners": [{"name": "cv.drawChessboardCorners", "arg": "image, patternSize, corners, patternWasFound", "ret": "image"}], "cv::drawContours": [{"name": "cv.drawContours", "arg": "image, contours, contourIdx, color[, thickness[, lineType[, hierarchy[, maxLevel[, offset]]]]]", "ret": "image"}], "cv::drawFrameAxes": [{"name": "cv.drawFrameAxes", "arg": "image, cameraMatrix, distCoeffs, rvec, tvec, length[, thickness]", "ret": "image"}], "cv::drawKeypoints": [{"name": "cv.drawKeypoints", "arg": "image, keypoints, outImage[, color[, flags]]", "ret": "outImage"}], "cv::drawMarker": [{"name": "cv.drawMarker", "arg": "img, position, color[, markerType[, markerSize[, thickness[, line_type]]]]", "ret": "img"}], "cv::drawMatches": [{"name": "cv.drawMatches", "arg": "img1, keypoints1, img2, keypoints2, matches1to2, outImg[, matchColor[, singlePointColor[, matchesMask[, flags]]]]", "ret": "outImg"}, {"name": "cv.drawMatchesKnn", "arg": "img1, keypoints1, img2, keypoints2, matches1to2, outImg[, matchColor[, singlePointColor[, matchesMask[, flags]]]]", "ret": "outImg"}], "cv::edgePreservingFilter": [{"name": "cv.edgePreservingFilter", "arg": "src[, dst[, flags[, sigma_s[, sigma_r]]]]", "ret": "dst"}], "cv::eigen": [{"name": "cv.eigen", "arg": "src[, eigenvalues[, eigenvectors]]", "ret": "retval, eigenvalues, eigenvectors"}], "cv::eigenNonSymmetric": [{"name": "cv.eigenNonSymmetric", "arg": "src[, eigenvalues[, eigenvectors]]", "ret": "eigenvalues, eigenvectors"}], "cv::ellipse": [{"name": "cv.ellipse", "arg": "img, center, axes, angle, startAngle, endAngle, color[, thickness[, lineType[, shift]]]", "ret": "img"}, {"name": "cv.ellipse", "arg": "img, box, color[, thickness[, lineType]]", "ret": "img"}], "cv::ellipse2Poly": [{"name": "cv.ellipse2Poly", "arg": "center, axes, angle, arcStart, arcEnd, delta", "ret": "pts"}], "cv::equalizeHist": [{"name": "cv.equalizeHist", "arg": "src[, dst]", "ret": "dst"}], "cv::erode": [{"name": "cv.erode", "arg": "src, kernel[, dst[, anchor[, iterations[, borderType[, borderValue]]]]]", "ret": "dst"}], "cv::estimateAffine2D": [{"name": "cv.estimateAffine2D", "arg": "from, to[, inliers[, method[, ransacReprojThreshold[, maxIters[, confidence[, refineIters]]]]]]", "ret": "retval, inliers"}, {"name": "cv.estimateAffine2D", "arg": "pts1, pts2, params[, inliers]", "ret": "retval, inliers"}], "cv::estimateAffine3D": [{"name": "cv.estimateAffine3D", "arg": "src, dst[, out[, inliers[, ransacThreshold[, confidence]]]]", "ret": "retval, out, inliers"}], "cv::estimateAffinePartial2D": [{"name": "cv.estimateAffinePartial2D", "arg": "from, to[, inliers[, method[, ransacReprojThreshold[, maxIters[, confidence[, refineIters]]]]]]", "ret": "retval, inliers"}], "cv::estimateChessboardSharpness": [{"name": "cv.estimateChessboardSharpness", "arg": "image, patternSize, corners[, rise_distance[, vertical[, sharpness]]]", "ret": "retval, sharpness"}], "cv::estimateTranslation3D": [{"name": "cv.estimateTranslation3D", "arg": "src, dst[, out[, inliers[, ransacThreshold[, confidence]]]]", "ret": "retval, out, inliers"}], "cv::exp": [{"name": "cv.exp", "arg": "src[, dst]", "ret": "dst"}], "cv::extractChannel": [{"name": "cv.extractChannel", "arg": "src, coi[, dst]", "ret": "dst"}], "cv::fastAtan2": [{"name": "cv.fastAtan2", "arg": "y, x", "ret": "retval"}], "cv::fastNlMeansDenoising": [{"name": "cv.fastNlMeansDenoising", "arg": "src[, dst[, h[, templateWindowSize[, searchWindowSize]]]]", "ret": "dst"}, {"name": "cv.fastNlMeansDenoising", "arg": "src, h[, dst[, templateWindowSize[, searchWindowSize[, normType]]]]", "ret": "dst"}], "cv::fastNlMeansDenoisingColored": [{"name": "cv.fastNlMeansDenoisingColored", "arg": "src[, dst[, h[, hColor[, templateWindowSize[, searchWindowSize]]]]]", "ret": "dst"}], "cv::fastNlMeansDenoisingColoredMulti": [{"name": "cv.fastNlMeansDenoisingColoredMulti", "arg": "srcImgs, imgToDenoiseIndex, temporalWindowSize[, dst[, h[, hColor[, templateWindowSize[, searchWindowSize]]]]]", "ret": "dst"}], "cv::fastNlMeansDenoisingMulti": [{"name": "cv.fastNlMeansDenoisingMulti", "arg": "srcImgs, imgToDenoiseIndex, temporalWindowSize[, dst[, h[, templateWindowSize[, searchWindowSize]]]]", "ret": "dst"}, {"name": "cv.fastNlMeansDenoisingMulti", "arg": "srcImgs, imgToDenoiseIndex, temporalWindowSize, h[, dst[, templateWindowSize[, searchWindowSize[, normType]]]]", "ret": "dst"}], "cv::fillConvexPoly": [{"name": "cv.fillConvexPoly", "arg": "img, points, color[, lineType[, shift]]", "ret": "img"}], "cv::fillPoly": [{"name": "cv.fillPoly", "arg": "img, pts, color[, lineType[, shift[, offset]]]", "ret": "img"}], "cv::filter2D": [{"name": "cv.filter2D", "arg": "src, ddepth, kernel[, dst[, anchor[, delta[, borderType]]]]", "ret": "dst"}], "cv::filterHomographyDecompByVisibleRefpoints": [{"name": "cv.filterHomographyDecompByVisibleRefpoints", "arg": "rotations, normals, beforePoints, afterPoints[, possibleSolutions[, pointsMask]]", "ret": "possibleSolutions"}], "cv::filterSpeckles": [{"name": "cv.filterSpeckles", "arg": "img, newVal, maxSpeckleSize, maxDiff[, buf]", "ret": "img, buf"}], "cv::find4QuadCornerSubpix": [{"name": "cv.find4QuadCornerSubpix", "arg": "img, corners, region_size", "ret": "retval, corners"}], "cv::findChessboardCorners": [{"name": "cv.findChessboardCorners", "arg": "image, patternSize[, corners[, flags]]", "ret": "retval, corners"}], "cv::findChessboardCornersSB": [{"name": "cv.findChessboardCornersSB", "arg": "image, patternSize[, corners[, flags]]", "ret": "retval, corners"}, {"name": "cv.findChessboardCornersSBWithMeta", "arg": "image, patternSize, flags[, corners[, meta]]", "ret": "retval, corners, meta"}], "cv::findCirclesGrid": [{"name": "cv.findCirclesGrid", "arg": "image, patternSize, flags, blobDetector, parameters[, centers]", "ret": "retval, centers"}, {"name": "cv.findCirclesGrid", "arg": "image, patternSize[, centers[, flags[, blobDetector]]]", "ret": "retval, centers"}], "cv::findContours": [{"name": "cv.findContours", "arg": "image, mode, method[, contours[, hierarchy[, offset]]]", "ret": "contours, hierarchy"}], "cv::findEssentialMat": [{"name": "cv.findEssentialMat", "arg": "points1, points2, cameraMatrix[, method[, prob[, threshold[, mask]]]]", "ret": "retval, mask"}, {"name": "cv.findEssentialMat", "arg": "points1, points2[, focal[, pp[, method[, prob[, threshold[, mask]]]]]]", "ret": "retval, mask"}, {"name": "cv.findEssentialMat", "arg": "points1, points2, cameraMatrix1, distCoeffs1, cameraMatrix2, distCoeffs2[, method[, prob[, threshold[, mask]]]]", "ret": "retval, mask"}, {"name": "cv.findEssentialMat", "arg": "points1, points2, cameraMatrix1, cameraMatrix2, dist_coeff1, dist_coeff2, params[, mask]", "ret": "retval, mask"}], "cv::findFundamentalMat": [{"name": "cv.findFundamentalMat", "arg": "points1, points2, method, ransacReprojThreshold, confidence, maxIters[, mask]", "ret": "retval, mask"}, {"name": "cv.findFundamentalMat", "arg": "points1, points2[, method[, ransacReprojThreshold[, confidence[, mask]]]]", "ret": "retval, mask"}, {"name": "cv.findFundamentalMat", "arg": "points1, points2, params[, mask]", "ret": "retval, mask"}], "cv::findHomography": [{"name": "cv.findHomography", "arg": "srcPoints, dstPoints[, method[, ransacReprojThreshold[, mask[, maxIters[, confidence]]]]]", "ret": "retval, mask"}, {"name": "cv.findHomography", "arg": "srcPoints, dstPoints, params[, mask]", "ret": "retval, mask"}], "cv::findNonZero": [{"name": "cv.findNonZero", "arg": "src[, idx]", "ret": "idx"}], "cv::findTransformECC": [{"name": "cv.findTransformECC", "arg": "templateImage, inputImage, warpMatrix, motionType, criteria, inputMask, gaussFiltSize", "ret": "retval, warpMatrix"}], "cv::fitEllipse": [{"name": "cv.fitEllipse", "arg": "points", "ret": "retval"}], "cv::fitEllipseAMS": [{"name": "cv.fitEllipseAMS", "arg": "points", "ret": "retval"}], "cv::fitEllipseDirect": [{"name": "cv.fitEllipseDirect", "arg": "points", "ret": "retval"}], "cv::fitLine": [{"name": "cv.fitLine", "arg": "points, distType, param, reps, aeps[, line]", "ret": "line"}], "cv::flip": [{"name": "cv.flip", "arg": "src, flipCode[, dst]", "ret": "dst"}], "cv::floodFill": [{"name": "cv.floodFill", "arg": "image, mask, seedPoint, newVal[, loDiff[, upDiff[, flags]]]", "ret": "retval, image, mask, rect"}], "cv::gemm": [{"name": "cv.gemm", "arg": "src1, src2, alpha, src3, beta[, dst[, flags]]", "ret": "dst"}], "cv::getAffineTransform": [{"name": "cv.getAffineTransform", "arg": "src, dst", "ret": "retval"}], "cv::getBuildInformation": [{"name": "cv.getBuildInformation", "arg": "", "ret": "retval"}], "cv::getCPUFeaturesLine": [{"name": "cv.getCPUFeaturesLine", "arg": "", "ret": "retval"}], "cv::getCPUTickCount": [{"name": "cv.getCPUTickCount", "arg": "", "ret": "retval"}], "cv::getDefaultNewCameraMatrix": [{"name": "cv.getDefaultNewCameraMatrix", "arg": "cameraMatrix[, imgsize[, centerPrincipalPoint]]", "ret": "retval"}], "cv::getDerivKernels": [{"name": "cv.getDerivKernels", "arg": "dx, dy, ksize[, kx[, ky[, normalize[, ktype]]]]", "ret": "kx, ky"}], "cv::getFontScaleFromHeight": [{"name": "cv.getFontScaleFromHeight", "arg": "fontFace, pixelHeight[, thickness]", "ret": "retval"}], "cv::getGaborKernel": [{"name": "cv.getGaborKernel", "arg": "ksize, sigma, theta, lambd, gamma[, psi[, ktype]]", "ret": "retval"}], "cv::getGaussianKernel": [{"name": "cv.getGaussianKernel", "arg": "ksize, sigma[, ktype]", "ret": "retval"}], "cv::getHardwareFeatureName": [{"name": "cv.getHardwareFeatureName", "arg": "feature", "ret": "retval"}], "cv::getNumThreads": [{"name": "cv.getNumThreads", "arg": "", "ret": "retval"}], "cv::getNumberOfCPUs": [{"name": "cv.getNumberOfCPUs", "arg": "", "ret": "retval"}], "cv::getOptimalDFTSize": [{"name": "cv.getOptimalDFTSize", "arg": "vecsize", "ret": "retval"}], "cv::getOptimalNewCameraMatrix": [{"name": "cv.getOptimalNewCameraMatrix", "arg": "cameraMatrix, distCoeffs, imageSize, alpha[, newImgSize[, centerPrincipalPoint]]", "ret": "retval, validPixROI"}], "cv::getPerspectiveTransform": [{"name": "cv.getPerspectiveTransform", "arg": "src, dst[, solveMethod]", "ret": "retval"}], "cv::getRectSubPix": [{"name": "cv.getRectSubPix", "arg": "image, patchSize, center[, patch[, patchType]]", "ret": "patch"}], "cv::getRotationMatrix2D": [{"name": "cv.getRotationMatrix2D", "arg": "center, angle, scale", "ret": "retval"}], "cv::getStructuringElement": [{"name": "cv.getStructuringElement", "arg": "shape, ksize[, anchor]", "ret": "retval"}], "cv::getTextSize": [{"name": "cv.getTextSize", "arg": "text, fontFace, fontScale, thickness", "ret": "retval, baseLine"}], "cv::getThreadNum": [{"name": "cv.getThreadNum", "arg": "", "ret": "retval"}], "cv::getTickCount": [{"name": "cv.getTickCount", "arg": "", "ret": "retval"}], "cv::getTickFrequency": [{"name": "cv.getTickFrequency", "arg": "", "ret": "retval"}], "cv::getTrackbarPos": [{"name": "cv.getTrackbarPos", "arg": "trackbarname, winname", "ret": "retval"}], "cv::getValidDisparityROI": [{"name": "cv.getValidDisparityROI", "arg": "roi1, roi2, minDisparity, numberOfDisparities, blockSize", "ret": "retval"}], "cv::getVersionMajor": [{"name": "cv.getVersionMajor", "arg": "", "ret": "retval"}], "cv::getVersionMinor": [{"name": "cv.getVersionMinor", "arg": "", "ret": "retval"}], "cv::getVersionRevision": [{"name": "cv.getVersionRevision", "arg": "", "ret": "retval"}], "cv::getVersionString": [{"name": "cv.getVersionString", "arg": "", "ret": "retval"}], "cv::getWindowImageRect": [{"name": "cv.getWindowImageRect", "arg": "winname", "ret": "retval"}], "cv::getWindowProperty": [{"name": "cv.getWindowProperty", "arg": "winname, prop_id", "ret": "retval"}], "cv::goodFeaturesToTrack": [{"name": "cv.goodFeaturesToTrack", "arg": "image, maxCorners, qualityLevel, minDistance[, corners[, mask[, blockSize[, useHarrisDetector[, k]]]]]", "ret": "corners"}, {"name": "cv.goodFeaturesToTrack", "arg": "image, maxCorners, qualityLevel, minDistance, mask, blockSize, gradientSize[, corners[, useHarrisDetector[, k]]]", "ret": "corners"}], "cv::grabCut": [{"name": "cv.grabCut", "arg": "img, mask, rect, bgdModel, fgdModel, iterCount[, mode]", "ret": "mask, bgdModel, fgdModel"}], "cv::groupRectangles": [{"name": "cv.groupRectangles", "arg": "rectList, groupThreshold[, eps]", "ret": "rectList, weights"}], "cv::haveImageReader": [{"name": "cv.haveImageReader", "arg": "filename", "ret": "retval"}], "cv::haveImageWriter": [{"name": "cv.haveImageWriter", "arg": "filename", "ret": "retval"}], "cv::haveOpenVX": [{"name": "cv.haveOpenVX", "arg": "", "ret": "retval"}], "cv::hconcat": [{"name": "cv.hconcat", "arg": "src[, dst]", "ret": "dst"}], "cv::idct": [{"name": "cv.idct", "arg": "src[, dst[, flags]]", "ret": "dst"}], "cv::idft": [{"name": "cv.idft", "arg": "src[, dst[, flags[, nonzeroRows]]]", "ret": "dst"}], "cv::illuminationChange": [{"name": "cv.illuminationChange", "arg": "src, mask[, dst[, alpha[, beta]]]", "ret": "dst"}], "cv::imdecode": [{"name": "cv.imdecode", "arg": "buf, flags", "ret": "retval"}], "cv::imencode": [{"name": "cv.imencode", "arg": "ext, img[, params]", "ret": "retval, buf"}], "cv::imread": [{"name": "cv.imread", "arg": "filename[, flags]", "ret": "retval"}], "cv::imreadmulti": [{"name": "cv.imreadmulti", "arg": "filename[, mats[, flags]]", "ret": "retval, mats"}], "cv::imshow": [{"name": "cv.imshow", "arg": "winname, mat", "ret": "None"}], "cv::imwrite": [{"name": "cv.imwrite", "arg": "filename, img[, params]", "ret": "retval"}], "cv::inRange": [{"name": "cv.inRange", "arg": "src, lowerb, upperb[, dst]", "ret": "dst"}], "cv::initCameraMatrix2D": [{"name": "cv.initCameraMatrix2D", "arg": "objectPoints, imagePoints, imageSize[, aspectRatio]", "ret": "retval"}], "cv::initUndistortRectifyMap": [{"name": "cv.initUndistortRectifyMap", "arg": "cameraMatrix, distCoeffs, R, newCameraMatrix, size, m1type[, map1[, map2]]", "ret": "map1, map2"}], "cv::inpaint": [{"name": "cv.inpaint", "arg": "src, inpaintMask, inpaintRadius, flags[, dst]", "ret": "dst"}], "cv::insertChannel": [{"name": "cv.insertChannel", "arg": "src, dst, coi", "ret": "dst"}], "cv::integral": [{"name": "cv.integral", "arg": "src[, sum[, sdepth]]", "ret": "sum"}, {"name": "cv.integral2", "arg": "src[, sum[, sqsum[, sdepth[, sqdepth]]]]", "ret": "sum, sqsum"}, {"name": "cv.integral3", "arg": "src[, sum[, sqsum[, tilted[, sdepth[, sqdepth]]]]]", "ret": "sum, sqsum, tilted"}], "cv::intersectConvexConvex": [{"name": "cv.intersectConvexConvex", "arg": "_p1, _p2[, _p12[, handleNested]]", "ret": "retval, _p12"}], "cv::invert": [{"name": "cv.invert", "arg": "src[, dst[, flags]]", "ret": "retval, dst"}], "cv::invertAffineTransform": [{"name": "cv.invertAffineTransform", "arg": "M[, iM]", "ret": "iM"}], "cv::isContourConvex": [{"name": "cv.isContourConvex", "arg": "contour", "ret": "retval"}], "cv::kmeans": [{"name": "cv.kmeans", "arg": "data, K, bestLabels, criteria, attempts, flags[, centers]", "ret": "retval, bestLabels, centers"}], "cv::line": [{"name": "cv.line", "arg": "img, pt1, pt2, color[, thickness[, lineType[, shift]]]", "ret": "img"}], "cv::linearPolar": [{"name": "cv.linearPolar", "arg": "src, center, maxRadius, flags[, dst]", "ret": "dst"}], "cv::log": [{"name": "cv.log", "arg": "src[, dst]", "ret": "dst"}], "cv::logPolar": [{"name": "cv.logPolar", "arg": "src, center, M, flags[, dst]", "ret": "dst"}], "cv::magnitude": [{"name": "cv.magnitude", "arg": "x, y[, magnitude]", "ret": "magnitude"}], "cv::matMulDeriv": [{"name": "cv.matMulDeriv", "arg": "A, B[, dABdA[, dABdB]]", "ret": "dABdA, dABdB"}], "cv::matchShapes": [{"name": "cv.matchShapes", "arg": "contour1, contour2, method, parameter", "ret": "retval"}], "cv::matchTemplate": [{"name": "cv.matchTemplate", "arg": "image, templ, method[, result[, mask]]", "ret": "result"}], "cv::max": [{"name": "cv.max", "arg": "src1, src2[, dst]", "ret": "dst"}], "cv::mean": [{"name": "cv.mean", "arg": "src[, mask]", "ret": "retval"}], "cv::meanShift": [{"name": "cv.meanShift", "arg": "probImage, window, criteria", "ret": "retval, window"}], "cv::meanStdDev": [{"name": "cv.meanStdDev", "arg": "src[, mean[, stddev[, mask]]]", "ret": "mean, stddev"}], "cv::medianBlur": [{"name": "cv.medianBlur", "arg": "src, ksize[, dst]", "ret": "dst"}], "cv::merge": [{"name": "cv.merge", "arg": "mv[, dst]", "ret": "dst"}], "cv::min": [{"name": "cv.min", "arg": "src1, src2[, dst]", "ret": "dst"}], "cv::minAreaRect": [{"name": "cv.minAreaRect", "arg": "points", "ret": "retval"}], "cv::minEnclosingCircle": [{"name": "cv.minEnclosingCircle", "arg": "points", "ret": "center, radius"}], "cv::minEnclosingTriangle": [{"name": "cv.minEnclosingTriangle", "arg": "points[, triangle]", "ret": "retval, triangle"}], "cv::minMaxLoc": [{"name": "cv.minMaxLoc", "arg": "src[, mask]", "ret": "minVal, maxVal, minLoc, maxLoc"}], "cv::mixChannels": [{"name": "cv.mixChannels", "arg": "src, dst, fromTo", "ret": "dst"}], "cv::moments": [{"name": "cv.moments", "arg": "array[, binaryImage]", "ret": "retval"}], "cv::morphologyEx": [{"name": "cv.morphologyEx", "arg": "src, op, kernel[, dst[, anchor[, iterations[, borderType[, borderValue]]]]]", "ret": "dst"}], "cv::moveWindow": [{"name": "cv.moveWindow", "arg": "winname, x, y", "ret": "None"}], "cv::mulSpectrums": [{"name": "cv.mulSpectrums", "arg": "a, b, flags[, c[, conjB]]", "ret": "c"}], "cv::mulTransposed": [{"name": "cv.mulTransposed", "arg": "src, aTa[, dst[, delta[, scale[, dtype]]]]", "ret": "dst"}], "cv::multiply": [{"name": "cv.multiply", "arg": "src1, src2[, dst[, scale[, dtype]]]", "ret": "dst"}], "cv::namedWindow": [{"name": "cv.namedWindow", "arg": "winname[, flags]", "ret": "None"}], "cv::norm": [{"name": "cv.norm", "arg": "src1[, normType[, mask]]", "ret": "retval"}, {"name": "cv.norm", "arg": "src1, src2[, normType[, mask]]", "ret": "retval"}], "cv::normalize": [{"name": "cv.normalize", "arg": "src, dst[, alpha[, beta[, norm_type[, dtype[, mask]]]]]", "ret": "dst"}], "cv::patchNaNs": [{"name": "cv.patchNaNs", "arg": "a[, val]", "ret": "a"}], "cv::pencilSketch": [{"name": "cv.pencilSketch", "arg": "src[, dst1[, dst2[, sigma_s[, sigma_r[, shade_factor]]]]]", "ret": "dst1, dst2"}], "cv::perspectiveTransform": [{"name": "cv.perspectiveTransform", "arg": "src, m[, dst]", "ret": "dst"}], "cv::phase": [{"name": "cv.phase", "arg": "x, y[, angle[, angleInDegrees]]", "ret": "angle"}], "cv::phaseCorrelate": [{"name": "cv.phaseCorrelate", "arg": "src1, src2[, window]", "ret": "retval, response"}], "cv::pointPolygonTest": [{"name": "cv.pointPolygonTest", "arg": "contour, pt, measureDist", "ret": "retval"}], "cv::polarToCart": [{"name": "cv.polarToCart", "arg": "magnitude, angle[, x[, y[, angleInDegrees]]]", "ret": "x, y"}], "cv::polylines": [{"name": "cv.polylines", "arg": "img, pts, isClosed, color[, thickness[, lineType[, shift]]]", "ret": "img"}], "cv::pow": [{"name": "cv.pow", "arg": "src, power[, dst]", "ret": "dst"}], "cv::preCornerDetect": [{"name": "cv.preCornerDetect", "arg": "src, ksize[, dst[, borderType]]", "ret": "dst"}], "cv::projectPoints": [{"name": "cv.projectPoints", "arg": "objectPoints, rvec, tvec, cameraMatrix, distCoeffs[, imagePoints[, jacobian[, aspectRatio]]]", "ret": "imagePoints, jacobian"}], "cv::putText": [{"name": "cv.putText", "arg": "img, text, org, fontFace, fontScale, color[, thickness[, lineType[, bottomLeftOrigin]]]", "ret": "img"}], "cv::pyrDown": [{"name": "cv.pyrDown", "arg": "src[, dst[, dstsize[, borderType]]]", "ret": "dst"}], "cv::pyrMeanShiftFiltering": [{"name": "cv.pyrMeanShiftFiltering", "arg": "src, sp, sr[, dst[, maxLevel[, termcrit]]]", "ret": "dst"}], "cv::pyrUp": [{"name": "cv.pyrUp", "arg": "src[, dst[, dstsize[, borderType]]]", "ret": "dst"}], "cv::randShuffle": [{"name": "cv.randShuffle", "arg": "dst[, iterFactor]", "ret": "dst"}], "cv::randn": [{"name": "cv.randn", "arg": "dst, mean, stddev", "ret": "dst"}], "cv::randu": [{"name": "cv.randu", "arg": "dst, low, high", "ret": "dst"}], "cv::readOpticalFlow": [{"name": "cv.readOpticalFlow", "arg": "path", "ret": "retval"}], "cv::recoverPose": [{"name": "cv.recoverPose", "arg": "E, points1, points2, cameraMatrix[, R[, t[, mask]]]", "ret": "retval, R, t, mask"}, {"name": "cv.recoverPose", "arg": "E, points1, points2[, R[, t[, focal[, pp[, mask]]]]]", "ret": "retval, R, t, mask"}, {"name": "cv.recoverPose", "arg": "E, points1, points2, cameraMatrix, distanceThresh[, R[, t[, mask[, triangulatedPoints]]]]", "ret": "retval, R, t, mask, triangulatedPoints"}], "cv::rectangle": [{"name": "cv.rectangle", "arg": "img, pt1, pt2, color[, thickness[, lineType[, shift]]]", "ret": "img"}, {"name": "cv.rectangle", "arg": "img, rec, color[, thickness[, lineType[, shift]]]", "ret": "img"}], "cv::rectify3Collinear": [{"name": "cv.rectify3Collinear", "arg": "cameraMatrix1, distCoeffs1, cameraMatrix2, distCoeffs2, cameraMatrix3, distCoeffs3, imgpt1, imgpt3, imageSize, R12, T12, R13, T13, alpha, newImgSize, flags[, R1[, R2[, R3[, P1[, P2[, P3[, Q]]]]]]]", "ret": "retval, R1, R2, R3, P1, P2, P3, Q, roi1, roi2"}], "cv::reduce": [{"name": "cv.reduce", "arg": "src, dim, rtype[, dst[, dtype]]", "ret": "dst"}], "cv::remap": [{"name": "cv.remap", "arg": "src, map1, map2, interpolation[, dst[, borderMode[, borderValue]]]", "ret": "dst"}], "cv::repeat": [{"name": "cv.repeat", "arg": "src, ny, nx[, dst]", "ret": "dst"}], "cv::reprojectImageTo3D": [{"name": "cv.reprojectImageTo3D", "arg": "disparity, Q[, _3dImage[, handleMissingValues[, ddepth]]]", "ret": "_3dImage"}], "cv::resize": [{"name": "cv.resize", "arg": "src, dsize[, dst[, fx[, fy[, interpolation]]]]", "ret": "dst"}], "cv::resizeWindow": [{"name": "cv.resizeWindow", "arg": "winname, width, height", "ret": "None"}, {"name": "cv.resizeWindow", "arg": "winname, size", "ret": "None"}], "cv::rotate": [{"name": "cv.rotate", "arg": "src, rotateCode[, dst]", "ret": "dst"}], "cv::rotatedRectangleIntersection": [{"name": "cv.rotatedRectangleIntersection", "arg": "rect1, rect2[, intersectingRegion]", "ret": "retval, intersectingRegion"}], "cv::sampsonDistance": [{"name": "cv.sampsonDistance", "arg": "pt1, pt2, F", "ret": "retval"}], "cv::scaleAdd": [{"name": "cv.scaleAdd", "arg": "src1, alpha, src2[, dst]", "ret": "dst"}], "cv::seamlessClone": [{"name": "cv.seamlessClone", "arg": "src, dst, mask, p, flags[, blend]", "ret": "blend"}], "cv::selectROI": [{"name": "cv.selectROI", "arg": "windowName, img[, showCrosshair[, fromCenter]]", "ret": "retval"}, {"name": "cv.selectROI", "arg": "img[, showCrosshair[, fromCenter]]", "ret": "retval"}], "cv::selectROIs": [{"name": "cv.selectROIs", "arg": "windowName, img[, showCrosshair[, fromCenter]]", "ret": "boundingBoxes"}], "cv::sepFilter2D": [{"name": "cv.sepFilter2D", "arg": "src, ddepth, kernelX, kernelY[, dst[, anchor[, delta[, borderType]]]]", "ret": "dst"}], "cv::setIdentity": [{"name": "cv.setIdentity", "arg": "mtx[, s]", "ret": "mtx"}], "cv::setNumThreads": [{"name": "cv.setNumThreads", "arg": "nthreads", "ret": "None"}], "cv::setRNGSeed": [{"name": "cv.setRNGSeed", "arg": "seed", "ret": "None"}], "cv::setTrackbarMax": [{"name": "cv.setTrackbarMax", "arg": "trackbarname, winname, maxval", "ret": "None"}], "cv::setTrackbarMin": [{"name": "cv.setTrackbarMin", "arg": "trackbarname, winname, minval", "ret": "None"}], "cv::setTrackbarPos": [{"name": "cv.setTrackbarPos", "arg": "trackbarname, winname, pos", "ret": "None"}], "cv::setUseOpenVX": [{"name": "cv.setUseOpenVX", "arg": "flag", "ret": "None"}], "cv::setUseOptimized": [{"name": "cv.setUseOptimized", "arg": "onoff", "ret": "None"}], "cv::setWindowProperty": [{"name": "cv.setWindowProperty", "arg": "winname, prop_id, prop_value", "ret": "None"}], "cv::setWindowTitle": [{"name": "cv.setWindowTitle", "arg": "winname, title", "ret": "None"}], "cv::solve": [{"name": "cv.solve", "arg": "src1, src2[, dst[, flags]]", "ret": "retval, dst"}], "cv::solveCubic": [{"name": "cv.solveCubic", "arg": "coeffs[, roots]", "ret": "retval, roots"}], "cv::solveLP": [{"name": "cv.solveLP", "arg": "Func, Constr[, z]", "ret": "retval, z"}], "cv::solveP3P": [{"name": "cv.solveP3P", "arg": "objectPoints, imagePoints, cameraMatrix, distCoeffs, flags[, rvecs[, tvecs]]", "ret": "retval, rvecs, tvecs"}], "cv::solvePnP": [{"name": "cv.solvePnP", "arg": "objectPoints, imagePoints, cameraMatrix, distCoeffs[, rvec[, tvec[, useExtrinsicGuess[, flags]]]]", "ret": "retval, rvec, tvec"}], "cv::solvePnPGeneric": [{"name": "cv.solvePnPGeneric", "arg": "objectPoints, imagePoints, cameraMatrix, distCoeffs[, rvecs[, tvecs[, useExtrinsicGuess[, flags[, rvec[, tvec[, reprojectionError]]]]]]]", "ret": "retval, rvecs, tvecs, reprojectionError"}], "cv::solvePnPRansac": [{"name": "cv.solvePnPRansac", "arg": "objectPoints, imagePoints, cameraMatrix, distCoeffs[, rvec[, tvec[, useExtrinsicGuess[, iterationsCount[, reprojectionError[, confidence[, inliers[, flags]]]]]]]]", "ret": "retval, rvec, tvec, inliers"}, {"name": "cv.solvePnPRansac", "arg": "objectPoints, imagePoints, cameraMatrix, distCoeffs[, rvec[, tvec[, inliers[, params]]]]", "ret": "retval, cameraMatrix, rvec, tvec, inliers"}], "cv::solvePnPRefineLM": [{"name": "cv.solvePnPRefineLM", "arg": "objectPoints, imagePoints, cameraMatrix, distCoeffs, rvec, tvec[, criteria]", "ret": "rvec, tvec"}], "cv::solvePnPRefineVVS": [{"name": "cv.solvePnPRefineVVS", "arg": "objectPoints, imagePoints, cameraMatrix, distCoeffs, rvec, tvec[, criteria[, VVSlambda]]", "ret": "rvec, tvec"}], "cv::solvePoly": [{"name": "cv.solvePoly", "arg": "coeffs[, roots[, maxIters]]", "ret": "retval, roots"}], "cv::sort": [{"name": "cv.sort", "arg": "src, flags[, dst]", "ret": "dst"}], "cv::sortIdx": [{"name": "cv.sortIdx", "arg": "src, flags[, dst]", "ret": "dst"}], "cv::spatialGradient": [{"name": "cv.spatialGradient", "arg": "src[, dx[, dy[, ksize[, borderType]]]]", "ret": "dx, dy"}], "cv::split": [{"name": "cv.split", "arg": "m[, mv]", "ret": "mv"}], "cv::sqrBoxFilter": [{"name": "cv.sqrBoxFilter", "arg": "src, ddepth, ksize[, dst[, anchor[, normalize[, borderType]]]]", "ret": "dst"}], "cv::sqrt": [{"name": "cv.sqrt", "arg": "src[, dst]", "ret": "dst"}], "cv::startWindowThread": [{"name": "cv.startWindowThread", "arg": "", "ret": "retval"}], "cv::stereoCalibrate": [{"name": "cv.stereoCalibrate", "arg": "objectPoints, imagePoints1, imagePoints2, cameraMatrix1, distCoeffs1, cameraMatrix2, distCoeffs2, imageSize[, R[, T[, E[, F[, flags[, criteria]]]]]]", "ret": "retval, cameraMatrix1, distCoeffs1, cameraMatrix2, distCoeffs2, R, T, E, F"}, {"name": "cv.stereoCalibrateExtended", "arg": "objectPoints, imagePoints1, imagePoints2, cameraMatrix1, distCoeffs1, cameraMatrix2, distCoeffs2, imageSize, R, T[, E[, F[, perViewErrors[, flags[, criteria]]]]]", "ret": "retval, cameraMatrix1, distCoeffs1, cameraMatrix2, distCoeffs2, R, T, E, F, perViewErrors"}], "cv::stereoRectify": [{"name": "cv.stereoRectify", "arg": "cameraMatrix1, distCoeffs1, cameraMatrix2, distCoeffs2, imageSize, R, T[, R1[, R2[, P1[, P2[, Q[, flags[, alpha[, newImageSize]]]]]]]]", "ret": "R1, R2, P1, P2, Q, validPixROI1, validPixROI2"}], "cv::stereoRectifyUncalibrated": [{"name": "cv.stereoRectifyUncalibrated", "arg": "points1, points2, F, imgSize[, H1[, H2[, threshold]]]", "ret": "retval, H1, H2"}], "cv::stylization": [{"name": "cv.stylization", "arg": "src[, dst[, sigma_s[, sigma_r]]]", "ret": "dst"}], "cv::subtract": [{"name": "cv.subtract", "arg": "src1, src2[, dst[, mask[, dtype]]]", "ret": "dst"}], "cv::sum": [{"name": "cv.sumElems", "arg": "src", "ret": "retval"}], "cv::textureFlattening": [{"name": "cv.textureFlattening", "arg": "src, mask[, dst[, low_threshold[, high_threshold[, kernel_size]]]]", "ret": "dst"}], "cv::threshold": [{"name": "cv.threshold", "arg": "src, thresh, maxval, type[, dst]", "ret": "retval, dst"}], "cv::trace": [{"name": "cv.trace", "arg": "mtx", "ret": "retval"}], "cv::transform": [{"name": "cv.transform", "arg": "src, m[, dst]", "ret": "dst"}], "cv::transpose": [{"name": "cv.transpose", "arg": "src[, dst]", "ret": "dst"}], "cv::triangulatePoints": [{"name": "cv.triangulatePoints", "arg": "projMatr1, projMatr2, projPoints1, projPoints2[, points4D]", "ret": "points4D"}], "cv::undistort": [{"name": "cv.undistort", "arg": "src, cameraMatrix, distCoeffs[, dst[, newCameraMatrix]]", "ret": "dst"}], "cv::undistortPoints": [{"name": "cv.undistortPoints", "arg": "src, cameraMatrix, distCoeffs[, dst[, R[, P]]]", "ret": "dst"}, {"name": "cv.undistortPointsIter", "arg": "src, cameraMatrix, distCoeffs, R, P, criteria[, dst]", "ret": "dst"}], "cv::useOpenVX": [{"name": "cv.useOpenVX", "arg": "", "ret": "retval"}], "cv::useOptimized": [{"name": "cv.useOptimized", "arg": "", "ret": "retval"}], "cv::validateDisparity": [{"name": "cv.validateDisparity", "arg": "disparity, cost, minDisparity, numberOfDisparities[, disp12MaxDisp]", "ret": "disparity"}], "cv::vconcat": [{"name": "cv.vconcat", "arg": "src[, dst]", "ret": "dst"}], "cv::waitKey": [{"name": "cv.waitKey", "arg": "[, delay]", "ret": "retval"}], "cv::waitKeyEx": [{"name": "cv.waitKeyEx", "arg": "[, delay]", "ret": "retval"}], "cv::warpAffine": [{"name": "cv.warpAffine", "arg": "src, M, dsize[, dst[, flags[, borderMode[, borderValue]]]]", "ret": "dst"}], "cv::warpPerspective": [{"name": "cv.warpPerspective", "arg": "src, M, dsize[, dst[, flags[, borderMode[, borderValue]]]]", "ret": "dst"}], "cv::warpPolar": [{"name": "cv.warpPolar", "arg": "src, dsize, center, maxRadius, flags[, dst]", "ret": "dst"}], "cv::watershed": [{"name": "cv.watershed", "arg": "image, markers", "ret": "markers"}], "cv::writeOpticalFlow": [{"name": "cv.writeOpticalFlow", "arg": "path, flow", "ret": "retval"}], "cv::aruco::calibrateCameraAruco": [{"name": "cv.aruco.calibrateCameraAruco", "arg": "corners, ids, counter, board, imageSize, cameraMatrix, distCoeffs[, rvecs[, tvecs[, flags[, criteria]]]]", "ret": "retval, cameraMatrix, distCoeffs, rvecs, tvecs"}, {"name": "cv.aruco.calibrateCameraArucoExtended", "arg": "corners, ids, counter, board, imageSize, cameraMatrix, distCoeffs[, rvecs[, tvecs[, stdDeviationsIntrinsics[, stdDeviationsExtrinsics[, perViewErrors[, flags[, criteria]]]]]]]", "ret": "retval, cameraMatrix, distCoeffs, rvecs, tvecs, stdDeviationsIntrinsics, stdDeviationsExtrinsics, perViewErrors"}], "cv::aruco::calibrateCameraCharuco": [{"name": "cv.aruco.calibrateCameraCharuco", "arg": "charucoCorners, charucoIds, board, imageSize, cameraMatrix, distCoeffs[, rvecs[, tvecs[, flags[, criteria]]]]", "ret": "retval, cameraMatrix, distCoeffs, rvecs, tvecs"}, {"name": "cv.aruco.calibrateCameraCharucoExtended", "arg": "charucoCorners, charucoIds, board, imageSize, cameraMatrix, distCoeffs[, rvecs[, tvecs[, stdDeviationsIntrinsics[, stdDeviationsExtrinsics[, perViewErrors[, flags[, criteria]]]]]]]", "ret": "retval, cameraMatrix, distCoeffs, rvecs, tvecs, stdDeviationsIntrinsics, stdDeviationsExtrinsics, perViewErrors"}], "cv::aruco::generateCustomDictionary": [{"name": "cv.aruco.custom_dictionary", "arg": "nMarkers, markerSize[, randomSeed]", "ret": "retval"}, {"name": "cv.aruco.custom_dictionary_from", "arg": "nMarkers, markerSize, baseDictionary[, randomSeed]", "ret": "retval"}], "cv::aruco::detectCharucoDiamond": [{"name": "cv.aruco.detectCharucoDiamond", "arg": "image, markerCorners, markerIds, squareMarkerLengthRate[, diamondCorners[, diamondIds[, cameraMatrix[, distCoeffs]]]]", "ret": "diamondCorners, diamondIds"}], "cv::aruco::detectMarkers": [{"name": "cv.aruco.detectMarkers", "arg": "image, dictionary[, corners[, ids[, parameters[, rejectedImgPoints[, cameraMatrix[, distCoeff]]]]]]", "ret": "corners, ids, rejectedImgPoints"}], "cv::aruco::drawAxis": [{"name": "cv.aruco.drawAxis", "arg": "image, cameraMatrix, distCoeffs, rvec, tvec, length", "ret": "image"}], "cv::aruco::drawDetectedCornersCharuco": [{"name": "cv.aruco.drawDetectedCornersCharuco", "arg": "image, charucoCorners[, charucoIds[, cornerColor]]", "ret": "image"}], "cv::aruco::drawDetectedDiamonds": [{"name": "cv.aruco.drawDetectedDiamonds", "arg": "image, diamondCorners[, diamondIds[, borderColor]]", "ret": "image"}], "cv::aruco::drawDetectedMarkers": [{"name": "cv.aruco.drawDetectedMarkers", "arg": "image, corners[, ids[, borderColor]]", "ret": "image"}], "cv::aruco::drawMarker": [{"name": "cv.aruco.drawMarker", "arg": "dictionary, id, sidePixels[, img[, borderBits]]", "ret": "img"}], "cv::aruco::drawPlanarBoard": [{"name": "cv.aruco.drawPlanarBoard", "arg": "board, outSize[, img[, marginSize[, borderBits]]]", "ret": "img"}], "cv::aruco::estimatePoseBoard": [{"name": "cv.aruco.estimatePoseBoard", "arg": "corners, ids, board, cameraMatrix, distCoeffs, rvec, tvec[, useExtrinsicGuess]", "ret": "retval, rvec, tvec"}], "cv::aruco::estimatePoseCharucoBoard": [{"name": "cv.aruco.estimatePoseCharucoBoard", "arg": "charucoCorners, charucoIds, board, cameraMatrix, distCoeffs, rvec, tvec[, useExtrinsicGuess]", "ret": "retval, rvec, tvec"}], "cv::aruco::estimatePoseSingleMarkers": [{"name": "cv.aruco.estimatePoseSingleMarkers", "arg": "corners, markerLength, cameraMatrix, distCoeffs[, rvecs[, tvecs[, _objPoints]]]", "ret": "rvecs, tvecs, _objPoints"}], "cv::aruco::getBoardObjectAndImagePoints": [{"name": "cv.aruco.getBoardObjectAndImagePoints", "arg": "board, detectedCorners, detectedIds[, objPoints[, imgPoints]]", "ret": "objPoints, imgPoints"}], "cv::aruco::getPredefinedDictionary": [{"name": "cv.aruco.getPredefinedDictionary", "arg": "dict", "ret": "retval"}], "cv::aruco::interpolateCornersCharuco": [{"name": "cv.aruco.interpolateCornersCharuco", "arg": "markerCorners, markerIds, image, board[, charucoCorners[, charucoIds[, cameraMatrix[, distCoeffs[, minMarkers]]]]]", "ret": "retval, charucoCorners, charucoIds"}], "cv::aruco::refineDetectedMarkers": [{"name": "cv.aruco.refineDetectedMarkers", "arg": "image, board, detectedCorners, detectedIds, rejectedCorners[, cameraMatrix[, distCoeffs[, minRepDistance[, errorCorrectionRate[, checkAllOrders[, recoveredIdxs[, parameters]]]]]]]", "ret": "detectedCorners, detectedIds, rejectedCorners, recoveredIdxs"}], "cv::aruco::testCharucoCornersCollinear": [{"name": "cv.aruco.testCharucoCornersCollinear", "arg": "_board, _charucoIds", "ret": "retval"}], "cv::bgsegm::createBackgroundSubtractorCNT": [{"name": "cv.bgsegm.createBackgroundSubtractorCNT", "arg": "[, minPixelStability[, useHistory[, maxPixelStability[, isParallel]]]]", "ret": "retval"}], "cv::bgsegm::createBackgroundSubtractorGMG": [{"name": "cv.bgsegm.createBackgroundSubtractorGMG", "arg": "[, initializationFrames[, decisionThreshold]]", "ret": "retval"}], "cv::bgsegm::createBackgroundSubtractorGSOC": [{"name": "cv.bgsegm.createBackgroundSubtractorGSOC", "arg": "[, mc[, nSamples[, replaceRate[, propagationRate[, hitsThreshold[, alpha[, beta[, blinkingSupressionDecay[, blinkingSupressionMultiplier[, noiseRemovalThresholdFacBG[, noiseRemovalThresholdFacFG]]]]]]]]]]]", "ret": "retval"}], "cv::bgsegm::createBackgroundSubtractorLSBP": [{"name": "cv.bgsegm.createBackgroundSubtractorLSBP", "arg": "[, mc[, nSamples[, LSBPRadius[, Tlower[, Tupper[, Tinc[, Tdec[, Rscale[, Rincdec[, noiseRemovalThresholdFacBG[, noiseRemovalThresholdFacFG[, LSBPthreshold[, minCount]]]]]]]]]]]]]", "ret": "retval"}], "cv::bgsegm::createBackgroundSubtractorMOG": [{"name": "cv.bgsegm.createBackgroundSubtractorMOG", "arg": "[, history[, nmixtures[, backgroundRatio[, noiseSigma]]]]", "ret": "retval"}], "cv::bgsegm::createSyntheticSequenceGenerator": [{"name": "cv.bgsegm.createSyntheticSequenceGenerator", "arg": "background, object[, amplitude[, wavelength[, wavespeed[, objspeed]]]]", "ret": "retval"}], "cv::cuda::createContinuous": [{"name": "cv.cuda.createContinuous", "arg": "rows, cols, type[, arr]", "ret": "arr"}], "cv::cuda::ensureSizeIsEnough": [{"name": "cv.cuda.ensureSizeIsEnough", "arg": "rows, cols, type[, arr]", "ret": "arr"}], "cv::cuda::getCudaEnabledDeviceCount": [{"name": "cv.cuda.getCudaEnabledDeviceCount", "arg": "", "ret": "retval"}], "cv::cuda::getDevice": [{"name": "cv.cuda.getDevice", "arg": "", "ret": "retval"}], "cv::cuda::printCudaDeviceInfo": [{"name": "cv.cuda.printCudaDeviceInfo", "arg": "device", "ret": "None"}], "cv::cuda::printShortCudaDeviceInfo": [{"name": "cv.cuda.printShortCudaDeviceInfo", "arg": "device", "ret": "None"}], "cv::cuda::registerPageLocked": [{"name": "cv.cuda.registerPageLocked", "arg": "m", "ret": "None"}], "cv::cuda::resetDevice": [{"name": "cv.cuda.resetDevice", "arg": "", "ret": "None"}], "cv::cuda::setBufferPoolConfig": [{"name": "cv.cuda.setBufferPoolConfig", "arg": "deviceId, stackSize, stackCount", "ret": "None"}], "cv::cuda::setBufferPoolUsage": [{"name": "cv.cuda.setBufferPoolUsage", "arg": "on", "ret": "None"}], "cv::cuda::setDevice": [{"name": "cv.cuda.setDevice", "arg": "device", "ret": "None"}], "cv::cuda::unregisterPageLocked": [{"name": "cv.cuda.unregisterPageLocked", "arg": "m", "ret": "None"}], "cv::detail::calibrateRotatingCamera": [{"name": "cv.detail.calibrateRotatingCamera", "arg": "Hs[, K]", "ret": "retval, K"}], "cv::detail::computeImageFeatures": [{"name": "cv.detail.computeImageFeatures", "arg": "featuresFinder, images[, masks]", "ret": "features"}, {"name": "cv.detail.computeImageFeatures2", "arg": "featuresFinder, image[, mask]", "ret": "features"}], "cv::detail::createLaplacePyr": [{"name": "cv.detail.createLaplacePyr", "arg": "img, num_levels, pyr", "ret": "pyr"}], "cv::detail::createLaplacePyrGpu": [{"name": "cv.detail.createLaplacePyrGpu", "arg": "img, num_levels, pyr", "ret": "pyr"}], "cv::detail::createWeightMap": [{"name": "cv.detail.createWeightMap", "arg": "mask, sharpness, weight", "ret": "weight"}], "cv::detail::focalsFromHomography": [{"name": "cv.detail.focalsFromHomography", "arg": "H, f0, f1, f0_ok, f1_ok", "ret": "None"}], "cv::detail::leaveBiggestComponent": [{"name": "cv.detail.leaveBiggestComponent", "arg": "features, pairwise_matches, conf_threshold", "ret": "retval"}], "cv::detail::matchesGraphAsString": [{"name": "cv.detail.matchesGraphAsString", "arg": "pathes, pairwise_matches, conf_threshold", "ret": "retval"}], "cv::detail::normalizeUsingWeightMap": [{"name": "cv.detail.normalizeUsingWeightMap", "arg": "weight, src", "ret": "src"}], "cv::detail::overlapRoi": [{"name": "cv.detail.overlapRoi", "arg": "tl1, tl2, sz1, sz2, roi", "ret": "retval"}], "cv::detail::restoreImageFromLaplacePyr": [{"name": "cv.detail.restoreImageFromLaplacePyr", "arg": "pyr", "ret": "pyr"}], "cv::detail::restoreImageFromLaplacePyrGpu": [{"name": "cv.detail.restoreImageFromLaplacePyrGpu", "arg": "pyr", "ret": "pyr"}], "cv::detail::resultRoi": [{"name": "cv.detail.resultRoi", "arg": "corners, images", "ret": "retval"}, {"name": "cv.detail.resultRoi", "arg": "corners, sizes", "ret": "retval"}], "cv::detail::resultRoiIntersection": [{"name": "cv.detail.resultRoiIntersection", "arg": "corners, sizes", "ret": "retval"}], "cv::detail::resultTl": [{"name": "cv.detail.resultTl", "arg": "corners", "ret": "retval"}], "cv::detail::selectRandomSubset": [{"name": "cv.detail.selectRandomSubset", "arg": "count, size, subset", "ret": "None"}], "cv::detail::stitchingLogLevel": [{"name": "cv.detail.stitchingLogLevel", "arg": "", "ret": "retval"}], "cv::detail::waveCorrect": [{"name": "cv.detail.waveCorrect", "arg": "rmats, kind", "ret": "rmats"}], "cv::dnn::NMSBoxes": [{"name": "cv.dnn.NMSBoxes", "arg": "bboxes, scores, score_threshold, nms_threshold[, eta[, top_k]]", "ret": "indices"}, {"name": "cv.dnn.NMSBoxesRotated", "arg": "bboxes, scores, score_threshold, nms_threshold[, eta[, top_k]]", "ret": "indices"}], "cv::dnn::blobFromImage": [{"name": "cv.dnn.blobFromImage", "arg": "image[, scalefactor[, size[, mean[, swapRB[, crop[, ddepth]]]]]]", "ret": "retval"}], "cv::dnn::blobFromImages": [{"name": "cv.dnn.blobFromImages", "arg": "images[, scalefactor[, size[, mean[, swapRB[, crop[, ddepth]]]]]]", "ret": "retval"}], "cv::dnn::getAvailableTargets": [{"name": "cv.dnn.getAvailableTargets", "arg": "be", "ret": "retval"}], "cv::dnn::imagesFromBlob": [{"name": "cv.dnn.imagesFromBlob", "arg": "blob_[, images_]", "ret": "images_"}], "cv::dnn::readNet": [{"name": "cv.dnn.readNet", "arg": "model[, config[, framework]]", "ret": "retval"}, {"name": "cv.dnn.readNet", "arg": "framework, bufferModel[, bufferConfig]", "ret": "retval"}], "cv::dnn::readNetFromCaffe": [{"name": "cv.dnn.readNetFromCaffe", "arg": "prototxt[, caffeModel]", "ret": "retval"}, {"name": "cv.dnn.readNetFromCaffe", "arg": "bufferProto[, bufferModel]", "ret": "retval"}], "cv::dnn::readNetFromDarknet": [{"name": "cv.dnn.readNetFromDarknet", "arg": "cfgFile[, darknetModel]", "ret": "retval"}, {"name": "cv.dnn.readNetFromDarknet", "arg": "bufferCfg[, bufferModel]", "ret": "retval"}], "cv::dnn::readNetFromModelOptimizer": [{"name": "cv.dnn.readNetFromModelOptimizer", "arg": "xml, bin", "ret": "retval"}, {"name": "cv.dnn.readNetFromModelOptimizer", "arg": "bufferModelConfig, bufferWeights", "ret": "retval"}], "cv::dnn::readNetFromONNX": [{"name": "cv.dnn.readNetFromONNX", "arg": "onnxFile", "ret": "retval"}, {"name": "cv.dnn.readNetFromONNX", "arg": "buffer", "ret": "retval"}], "cv::dnn::readNetFromTensorflow": [{"name": "cv.dnn.readNetFromTensorflow", "arg": "model[, config]", "ret": "retval"}, {"name": "cv.dnn.readNetFromTensorflow", "arg": "bufferModel[, bufferConfig]", "ret": "retval"}], "cv::dnn::readNetFromTorch": [{"name": "cv.dnn.readNetFromTorch", "arg": "model[, isBinary[, evaluate]]", "ret": "retval"}], "cv::dnn::readTensorFromONNX": [{"name": "cv.dnn.readTensorFromONNX", "arg": "path", "ret": "retval"}], "cv::dnn::readTorchBlob": [{"name": "cv.dnn.readTorchBlob", "arg": "filename[, isBinary]", "ret": "retval"}], "cv::dnn::shrinkCaffeModel": [{"name": "cv.dnn.shrinkCaffeModel", "arg": "src, dst[, layersTypes]", "ret": "None"}], "cv::dnn::writeTextGraph": [{"name": "cv.dnn.writeTextGraph", "arg": "model, output", "ret": "None"}], "cv::face::createFacemarkAAM": [{"name": "cv.face.createFacemarkAAM", "arg": "", "ret": "retval"}], "cv::face::createFacemarkKazemi": [{"name": "cv.face.createFacemarkKazemi", "arg": "", "ret": "retval"}], "cv::face::createFacemarkLBF": [{"name": "cv.face.createFacemarkLBF", "arg": "", "ret": "retval"}], "cv::face::drawFacemarks": [{"name": "cv.face.drawFacemarks", "arg": "image, points[, color]", "ret": "image"}], "cv::face::getFacesHAAR": [{"name": "cv.face.getFacesHAAR", "arg": "image, face_cascade_name[, faces]", "ret": "retval, faces"}], "cv::face::loadDatasetList": [{"name": "cv.face.loadDatasetList", "arg": "imageList, annotationList, images, annotations", "ret": "retval"}], "cv::face::loadFacePoints": [{"name": "cv.face.loadFacePoints", "arg": "filename[, points[, offset]]", "ret": "retval, points"}], "cv::face::loadTrainingData": [{"name": "cv.face.loadTrainingData", "arg": "filename, images[, facePoints[, delim[, offset]]]", "ret": "retval, facePoints"}, {"name": "cv.face.loadTrainingData", "arg": "imageList, groundTruth, images[, facePoints[, offset]]", "ret": "retval, facePoints"}, {"name": "cv.face.loadTrainingData", "arg": "filename, trainlandmarks, trainimages", "ret": "retval"}], "cv::fisheye::calibrate": [{"name": "cv.fisheye.calibrate", "arg": "objectPoints, imagePoints, image_size, K, D[, rvecs[, tvecs[, flags[, criteria]]]]", "ret": "retval, K, D, rvecs, tvecs"}], "cv::fisheye::distortPoints": [{"name": "cv.fisheye.distortPoints", "arg": "undistorted, K, D[, distorted[, alpha]]", "ret": "distorted"}], "cv::fisheye::estimateNewCameraMatrixForUndistortRectify": [{"name": "cv.fisheye.estimateNewCameraMatrixForUndistortRectify", "arg": "K, D, image_size, R[, P[, balance[, new_size[, fov_scale]]]]", "ret": "P"}], "cv::fisheye::initUndistortRectifyMap": [{"name": "cv.fisheye.initUndistortRectifyMap", "arg": "K, D, R, P, size, m1type[, map1[, map2]]", "ret": "map1, map2"}], "cv::fisheye::projectPoints": [{"name": "cv.fisheye.projectPoints", "arg": "objectPoints, rvec, tvec, K, D[, imagePoints[, alpha[, jacobian]]]", "ret": "imagePoints, jacobian"}], "cv::fisheye::stereoCalibrate": [{"name": "cv.fisheye.stereoCalibrate", "arg": "objectPoints, imagePoints1, imagePoints2, K1, D1, K2, D2, imageSize[, R[, T[, flags[, criteria]]]]", "ret": "retval, K1, D1, K2, D2, R, T"}], "cv::fisheye::stereoRectify": [{"name": "cv.fisheye.stereoRectify", "arg": "K1, D1, K2, D2, imageSize, R, tvec, flags[, R1[, R2[, P1[, P2[, Q[, newImageSize[, balance[, fov_scale]]]]]]]]", "ret": "R1, R2, P1, P2, Q"}], "cv::fisheye::undistortImage": [{"name": "cv.fisheye.undistortImage", "arg": "distorted, K, D[, undistorted[, Knew[, new_size]]]", "ret": "undistorted"}], "cv::fisheye::undistortPoints": [{"name": "cv.fisheye.undistortPoints", "arg": "distorted, K, D[, undistorted[, R[, P]]]", "ret": "undistorted"}], "cv::ft::FT02D_FL_process": [{"name": "cv.ft.FT02D_FL_process", "arg": "matrix, radius[, output]", "ret": "output"}], "cv::ft::FT02D_FL_process_float": [{"name": "cv.ft.FT02D_FL_process_float", "arg": "matrix, radius[, output]", "ret": "output"}], "cv::ft::FT02D_components": [{"name": "cv.ft.FT02D_components", "arg": "matrix, kernel[, components[, mask]]", "ret": "components"}], "cv::ft::FT02D_inverseFT": [{"name": "cv.ft.FT02D_inverseFT", "arg": "components, kernel, width, height[, output]", "ret": "output"}], "cv::ft::FT02D_iteration": [{"name": "cv.ft.FT02D_iteration", "arg": "matrix, kernel, mask, firstStop[, output[, maskOutput]]", "ret": "retval, output, maskOutput"}], "cv::ft::FT02D_process": [{"name": "cv.ft.FT02D_process", "arg": "matrix, kernel[, output[, mask]]", "ret": "output"}], "cv::ft::FT12D_components": [{"name": "cv.ft.FT12D_components", "arg": "matrix, kernel[, components]", "ret": "components"}], "cv::ft::FT12D_createPolynomMatrixHorizontal": [{"name": "cv.ft.FT12D_createPolynomMatrixHorizontal", "arg": "radius, chn[, matrix]", "ret": "matrix"}], "cv::ft::FT12D_createPolynomMatrixVertical": [{"name": "cv.ft.FT12D_createPolynomMatrixVertical", "arg": "radius, chn[, matrix]", "ret": "matrix"}], "cv::ft::FT12D_inverseFT": [{"name": "cv.ft.FT12D_inverseFT", "arg": "components, kernel, width, height[, output]", "ret": "output"}], "cv::ft::FT12D_polynomial": [{"name": "cv.ft.FT12D_polynomial", "arg": "matrix, kernel[, c00[, c10[, c01[, components[, mask]]]]]", "ret": "c00, c10, c01, components"}], "cv::ft::FT12D_process": [{"name": "cv.ft.FT12D_process", "arg": "matrix, kernel[, output[, mask]]", "ret": "output"}], "cv::ft::createKernel": [{"name": "cv.ft.createKernel", "arg": "function, radius, chn[, kernel]", "ret": "kernel"}, {"name": "cv.ft.createKernel1", "arg": "A, B, chn[, kernel]", "ret": "kernel"}], "cv::ft::filter": [{"name": "cv.ft.filter", "arg": "image, kernel[, output]", "ret": "output"}], "cv::ft::inpaint": [{"name": "cv.ft.inpaint", "arg": "image, mask, radius, function, algorithm[, output]", "ret": "output"}], "cv::img_hash::averageHash": [{"name": "cv.img_hash.averageHash", "arg": "inputArr[, outputArr]", "ret": "outputArr"}], "cv::img_hash::blockMeanHash": [{"name": "cv.img_hash.blockMeanHash", "arg": "inputArr[, outputArr[, mode]]", "ret": "outputArr"}], "cv::img_hash::colorMomentHash": [{"name": "cv.img_hash.colorMomentHash", "arg": "inputArr[, outputArr]", "ret": "outputArr"}], "cv::img_hash::marrHildrethHash": [{"name": "cv.img_hash.marrHildrethHash", "arg": "inputArr[, outputArr[, alpha[, scale]]]", "ret": "outputArr"}], "cv::img_hash::pHash": [{"name": "cv.img_hash.pHash", "arg": "inputArr[, outputArr]", "ret": "outputArr"}], "cv::img_hash::radialVarianceHash": [{"name": "cv.img_hash.radialVarianceHash", "arg": "inputArr[, outputArr[, sigma[, numOfAngleLine]]]", "ret": "outputArr"}], "cv::intensity_transform::BIMEF": [{"name": "cv.intensity_transform.BIMEF", "arg": "input[, output[, mu[, a[, b]]]]", "ret": "output"}, {"name": "cv.intensity_transform.BIMEF2", "arg": "input, k, mu, a, b[, output]", "ret": "output"}], "cv::intensity_transform::autoscaling": [{"name": "cv.intensity_transform.autoscaling", "arg": "input, output", "ret": "None"}], "cv::intensity_transform::contrastStretching": [{"name": "cv.intensity_transform.contrastStretching", "arg": "input, output, r1, s1, r2, s2", "ret": "None"}], "cv::intensity_transform::gammaCorrection": [{"name": "cv.intensity_transform.gammaCorrection", "arg": "input, output, gamma", "ret": "None"}], "cv::intensity_transform::logTransform": [{"name": "cv.intensity_transform.logTransform", "arg": "input, output", "ret": "None"}], "cv::ipp::getIppVersion": [{"name": "cv.ipp.getIppVersion", "arg": "", "ret": "retval"}], "cv::ipp::setUseIPP": [{"name": "cv.ipp.setUseIPP", "arg": "flag", "ret": "None"}], "cv::ipp::setUseIPP_NotExact": [{"name": "cv.ipp.setUseIPP_NotExact", "arg": "flag", "ret": "None"}], "cv::ipp::useIPP": [{"name": "cv.ipp.useIPP", "arg": "", "ret": "retval"}], "cv::ipp::useIPP_NotExact": [{"name": "cv.ipp.useIPP_NotExact", "arg": "", "ret": "retval"}], "cv::kinfu::makeVolume": [{"name": "cv.kinfu.makeVolume", "arg": "_volumeType, _voxelSize, _pose, _raycastStepFactor, _truncDist, _maxWeight, _truncateThreshold, _resolution", "ret": "retval"}], "cv::line_descriptor::drawKeylines": [{"name": "cv.line_descriptor.drawKeylines", "arg": "image, keylines[, outImage[, color[, flags]]]", "ret": "outImage"}], "cv::line_descriptor::drawLineMatches": [{"name": "cv.line_descriptor.drawLineMatches", "arg": "img1, keylines1, img2, keylines2, matches1to2[, outImg[, matchColor[, singleLineColor[, matchesMask[, flags]]]]]", "ret": "outImg"}], "cv::linemod::colormap": [{"name": "cv.linemod.colormap", "arg": "quantized[, dst]", "ret": "dst"}], "cv::linemod::drawFeatures": [{"name": "cv.linemod.drawFeatures", "arg": "img, templates, tl[, size]", "ret": "img"}], "cv::linemod::getDefaultLINE": [{"name": "cv.linemod.getDefaultLINE", "arg": "", "ret": "retval"}], "cv::linemod::getDefaultLINEMOD": [{"name": "cv.linemod.getDefaultLINEMOD", "arg": "", "ret": "retval"}], "cv::motempl::calcGlobalOrientation": [{"name": "cv.motempl.calcGlobalOrientation", "arg": "orientation, mask, mhi, timestamp, duration", "ret": "retval"}], "cv::motempl::calcMotionGradient": [{"name": "cv.motempl.calcMotionGradient", "arg": "mhi, delta1, delta2[, mask[, orientation[, apertureSize]]]", "ret": "mask, orientation"}], "cv::motempl::segmentMotion": [{"name": "cv.motempl.segmentMotion", "arg": "mhi, timestamp, segThresh[, segmask]", "ret": "segmask, boundingRects"}], "cv::motempl::updateMotionHistory": [{"name": "cv.motempl.updateMotionHistory", "arg": "silhouette, mhi, timestamp, duration", "ret": "mhi"}], "cv::ocl::finish": [{"name": "cv.ocl.finish", "arg": "", "ret": "None"}], "cv::ocl::haveAmdBlas": [{"name": "cv.ocl.haveAmdBlas", "arg": "", "ret": "retval"}], "cv::ocl::haveAmdFft": [{"name": "cv.ocl.haveAmdFft", "arg": "", "ret": "retval"}], "cv::ocl::haveOpenCL": [{"name": "cv.ocl.haveOpenCL", "arg": "", "ret": "retval"}], "cv::ocl::setUseOpenCL": [{"name": "cv.ocl.setUseOpenCL", "arg": "flag", "ret": "None"}], "cv::ocl::useOpenCL": [{"name": "cv.ocl.useOpenCL", "arg": "", "ret": "retval"}], "cv::omnidir::calibrate": [{"name": "cv.omnidir.calibrate", "arg": "objectPoints, imagePoints, size, K, xi, D, flags, criteria[, rvecs[, tvecs[, idx]]]", "ret": "retval, K, xi, D, rvecs, tvecs, idx"}], "cv::omnidir::initUndistortRectifyMap": [{"name": "cv.omnidir.initUndistortRectifyMap", "arg": "K, D, xi, R, P, size, m1type, flags[, map1[, map2]]", "ret": "map1, map2"}], "cv::omnidir::projectPoints": [{"name": "cv.omnidir.projectPoints", "arg": "objectPoints, rvec, tvec, K, xi, D[, imagePoints[, jacobian]]", "ret": "imagePoints, jacobian"}], "cv::omnidir::stereoCalibrate": [{"name": "cv.omnidir.stereoCalibrate", "arg": "objectPoints, imagePoints1, imagePoints2, imageSize1, imageSize2, K1, xi1, D1, K2, xi2, D2, flags, criteria[, rvec[, tvec[, rvecsL[, tvecsL[, idx]]]]]", "ret": "retval, objectPoints, imagePoints1, imagePoints2, K1, xi1, D1, K2, xi2, D2, rvec, tvec, rvecsL, tvecsL, idx"}], "cv::omnidir::stereoReconstruct": [{"name": "cv.omnidir.stereoReconstruct", "arg": "image1, image2, K1, D1, xi1, K2, D2, xi2, R, T, flag, numDisparities, SADWindowSize[, disparity[, image1Rec[, image2Rec[, newSize[, Knew[, pointCloud[, pointType]]]]]]]", "ret": "disparity, image1Rec, image2Rec, pointCloud"}], "cv::omnidir::stereoRectify": [{"name": "cv.omnidir.stereoRectify", "arg": "R, T[, R1[, R2]]", "ret": "R1, R2"}], "cv::omnidir::undistortImage": [{"name": "cv.omnidir.undistortImage", "arg": "distorted, K, D, xi, flags[, undistorted[, Knew[, new_size[, R]]]]", "ret": "undistorted"}], "cv::omnidir::undistortPoints": [{"name": "cv.omnidir.undistortPoints", "arg": "distorted, K, D, xi, R[, undistorted]", "ret": "undistorted"}], "cv::optflow::calcOpticalFlowDenseRLOF": [{"name": "cv.optflow.calcOpticalFlowDenseRLOF", "arg": "I0, I1, flow[, rlofParam[, forwardBackwardThreshold[, gridStep[, interp_type[, epicK[, epicSigma[, epicLambda[, ricSPSize[, ricSLICType[, use_post_proc[, fgsLambda[, fgsSigma[, use_variational_refinement]]]]]]]]]]]]]", "ret": "flow"}], "cv::optflow::calcOpticalFlowSF": [{"name": "cv.optflow.calcOpticalFlowSF", "arg": "from, to, layers, averaging_block_size, max_flow[, flow]", "ret": "flow"}, {"name": "cv.optflow.calcOpticalFlowSF", "arg": "from, to, layers, averaging_block_size, max_flow, sigma_dist, sigma_color, postprocess_window, sigma_dist_fix, sigma_color_fix, occ_thr, upscale_averaging_radius, upscale_sigma_dist, upscale_sigma_color, speed_up_thr[, flow]", "ret": "flow"}], "cv::optflow::calcOpticalFlowSparseRLOF": [{"name": "cv.optflow.calcOpticalFlowSparseRLOF", "arg": "prevImg, nextImg, prevPts, nextPts[, status[, err[, rlofParam[, forwardBackwardThreshold]]]]", "ret": "nextPts, status, err"}], "cv::optflow::calcOpticalFlowSparseToDense": [{"name": "cv.optflow.calcOpticalFlowSparseToDense", "arg": "from, to[, flow[, grid_step[, k[, sigma[, use_post_proc[, fgs_lambda[, fgs_sigma]]]]]]]", "ret": "flow"}], "cv::optflow::createOptFlow_DeepFlow": [{"name": "cv.optflow.createOptFlow_DeepFlow", "arg": "", "ret": "retval"}], "cv::optflow::createOptFlow_DenseRLOF": [{"name": "cv.optflow.createOptFlow_DenseRLOF", "arg": "", "ret": "retval"}], "cv::optflow::createOptFlow_DualTVL1": [{"name": "cv.optflow.createOptFlow_DualTVL1", "arg": "", "ret": "retval"}], "cv::optflow::createOptFlow_Farneback": [{"name": "cv.optflow.createOptFlow_Farneback", "arg": "", "ret": "retval"}], "cv::optflow::createOptFlow_PCAFlow": [{"name": "cv.optflow.createOptFlow_PCAFlow", "arg": "", "ret": "retval"}], "cv::optflow::createOptFlow_SimpleFlow": [{"name": "cv.optflow.createOptFlow_SimpleFlow", "arg": "", "ret": "retval"}], "cv::optflow::createOptFlow_SparseRLOF": [{"name": "cv.optflow.createOptFlow_SparseRLOF", "arg": "", "ret": "retval"}], "cv::optflow::createOptFlow_SparseToDense": [{"name": "cv.optflow.createOptFlow_SparseToDense", "arg": "", "ret": "retval"}], "cv::ppf_match_3d::addNoisePC": [{"name": "cv.ppf_match_3d.addNoisePC", "arg": "pc, scale", "ret": "retval"}], "cv::ppf_match_3d::computeNormalsPC3d": [{"name": "cv.ppf_match_3d.computeNormalsPC3d", "arg": "PC, NumNeighbors, FlipViewpoint, viewpoint[, PCNormals]", "ret": "retval, PCNormals"}], "cv::ppf_match_3d::getRandomPose": [{"name": "cv.ppf_match_3d.getRandomPose", "arg": "Pose", "ret": "None"}], "cv::ppf_match_3d::loadPLYSimple": [{"name": "cv.ppf_match_3d.loadPLYSimple", "arg": "fileName[, withNormals]", "ret": "retval"}], "cv::ppf_match_3d::samplePCByQuantization": [{"name": "cv.ppf_match_3d.samplePCByQuantization", "arg": "pc, xrange, yrange, zrange, sample_step_relative[, weightByCenter]", "ret": "retval"}], "cv::ppf_match_3d::transformPCPose": [{"name": "cv.ppf_match_3d.transformPCPose", "arg": "pc, Pose", "ret": "retval"}], "cv::ppf_match_3d::writePLY": [{"name": "cv.ppf_match_3d.writePLY", "arg": "PC, fileName", "ret": "None"}], "cv::ppf_match_3d::writePLYVisibleNormals": [{"name": "cv.ppf_match_3d.writePLYVisibleNormals", "arg": "PC, fileName", "ret": "None"}], "cv::rapid::convertCorrespondencies": [{"name": "cv.rapid.convertCorrespondencies", "arg": "cols, srcLocations[, pts2d[, pts3d[, mask]]]", "ret": "pts2d, pts3d"}], "cv::rapid::drawCorrespondencies": [{"name": "cv.rapid.drawCorrespondencies", "arg": "bundle, cols[, colors]", "ret": "bundle"}], "cv::rapid::drawSearchLines": [{"name": "cv.rapid.drawSearchLines", "arg": "img, locations, color", "ret": "img"}], "cv::rapid::drawWireframe": [{"name": "cv.rapid.drawWireframe", "arg": "img, pts2d, tris, color[, type[, cullBackface]]", "ret": "img"}], "cv::rapid::extractControlPoints": [{"name": "cv.rapid.extractControlPoints", "arg": "num, len, pts3d, rvec, tvec, K, imsize, tris[, ctl2d[, ctl3d]]", "ret": "ctl2d, ctl3d"}], "cv::rapid::extractLineBundle": [{"name": "cv.rapid.extractLineBundle", "arg": "len, ctl2d, img[, bundle[, srcLocations]]", "ret": "bundle, srcLocations"}], "cv::rapid::findCorrespondencies": [{"name": "cv.rapid.findCorrespondencies", "arg": "bundle[, cols[, response]]", "ret": "cols, response"}], "cv::rapid::rapid": [{"name": "cv.rapid.rapid", "arg": "img, num, len, pts3d, tris, K, rvec, tvec", "ret": "retval, rvec, tvec, rmsd"}], "cv::rgbd::depthTo3d": [{"name": "cv.rgbd.depthTo3d", "arg": "depth, K[, points3d[, mask]]", "ret": "points3d"}], "cv::rgbd::depthTo3dSparse": [{"name": "cv.rgbd.depthTo3dSparse", "arg": "depth, in_K, in_points[, points3d]", "ret": "points3d"}], "cv::rgbd::registerDepth": [{"name": "cv.rgbd.registerDepth", "arg": "unregisteredCameraMatrix, registeredCameraMatrix, registeredDistCoeffs, Rt, unregisteredDepth, outputImagePlaneSize[, registeredDepth[, depthDilation]]", "ret": "registeredDepth"}], "cv::rgbd::rescaleDepth": [{"name": "cv.rgbd.rescaleDepth", "arg": "in, depth[, out]", "ret": "out"}], "cv::rgbd::warpFrame": [{"name": "cv.rgbd.warpFrame", "arg": "image, depth, mask, Rt, cameraMatrix, distCoeff[, warpedImage[, warpedDepth[, warpedMask]]]", "ret": "warpedImage, warpedDepth, warpedMask"}], "cv::samples::addSamplesDataSearchPath": [{"name": "cv.samples.addSamplesDataSearchPath", "arg": "path", "ret": "None"}], "cv::samples::addSamplesDataSearchSubDirectory": [{"name": "cv.samples.addSamplesDataSearchSubDirectory", "arg": "subdir", "ret": "None"}], "cv::samples::findFile": [{"name": "cv.samples.findFile", "arg": "relative_path[, required[, silentMode]]", "ret": "retval"}], "cv::samples::findFileOrKeep": [{"name": "cv.samples.findFileOrKeep", "arg": "relative_path[, silentMode]", "ret": "retval"}], "cv::text::computeNMChannels": [{"name": "cv.text.computeNMChannels", "arg": "_src[, _channels[, _mode]]", "ret": "_channels"}], "cv::text::createERFilterNM1": [{"name": "cv.text.createERFilterNM1", "arg": "cb[, thresholdDelta[, minArea[, maxArea[, minProbability[, nonMaxSuppression[, minProbabilityDiff]]]]]]", "ret": "retval"}, {"name": "cv.text.createERFilterNM1", "arg": "filename[, thresholdDelta[, minArea[, maxArea[, minProbability[, nonMaxSuppression[, minProbabilityDiff]]]]]]", "ret": "retval"}], "cv::text::createERFilterNM2": [{"name": "cv.text.createERFilterNM2", "arg": "cb[, minProbability]", "ret": "retval"}, {"name": "cv.text.createERFilterNM2", "arg": "filename[, minProbability]", "ret": "retval"}], "cv::text::createOCRHMMTransitionsTable": [{"name": "cv.text.createOCRHMMTransitionsTable", "arg": "vocabulary, lexicon", "ret": "retval"}], "cv::text::detectRegions": [{"name": "cv.text.detectRegions", "arg": "image, er_filter1, er_filter2", "ret": "regions"}, {"name": "cv.text.detectRegions", "arg": "image, er_filter1, er_filter2[, method[, filename[, minProbability]]]", "ret": "groups_rects"}], "cv::text::detectTextSWT": [{"name": "cv.text.detectTextSWT", "arg": "input, dark_on_light[, draw[, chainBBs]]", "ret": "result, draw, chainBBs"}], "cv::text::erGrouping": [{"name": "cv.text.erGrouping", "arg": "image, channel, regions[, method[, filename[, minProbablity]]]", "ret": "groups_rects"}], "cv::text::loadClassifierNM1": [{"name": "cv.text.loadClassifierNM1", "arg": "filename", "ret": "retval"}], "cv::text::loadClassifierNM2": [{"name": "cv.text.loadClassifierNM2", "arg": "filename", "ret": "retval"}], "cv::text::loadOCRBeamSearchClassifierCNN": [{"name": "cv.text.loadOCRBeamSearchClassifierCNN", "arg": "filename", "ret": "retval"}], "cv::text::loadOCRHMMClassifier": [{"name": "cv.text.loadOCRHMMClassifier", "arg": "filename, classifier", "ret": "retval"}], "cv::text::loadOCRHMMClassifierCNN": [{"name": "cv.text.loadOCRHMMClassifierCNN", "arg": "filename", "ret": "retval"}], "cv::text::loadOCRHMMClassifierNM": [{"name": "cv.text.loadOCRHMMClassifierNM", "arg": "filename", "ret": "retval"}], "cv::utils::dumpBool": [{"name": "cv.utils.dumpBool", "arg": "argument", "ret": "retval"}], "cv::utils::dumpCString": [{"name": "cv.utils.dumpCString", "arg": "argument", "ret": "retval"}], "cv::utils::dumpDouble": [{"name": "cv.utils.dumpDouble", "arg": "argument", "ret": "retval"}], "cv::utils::dumpFloat": [{"name": "cv.utils.dumpFloat", "arg": "argument", "ret": "retval"}], "cv::utils::dumpInputArray": [{"name": "cv.utils.dumpInputArray", "arg": "argument", "ret": "retval"}], "cv::utils::dumpInputArrayOfArrays": [{"name": "cv.utils.dumpInputArrayOfArrays", "arg": "argument", "ret": "retval"}], "cv::utils::dumpInputOutputArray": [{"name": "cv.utils.dumpInputOutputArray", "arg": "argument", "ret": "retval, argument"}], "cv::utils::dumpInputOutputArrayOfArrays": [{"name": "cv.utils.dumpInputOutputArrayOfArrays", "arg": "argument", "ret": "retval, argument"}], "cv::utils::dumpInt": [{"name": "cv.utils.dumpInt", "arg": "argument", "ret": "retval"}], "cv::utils::dumpSizeT": [{"name": "cv.utils.dumpSizeT", "arg": "argument", "ret": "retval"}], "cv::utils::testAsyncArray": [{"name": "cv.utils.testAsyncArray", "arg": "argument", "ret": "retval"}], "cv::utils::testAsyncException": [{"name": "cv.utils.testAsyncException", "arg": "", "ret": "retval"}], "cv::videoio_registry::getBackendName": [{"name": "cv.videoio_registry.getBackendName", "arg": "api", "ret": "retval"}], "cv::videoio_registry::getBackends": [{"name": "cv.videoio_registry.getBackends", "arg": "", "ret": "retval"}], "cv::videoio_registry::getCameraBackends": [{"name": "cv.videoio_registry.getCameraBackends", "arg": "", "ret": "retval"}], "cv::videoio_registry::getStreamBackends": [{"name": "cv.videoio_registry.getStreamBackends", "arg": "", "ret": "retval"}], "cv::videoio_registry::getWriterBackends": [{"name": "cv.videoio_registry.getWriterBackends", "arg": "", "ret": "retval"}], "cv::xfeatures2d::SIFT_create": [{"name": "cv.xfeatures2d.SIFT_create", "arg": "[, nfeatures[, nOctaveLayers[, contrastThreshold[, edgeThreshold[, sigma]]]]]", "ret": "retval"}], "cv::xfeatures2d::matchGMS": [{"name": "cv.xfeatures2d.matchGMS", "arg": "size1, size2, keypoints1, keypoints2, matches1to2[, withRotation[, withScale[, thresholdFactor]]]", "ret": "matchesGMS"}], "cv::xfeatures2d::matchLOGOS": [{"name": "cv.xfeatures2d.matchLOGOS", "arg": "keypoints1, keypoints2, nn1, nn2, matches1to2", "ret": "None"}], "cv::ximgproc::FastHoughTransform": [{"name": "cv.ximgproc.FastHoughTransform", "arg": "src, dstMatDepth[, dst[, angleRange[, op[, makeSkew]]]]", "ret": "dst"}], "cv::ximgproc::GradientDericheX": [{"name": "cv.ximgproc.GradientDericheX", "arg": "op, alpha, omega[, dst]", "ret": "dst"}], "cv::ximgproc::GradientDericheY": [{"name": "cv.ximgproc.GradientDericheY", "arg": "op, alpha, omega[, dst]", "ret": "dst"}], "cv::ximgproc::HoughPoint2Line": [{"name": "cv.ximgproc.HoughPoint2Line", "arg": "houghPoint, srcImgInfo[, angleRange[, makeSkew[, rules]]]", "ret": "retval"}], "cv::ximgproc::PeiLinNormalization": [{"name": "cv.ximgproc.PeiLinNormalization", "arg": "I[, T]", "ret": "T"}], "cv::ximgproc::amFilter": [{"name": "cv.ximgproc.amFilter", "arg": "joint, src, sigma_s, sigma_r[, dst[, adjust_outliers]]", "ret": "dst"}], "cv::ximgproc::anisotropicDiffusion": [{"name": "cv.ximgproc.anisotropicDiffusion", "arg": "src, alpha, K, niters[, dst]", "ret": "dst"}], "cv::ximgproc::bilateralTextureFilter": [{"name": "cv.ximgproc.bilateralTextureFilter", "arg": "src[, dst[, fr[, numIter[, sigmaAlpha[, sigmaAvg]]]]]", "ret": "dst"}], "cv::ximgproc::colorMatchTemplate": [{"name": "cv.ximgproc.colorMatchTemplate", "arg": "img, templ[, result]", "ret": "result"}], "cv::ximgproc::computeBadPixelPercent": [{"name": "cv.ximgproc.computeBadPixelPercent", "arg": "GT, src, ROI[, thresh]", "ret": "retval"}], "cv::ximgproc::computeMSE": [{"name": "cv.ximgproc.computeMSE", "arg": "GT, src, ROI", "ret": "retval"}], "cv::ximgproc::contourSampling": [{"name": "cv.ximgproc.contourSampling", "arg": "src, nbElt[, out]", "ret": "out"}], "cv::ximgproc::covarianceEstimation": [{"name": "cv.ximgproc.covarianceEstimation", "arg": "src, windowRows, windowCols[, dst]", "ret": "dst"}], "cv::ximgproc::createAMFilter": [{"name": "cv.ximgproc.createAMFilter", "arg": "sigma_s, sigma_r[, adjust_outliers]", "ret": "retval"}], "cv::ximgproc::createContourFitting": [{"name": "cv.ximgproc.createContourFitting", "arg": "[, ctr[, fd]]", "ret": "retval"}], "cv::ximgproc::createDTFilter": [{"name": "cv.ximgproc.createDTFilter", "arg": "guide, sigmaSpatial, sigmaColor[, mode[, numIters]]", "ret": "retval"}], "cv::ximgproc::createDisparityWLSFilter": [{"name": "cv.ximgproc.createDisparityWLSFilter", "arg": "matcher_left", "ret": "retval"}], "cv::ximgproc::createDisparityWLSFilterGeneric": [{"name": "cv.ximgproc.createDisparityWLSFilterGeneric", "arg": "use_confidence", "ret": "retval"}], "cv::ximgproc::createEdgeAwareInterpolator": [{"name": "cv.ximgproc.createEdgeAwareInterpolator", "arg": "", "ret": "retval"}], "cv::ximgproc::createEdgeBoxes": [{"name": "cv.ximgproc.createEdgeBoxes", "arg": "[, alpha[, beta[, eta[, minScore[, maxBoxes[, edgeMinMag[, edgeMergeThr[, clusterMinMag[, maxAspectRatio[, minBoxArea[, gamma[, kappa]]]]]]]]]]]]", "ret": "retval"}], "cv::ximgproc::createFastBilateralSolverFilter": [{"name": "cv.ximgproc.createFastBilateralSolverFilter", "arg": "guide, sigma_spatial, sigma_luma, sigma_chroma[, lambda[, num_iter[, max_tol]]]", "ret": "retval"}], "cv::ximgproc::createFastGlobalSmootherFilter": [{"name": "cv.ximgproc.createFastGlobalSmootherFilter", "arg": "guide, lambda, sigma_color[, lambda_attenuation[, num_iter]]", "ret": "retval"}], "cv::ximgproc::createFastLineDetector": [{"name": "cv.ximgproc.createFastLineDetector", "arg": "[, _length_threshold[, _distance_threshold[, _canny_th1[, _canny_th2[, _canny_aperture_size[, _do_merge]]]]]]", "ret": "retval"}], "cv::ximgproc::createGuidedFilter": [{"name": "cv.ximgproc.createGuidedFilter", "arg": "guide, radius, eps", "ret": "retval"}], "cv::ximgproc::createQuaternionImage": [{"name": "cv.ximgproc.createQuaternionImage", "arg": "img[, qimg]", "ret": "qimg"}], "cv::ximgproc::createRFFeatureGetter": [{"name": "cv.ximgproc.createRFFeatureGetter", "arg": "", "ret": "retval"}], "cv::ximgproc::createRICInterpolator": [{"name": "cv.ximgproc.createRICInterpolator", "arg": "", "ret": "retval"}], "cv::ximgproc::createRightMatcher": [{"name": "cv.ximgproc.createRightMatcher", "arg": "matcher_left", "ret": "retval"}], "cv::ximgproc::createStructuredEdgeDetection": [{"name": "cv.ximgproc.createStructuredEdgeDetection", "arg": "model[, howToGetFeatures]", "ret": "retval"}], "cv::ximgproc::createSuperpixelLSC": [{"name": "cv.ximgproc.createSuperpixelLSC", "arg": "image[, region_size[, ratio]]", "ret": "retval"}], "cv::ximgproc::createSuperpixelSEEDS": [{"name": "cv.ximgproc.createSuperpixelSEEDS", "arg": "image_width, image_height, image_channels, num_superpixels, num_levels[, prior[, histogram_bins[, double_step]]]", "ret": "retval"}], "cv::ximgproc::createSuperpixelSLIC": [{"name": "cv.ximgproc.createSuperpixelSLIC", "arg": "image[, algorithm[, region_size[, ruler]]]", "ret": "retval"}], "cv::ximgproc::dtFilter": [{"name": "cv.ximgproc.dtFilter", "arg": "guide, src, sigmaSpatial, sigmaColor[, dst[, mode[, numIters]]]", "ret": "dst"}], "cv::ximgproc::edgePreservingFilter": [{"name": "cv.ximgproc.edgePreservingFilter", "arg": "src, d, threshold[, dst]", "ret": "dst"}], "cv::ximgproc::fastBilateralSolverFilter": [{"name": "cv.ximgproc.fastBilateralSolverFilter", "arg": "guide, src, confidence[, dst[, sigma_spatial[, sigma_luma[, sigma_chroma[, lambda[, num_iter[, max_tol]]]]]]]", "ret": "dst"}], "cv::ximgproc::fastGlobalSmootherFilter": [{"name": "cv.ximgproc.fastGlobalSmootherFilter", "arg": "guide, src, lambda, sigma_color[, dst[, lambda_attenuation[, num_iter]]]", "ret": "dst"}], "cv::ximgproc::fourierDescriptor": [{"name": "cv.ximgproc.fourierDescriptor", "arg": "src[, dst[, nbElt[, nbFD]]]", "ret": "dst"}], "cv::ximgproc::getDisparityVis": [{"name": "cv.ximgproc.getDisparityVis", "arg": "src[, dst[, scale]]", "ret": "dst"}], "cv::ximgproc::guidedFilter": [{"name": "cv.ximgproc.guidedFilter", "arg": "guide, src, radius, eps[, dst[, dDepth]]", "ret": "dst"}], "cv::ximgproc::jointBilateralFilter": [{"name": "cv.ximgproc.jointBilateralFilter", "arg": "joint, src, d, sigmaColor, sigmaSpace[, dst[, borderType]]", "ret": "dst"}], "cv::ximgproc::l0Smooth": [{"name": "cv.ximgproc.l0Smooth", "arg": "src[, dst[, lambda[, kappa]]]", "ret": "dst"}], "cv::ximgproc::niBlackThreshold": [{"name": "cv.ximgproc.niBlackThreshold", "arg": "_src, maxValue, type, blockSize, k[, _dst[, binarizationMethod[, r]]]", "ret": "_dst"}], "cv::ximgproc::qconj": [{"name": "cv.ximgproc.qconj", "arg": "qimg[, qcimg]", "ret": "qcimg"}], "cv::ximgproc::qdft": [{"name": "cv.ximgproc.qdft", "arg": "img, flags, sideLeft[, qimg]", "ret": "qimg"}], "cv::ximgproc::qmultiply": [{"name": "cv.ximgproc.qmultiply", "arg": "src1, src2[, dst]", "ret": "dst"}], "cv::ximgproc::qunitary": [{"name": "cv.ximgproc.qunitary", "arg": "qimg[, qnimg]", "ret": "qnimg"}], "cv::ximgproc::readGT": [{"name": "cv.ximgproc.readGT", "arg": "src_path[, dst]", "ret": "retval, dst"}], "cv::ximgproc::rollingGuidanceFilter": [{"name": "cv.ximgproc.rollingGuidanceFilter", "arg": "src[, dst[, d[, sigmaColor[, sigmaSpace[, numOfIter[, borderType]]]]]]", "ret": "dst"}], "cv::ximgproc::thinning": [{"name": "cv.ximgproc.thinning", "arg": "src[, dst[, thinningType]]", "ret": "dst"}], "cv::ximgproc::transformFD": [{"name": "cv.ximgproc.transformFD", "arg": "src, t[, dst[, fdContour]]", "ret": "dst"}], "cv::ximgproc::weightedMedianFilter": [{"name": "cv.ximgproc.weightedMedianFilter", "arg": "joint, src, r[, dst[, sigma[, weightType[, mask]]]]", "ret": "dst"}], "cv::ximgproc::segmentation::createGraphSegmentation": [{"name": "cv.ximgproc.segmentation.createGraphSegmentation", "arg": "[, sigma[, k[, min_size]]]", "ret": "retval"}], "cv::ximgproc::segmentation::createSelectiveSearchSegmentation": [{"name": "cv.ximgproc.segmentation.createSelectiveSearchSegmentation", "arg": "", "ret": "retval"}], "cv::ximgproc::segmentation::createSelectiveSearchSegmentationStrategyColor": [{"name": "cv.ximgproc.segmentation.createSelectiveSearchSegmentationStrategyColor", "arg": "", "ret": "retval"}], "cv::ximgproc::segmentation::createSelectiveSearchSegmentationStrategyFill": [{"name": "cv.ximgproc.segmentation.createSelectiveSearchSegmentationStrategyFill", "arg": "", "ret": "retval"}], "cv::ximgproc::segmentation::createSelectiveSearchSegmentationStrategyMultiple": [{"name": "cv.ximgproc.segmentation.createSelectiveSearchSegmentationStrategyMultiple", "arg": "", "ret": "retval"}, {"name": "cv.ximgproc.segmentation.createSelectiveSearchSegmentationStrategyMultiple", "arg": "s1", "ret": "retval"}, {"name": "cv.ximgproc.segmentation.createSelectiveSearchSegmentationStrategyMultiple", "arg": "s1, s2", "ret": "retval"}, {"name": "cv.ximgproc.segmentation.createSelectiveSearchSegmentationStrategyMultiple", "arg": "s1, s2, s3", "ret": "retval"}, {"name": "cv.ximgproc.segmentation.createSelectiveSearchSegmentationStrategyMultiple", "arg": "s1, s2, s3, s4", "ret": "retval"}], "cv::ximgproc::segmentation::createSelectiveSearchSegmentationStrategySize": [{"name": "cv.ximgproc.segmentation.createSelectiveSearchSegmentationStrategySize", "arg": "", "ret": "retval"}], "cv::ximgproc::segmentation::createSelectiveSearchSegmentationStrategyTexture": [{"name": "cv.ximgproc.segmentation.createSelectiveSearchSegmentationStrategyTexture", "arg": "", "ret": "retval"}], "cv::xphoto::applyChannelGains": [{"name": "cv.xphoto.applyChannelGains", "arg": "src, gainB, gainG, gainR[, dst]", "ret": "dst"}], "cv::xphoto::bm3dDenoising": [{"name": "cv.xphoto.bm3dDenoising", "arg": "src, dstStep1[, dstStep2[, h[, templateWindowSize[, searchWindowSize[, blockMatchingStep1[, blockMatchingStep2[, groupSize[, slidingStep[, beta[, normType[, step[, transformType]]]]]]]]]]]]", "ret": "dstStep1, dstStep2"}, {"name": "cv.xphoto.bm3dDenoising", "arg": "src[, dst[, h[, templateWindowSize[, searchWindowSize[, blockMatchingStep1[, blockMatchingStep2[, groupSize[, slidingStep[, beta[, normType[, step[, transformType]]]]]]]]]]]]", "ret": "dst"}], "cv::xphoto::createGrayworldWB": [{"name": "cv.xphoto.createGrayworldWB", "arg": "", "ret": "retval"}], "cv::xphoto::createLearningBasedWB": [{"name": "cv.xphoto.createLearningBasedWB", "arg": "[, path_to_model]", "ret": "retval"}], "cv::xphoto::createSimpleWB": [{"name": "cv.xphoto.createSimpleWB", "arg": "", "ret": "retval"}], "cv::xphoto::createTonemapDurand": [{"name": "cv.xphoto.createTonemapDurand", "arg": "[, gamma[, contrast[, saturation[, sigma_color[, sigma_space]]]]]", "ret": "retval"}], "cv::xphoto::dctDenoising": [{"name": "cv.xphoto.dctDenoising", "arg": "src, dst, sigma[, psize]", "ret": "None"}], "cv::xphoto::inpaint": [{"name": "cv.xphoto.inpaint", "arg": "src, mask, dst, algorithmType", "ret": "None"}], "cv::xphoto::oilPainting": [{"name": "cv.xphoto.oilPainting", "arg": "src, size, dynRatio, code[, dst]", "ret": "dst"}, {"name": "cv.xphoto.oilPainting", "arg": "src, size, dynRatio[, dst]", "ret": "dst"}]}